<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on (p)retired</title>
    <link>https://pretired.dazwilkin.com/posts/</link>
    <description>Recent content in Posts on (p)retired</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Jun 2025 00:00:00 -0700</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gemini CLI (3/3)</title>
      <link>https://pretired.dazwilkin.com/posts/250630/</link>
      <pubDate>Mon, 30 Jun 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250630/</guid>
      <description>&lt;h3 id=&#34;update-2025-07-08&#34;&gt;Update 2025-07-08&lt;/h3&gt;&#xA;&lt;p&gt;Gemini CLI supports &lt;a href=&#34;https://github.com/google-gemini/gemini-cli/blob/0275ab0108e9a411d90d8ef8c8d70e21e498d81a/docs/tools/mcp-server.md#http-based-mcp-server&#34;&gt;HTTP-based MCP server&lt;/a&gt; integration&lt;/p&gt;&#xA;&lt;p&gt;So, it&amp;rsquo;s possible to replace the &lt;code&gt;.gemini/settings.json&lt;/code&gt; included in the original post with:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JSON&#34; data-lang=&#34;JSON&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;theme&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Default&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;mcpServers&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ackal-mcp-server&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;httpUrl&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://localhost:7777/mcp&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;timeout&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prometheus-mcp-server&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;httpUrl&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://prometheus.{tailnet}/mcp&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;timeout&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;selectedAuthType&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gemini-api-key&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This solution permits the addition of &lt;code&gt;headers&lt;/code&gt; too for e.g. including &lt;code&gt;Authorization&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;original&#34;&gt;Original&lt;/h3&gt;&#xA;&lt;p&gt;Okay, so not &amp;ldquo;Gemini Code Assist&amp;rdquo; but sufficiently similar that I think it warrants the &amp;ldquo;3/3&amp;rdquo; appellation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gemini Code Assist &#39;agent&#39; mode without `npx mcp-remote` (2/3)</title>
      <link>https://pretired.dazwilkin.com/posts/250627/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250627/</guid>
      <description>&lt;p&gt;Solved!&lt;/p&gt;&#xA;&lt;p&gt;Ugh.&lt;/p&gt;&#xA;&lt;p&gt;Before I continue, one important detail from yesterday&amp;rsquo;s experience which I think I didn&amp;rsquo;t clarify is that, unlike the Copilot agent, it appears (!?) that Gemini agent only supports integration with MCP servers via stdio. As a result, the only way to integrate with HTTP-based MCP servers (local or remote) is to proxy traffic through stdio as &lt;a href=&#34;https://www.npmjs.com/package/mcp-remote&#34;&gt;&lt;code&gt;mcp-remote&lt;/code&gt;&lt;/a&gt; and the Rust example herein.&lt;/p&gt;&#xA;&lt;p&gt;The most helpful change was to take a hint from the NPM &lt;a href=&#34;https://www.npmjs.com/package/mcp-remote&#34;&gt;&lt;code&gt;mcp-remote&lt;/code&gt;&lt;/a&gt; and create a log file. This helps because, otherwise the &lt;code&gt;mcp-remote&lt;/code&gt; process, because it&amp;rsquo;s launched by Visual Studio Code, well Gemini Code Assist agent, isn&amp;rsquo;t trivial to debug.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gemini Code Assist &#39;agent&#39; mode without `npx mcp-remote` (1/3)</title>
      <link>https://pretired.dazwilkin.com/posts/250626/</link>
      <pubDate>Thu, 26 Jun 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250626/</guid>
      <description>&lt;p&gt;Former Microsoftie and Googler:&lt;/p&gt;&#xA;&lt;p&gt;Good documentation &lt;a href=&#34;https://learn.microsoft.com/en-us/microsoft-copilot-studio/agent-extend-action-mcp&#34;&gt;Extend your agent with Model Context Protocol&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Not such good documentation: &lt;a href=&#34;https://developers.google.com/gemini-code-assist/docs/use-agentic-chat-pair-programmer&#34;&gt;Using agentic chat as a pair programmer&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Definition of &amp;ldquo;good&amp;rdquo; being, I was able to follow the clear instructions and it worked first time. Well done, Microsoft!&lt;/p&gt;&#xA;&lt;p&gt;This space is moving so quickly and I&amp;rsquo;m happy to alpha test these companies&amp;rsquo; solutions but (a) Google&amp;rsquo;s portfolio is a mess. This week I&amp;rsquo;ve tried (and failed) to use Gemini CLI (because I don&amp;rsquo;t want to run Node.JS on my host machine and it doesn&amp;rsquo;t work in a container: &lt;a href=&#34;https://github.com/google-gemini/gemini-cli/issues/1437&#34;&gt;issue #1437&lt;/a&gt;) and now this.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tailscale client metrics service discovery to Prometheus</title>
      <link>https://pretired.dazwilkin.com/posts/250620/</link>
      <pubDate>Fri, 20 Jun 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250620/</guid>
      <description>&lt;p&gt;I couldn&amp;rsquo;t summarize this in a title (even with an LLM&amp;rsquo;s help):&lt;/p&gt;&#xA;&lt;p&gt;I wanted to:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Run a Tailscale service discovery agent&lt;/li&gt;&#xA;&lt;li&gt;On a Tailscale node outside of the Kubernetes cluster&lt;/li&gt;&#xA;&lt;li&gt;Using Podman Quadlet&lt;/li&gt;&#xA;&lt;li&gt;Accessing it from the Kubernetes Cluster using the Tailscale&amp;rsquo;s egress proxy&lt;/li&gt;&#xA;&lt;li&gt;Accessing the proxy with a &lt;code&gt;kube-prometheus&lt;/code&gt; &lt;code&gt;ScrapeConfig&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;In order that Prometheus would scrape the container for Tailscale client metrics&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Long-winded? Yes but I had an underlying need in running the Tailscale Service Discoovery remotely and this configuration helped me achieve that.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus MCP Server</title>
      <link>https://pretired.dazwilkin.com/posts/250616/</link>
      <pubDate>Mon, 16 Jun 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250616/</guid>
      <description>&lt;p&gt;I was unable to find a &lt;a href=&#34;https://modelcontextprotocol.io/&#34;&gt;Model Context Protocol (MCP)&lt;/a&gt; server implementation for &lt;a href=&#34;https://prometheus.io&#34;&gt;Prometheus&lt;/a&gt;. I had a quiet weekend and so I&amp;rsquo;ve been writing one: &lt;a href=&#34;https://github.com/DazWilkin/prometheus-mcp-server&#34;&gt;&lt;code&gt;prometheus-mcp-server&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I used the code from the &lt;a href=&#34;https://pretired.dazwilkin.com/posts/250612/&#34;&gt;MCP for gRPC Health Checking protocol&lt;/a&gt; that I wrote about previously as a guide.&lt;/p&gt;&#xA;&lt;p&gt;I wrote a series of &lt;code&gt;stdin&lt;/code&gt; and HTTP tests to have confidence that the service is working correctly but I had no MCP host.&lt;/p&gt;&#xA;&lt;p&gt;I discovered that &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt; through its &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=GitHub.copilot&#34;&gt;GitHub Copilot&lt;/a&gt; extension functions has a &lt;a href=&#34;https://code.visualstudio.com/docs/copilot/chat/mcp-servers&#34;&gt;preview to use MCP servers&lt;/a&gt; i.e. function as an MCP host and access MCP servers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MCP for gRPC Health Checking protocol</title>
      <link>https://pretired.dazwilkin.com/posts/250612/</link>
      <pubDate>Thu, 12 Jun 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250612/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://modelcontextprotocol.io/introduction&#34;&gt;Model Context Protocol (MCP)&lt;/a&gt; is &amp;ldquo;all the rage&amp;rdquo; these days.&lt;/p&gt;&#xA;&lt;p&gt;I stumbled upon &lt;a href=&#34;https://github.com/redpanda-data/protoc-gen-go-mcp&#34;&gt;&lt;code&gt;protoc-gen-go-mcp&lt;/code&gt;&lt;/a&gt; and think it&amp;rsquo;s an elegant application of two technologies: programmatically generating an MCP server from a gRPC protobuf.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m considering building an MCP server for &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt; but, thought I&amp;rsquo;d start with something simple: &lt;a href=&#34;https://grpc.io/docs/guides/health-checking/&#34;&gt;gRPC Health Checking protocol&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I was surprised to learn as I was doing this that there&amp;rsquo;s a new &lt;a href=&#34;https://github.com/grpc/grpc-proto/blob/23f5b568eefcb876e6ebc3b01725f1f20cff999e/grpc/health/v1/health.proto#L74&#34;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; (&lt;a href=&#34;https://github.com/grpc/grpc-proto/pull/143&#34;&gt;Add &lt;code&gt;List&lt;/code&gt; method to gRPC Health service #143&lt;/a&gt;) added to &lt;code&gt;grpc.health.v1.Health&lt;/code&gt;. My (Ackal) healthcheck server does not yet implement it (see later).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuring Envoy to proxy Google Cloud Run v2</title>
      <link>https://pretired.dazwilkin.com/posts/250429/</link>
      <pubDate>Tue, 29 Apr 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250429/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m building an emulator for &lt;a href=&#34;https://cloud.google.com/run&#34;&gt;Cloud Run&lt;/a&gt;. As I considered the solution, I assumed (more later) that I could implement Google&amp;rsquo;s gRPC interface for &lt;a href=&#34;https://github.com/googleapis/googleapis/tree/83df85b45a5d3e85b48f2571e1c8e57cdfd57e6c/google/cloud/run&#34;&gt;Cloud Run&lt;/a&gt; and use &lt;a href=&#34;https://www.envoyproxy.io/&#34;&gt;Envoy&lt;/a&gt; to proxy HTTP/REST requests to the gRPC service using Envoy&amp;rsquo;s &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/grpc_json_transcoder_filter&#34;&gt;gRPC-JSON transcoder&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Google calls this process &lt;a href=&#34;https://cloud.google.com/endpoints/docs/grpc/transcoding&#34;&gt;Transcoding HTTP/JSON to gRPC&lt;/a&gt; which I think it a better description.&lt;/p&gt;&#xA;&lt;p&gt;Google&amp;rsquo;s Cloud Run &lt;code&gt;v2&lt;/code&gt; (&lt;code&gt;v1&lt;/code&gt; is no longer published to the &lt;a href=&#34;https://github.com/googleapis/googleapis&#34;&gt;&lt;code&gt;googleapis&lt;/code&gt;&lt;/a&gt; repo) &lt;a href=&#34;https://github.com/googleapis/googleapis/blob/83df85b45a5d3e85b48f2571e1c8e57cdfd57e6c/google/cloud/run/v2/service.proto&#34;&gt;&lt;code&gt;service.proto&lt;/code&gt;&lt;/a&gt; includes the following &lt;code&gt;Services&lt;/code&gt; definition for &lt;code&gt;CreateService&lt;/code&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Migrating Prometheus Exporters to Kubernetes</title>
      <link>https://pretired.dazwilkin.com/posts/250325/</link>
      <pubDate>Tue, 25 Mar 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250325/</guid>
      <description>&lt;p&gt;I have built &lt;a href=&#34;https://prometheus.io&#34;&gt;Prometheus&lt;/a&gt; &lt;a href=&#34;https://prometheus.io/docs/instrumenting/exporters/&#34;&gt;Exporters&lt;/a&gt; for multiple cloud platforms to track resources deployed across clouds:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/azure-exporter&#34;&gt;Prometheus Exporter for Azure&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/crtsh-exporter&#34;&gt;Prometheus Exporter for crt.sh&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/fly-exporter&#34;&gt;Prometheus Exporter for Fly.io&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/goatcounter-exporter&#34;&gt;Prometheus Exporter for GoatCounter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/ga-exporter&#34;&gt;Prometheus Exporter for Google Analytics&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/gcp-exporter&#34;&gt;Prometheus Exporter for Google Cloud&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/koyeb-exporter&#34;&gt;Prometheus Exporter for Koyeb&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/linode-exporter&#34;&gt;Prometheus Exporter for Linode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/porkbun-exporter&#34;&gt;Prometheus Exporter for PorkBun&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/updown-exporter&#34;&gt;Prometheus Exporter for updown.io&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/vultr-exporter&#34;&gt;Prometheus Exporter for Vultr&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Additionally, I&amp;rsquo;ve written two status service exporters:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/gcp-status&#34;&gt;Prometheus Exporter for GCP Status&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/vultr-status-exporter&#34;&gt;Prometheus Exporter for Vultr Status&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;These exporters are all derived from an exemplar &lt;a href=&#34;https://github.com/metalmatze/digitalocean_exporter&#34;&gt;&lt;code&gt;DigitalOcean Exporter&lt;/code&gt;&lt;/a&gt; written by &lt;a href=&#34;https://github.com/metalmatze&#34;&gt;metalmatze&lt;/a&gt; for which I maintain a &lt;a href=&#34;https://github.com/DazWilkin/digitalocean_exporter&#34;&gt;fork&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Exporter for USGS Water Data service</title>
      <link>https://pretired.dazwilkin.com/posts/250227/</link>
      <pubDate>Thu, 27 Feb 2025 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250227/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m a little obsessed with creating Prometheus Exporters:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/azure-exporter&#34;&gt;Prometheus Exporter for Azure&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/crtsh-exporter&#34;&gt;Prometheus Exporter for crt.sh&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/fly-exporter&#34;&gt;Prometheus Exporter for Fly.io&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/goatcounter-exporter&#34;&gt;Prometheus Exporter for GoatCounter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/gcp-exporter&#34;&gt;Prometheus Exporter for Google Cloud&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/koyeb-exporter&#34;&gt;Prometheus Exporter for Koyeb&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/linode-exporter&#34;&gt;Prometheus Exporter for Linode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/porkbun-exporter&#34;&gt;Prometheus Exporter for PorkBun&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/updown-exporter&#34;&gt;Prometheus Exporter for updown.io&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/vultr-exporter&#34;&gt;Prometheus Exporter for Vultr&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;All of these were written to scratch an itch.&lt;/p&gt;&#xA;&lt;p&gt;In the case of the cloud platform exporters (Azure, Fly, Google, Linode, Vultr etc.), it&amp;rsquo;s an overriding anxiety that I&amp;rsquo;ll leave resources deployed on these platforms and, running an exporter that ships alerts to &lt;a href=&#34;https://pushover.net/&#34;&gt;Pushover&lt;/a&gt; and Gmail, provides me a support mechanism for me.&lt;/p&gt;</description>
    </item>
    <item>
      <title>gRPC Firestore `Listen` in Rust</title>
      <link>https://pretired.dazwilkin.com/posts/250213/</link>
      <pubDate>Thu, 13 Feb 2025 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250213/</guid>
      <description>&lt;p&gt;Obsessing on &lt;a href=&#34;https://pretired.dazwilkin.com/posts/250210/&#34;&gt;gRPC Firestore &lt;code&gt;Listen&lt;/code&gt;&lt;/a&gt; somewhat but it&amp;rsquo;s also a good learning opportunity for me to write stuff in Rust. This doesn&amp;rsquo;t work against Google&amp;rsquo;s public endpoint (possibly for the same reason that gRPCurl doesn&amp;rsquo;t work either) but this does work against the Go server described in the other post.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m also documenting here because I always encounter challenges using TLS with Rust (and this documents 2 working ways to do this with gRPC) as well as references two interesting (rust) examples that use Google services.&lt;/p&gt;</description>
    </item>
    <item>
      <title>gRPC Firestore `Listen`</title>
      <link>https://pretired.dazwilkin.com/posts/250210/</link>
      <pubDate>Mon, 10 Feb 2025 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250210/</guid>
      <description>&lt;p&gt;A question on Stack overflow &lt;a href=&#34;https://stackoverflow.com/questions/79422094&#34;&gt;Firestore gRPC Listen does not send deletions&lt;/a&gt; piqued by interest but created a second problem for me: I&amp;rsquo;m unable to get its &lt;a href=&#34;https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.v1#google.firestore.v1.Firestore.Listen&#34;&gt;&lt;code&gt;Listen&lt;/code&gt;&lt;/a&gt; method to work using &lt;a href=&#34;https://github.com/fullstorydev/grpcurl&#34;&gt;gRPCurl&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;For what follows, you will need:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;a Google Project with Firestore enabled and a database (default: &lt;code&gt;(default)&lt;/code&gt;) containing a Collection (e.g. &lt;code&gt;Dogs&lt;/code&gt;) with at least one Document (e.g. &lt;code&gt;freddie&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/googleapis/googleapis&#34;&gt;&lt;code&gt;googleapis&lt;/code&gt;&lt;/a&gt; cloned locally in order to access Protobufs&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;client&lt;/th&gt;&#xA;          &lt;th&gt;server&lt;/th&gt;&#xA;          &lt;th&gt;R&lt;/th&gt;&#xA;          &lt;th&gt;See&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;gRPCurl&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;firestore.googleapis.com:443&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;✅&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#grpcurl-listen-against-google-endpoint&#34;&gt;link&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Go client&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;firestore.googleapis.com:443&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;✅&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#go-client-listen-against-google-endpoint&#34;&gt;link&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;gRPCurl&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Go server&lt;/td&gt;&#xA;          &lt;td&gt;✅&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#grpcurl-listen-against-go-server&#34;&gt;link&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Go client&lt;/td&gt;&#xA;          &lt;td&gt;Go server&lt;/td&gt;&#xA;          &lt;td&gt;✅&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;#go-client-listen-against-go-server&#34;&gt;link&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;I subsequently tried this using &lt;a href=&#34;https://www.postman.com/&#34;&gt;Postman&lt;/a&gt; and it also works (✅).&lt;/p&gt;</description>
    </item>
    <item>
      <title>gRPC-Web w/ FauxRPC and Rust</title>
      <link>https://pretired.dazwilkin.com/posts/241113/</link>
      <pubDate>Wed, 13 Nov 2024 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/241113/</guid>
      <description>&lt;p&gt;After &lt;a href=&#34;https://pretired.dazwilkin.com/posts/241025/&#34;&gt;recently&lt;/a&gt; discovering &lt;a href=&#34;https://github.com/sudorandom/fauxrpc&#34;&gt;FauxRPC&lt;/a&gt;, I was sufficiently impressed that I decided to use it to test &lt;a href=&#34;https://www.ack.al&#34;&gt;Ackal&lt;/a&gt;&amp;rsquo;s gRPC services using rust.&lt;/p&gt;&#xA;&lt;p&gt;FauxRPC provides &lt;a href=&#34;https://fauxrpc.com/docs/server/multi-protocol-support/&#34;&gt;multi-protocol support&lt;/a&gt; and so, after successfully implementing the &lt;em&gt;faux&lt;/em&gt; gRPC client tests, I was compelled to try gRPC-Web too. For no immediate benefit other than, it&amp;rsquo;s there, it&amp;rsquo;s free and it&amp;rsquo;s interesting. As an aside, the &lt;em&gt;faux&lt;/em&gt; REST client tests worked without issue using &lt;a href=&#34;https://crates.io/crates/reqwest&#34;&gt;Reqwest&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Unfortunately, my optimism hit a wall with gRPC-Web and what follows is a summary of my unresolved issue.&lt;/p&gt;</description>
    </item>
    <item>
      <title>FauxRPC using gRPCurl, Golang and rust</title>
      <link>https://pretired.dazwilkin.com/posts/241025/</link>
      <pubDate>Fri, 25 Oct 2024 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/241025/</guid>
      <description>&lt;p&gt;Read &lt;a href=&#34;https://kmcd.dev/posts/fauxrpc-testcontainers/&#34;&gt;FauxRPC + Testcontainers&lt;/a&gt; on Hacker News and was intrigued. I spent a little more time &amp;ldquo;evaluating&amp;rdquo; this than I&amp;rsquo;d planned because I&amp;rsquo;m forcing myself to use rust as much as possible and my ignorance (see below) caused me some challenges.&lt;/p&gt;&#xA;&lt;p&gt;The technology is interesting and works well. The experience helped me explore &lt;a href=&#34;https://testcontainers.com/&#34;&gt;Testcontainers&lt;/a&gt; too which I&amp;rsquo;d heard about but not explored until this week.&lt;/p&gt;&#xA;&lt;p&gt;For my future self:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;What&lt;/th&gt;&#xA;          &lt;th&gt;What?&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://fauxrpc.com/&#34;&gt;FauxRPC&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;A general-purpose tool (built using &lt;a href=&#34;https://buf.build/&#34;&gt;Buf&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://connectrpc.com/&#34;&gt;Connect&lt;/a&gt;) that includes registry and stub (gRPC) services that can be (programmatically) configured (using a Protobuf descriptor) and stubs (example method responses) to help test gRPC implementations.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://testcontainers.com/&#34;&gt;Testcontainers&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Write code (e.g. rust) to create and interact (test)services (running in [Docker] containers).&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://connectrpc.com/&#34;&gt;Connect&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;(More than a) gRPC implementation used by FauxRPC&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/fullstorydev/grpcurl&#34;&gt;gRPCurl&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;A command-line gRPC tool.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;I started following along with FauxRPC&amp;rsquo;s &lt;a href=&#34;https://fauxrpc.com/docs/testcontainers/&#34;&gt;Testcontainers&lt;/a&gt; example but, being unfamiliar with Connect, I wasn&amp;rsquo;t familiar with its Eliza service. The service is available on &lt;code&gt;demo.connectrpc.com:443&lt;/code&gt; and is described using &lt;a href=&#34;https://github.com/connectrpc/examples-go/blob/main/proto/connectrpc/eliza/v1/eliza.proto&#34;&gt;&lt;code&gt;eliza.proto&lt;/code&gt;&lt;/a&gt; as part of &lt;a href=&#34;https://github.com/connectrpc/examples-go&#34;&gt;&lt;code&gt;examples-go&lt;/code&gt;&lt;/a&gt;. Had I realized this sooner, I would have used this example rather than the Health Checking protocol.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cloud Run with a gRPC probe</title>
      <link>https://pretired.dazwilkin.com/posts/240927/</link>
      <pubDate>Fri, 27 Sep 2024 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240927/</guid>
      <description>&lt;p&gt;Cloud Run supports &lt;a href=&#34;https://cloud.google.com/run/docs/configuring/healthchecks&#34;&gt;gRPC startup|liveness probes&lt;/a&gt; which I&amp;rsquo;d not used before.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m using &lt;a href=&#34;https://cloud.google.com/run/docs/reference/rest&#34;&gt;Cloud Run&lt;/a&gt; v2 and specifically &lt;a href=&#34;https://cloud.google.com/run/docs/reference/rest/v2/projects.locations.services/create&#34;&gt;&lt;code&gt;projects.locations.services.create&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://cloud.google.com/run/docs/reference/rest/v2/projects.locations.services#Service&#34;&gt;&lt;code&gt;Service&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PROJECT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;REGION&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;REPO&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;..&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Must be in an Artifact Registry repo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IMAGE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;REGION&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-docker.pkg.dev/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;REPO&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Run v2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ENDPOINT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://run.googleapis.com/v2&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PARENT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;projects/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/locations/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;REGION&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SERVICE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I like to use &lt;a href=&#34;https://jsonnet.org/&#34;&gt;Jsonnet&lt;/a&gt; (specifically &lt;a href=&#34;https://github.com/google/go-jsonnet&#34;&gt;&lt;code&gt;go-jsonnet&lt;/code&gt;&lt;/a&gt;) to help templating Kubernetes(-like) deployments.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;cloudrun.jsonnet&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsonnet&#34; data-lang=&#34;jsonnet&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; project &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std.extVar(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;project&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; region &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std.extVar(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;region&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; service &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std.extVar(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;service&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; image &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std.extVar(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; port &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; health_checking_service &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;#34;labels&amp;#34;:{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;#34;type&amp;#34;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;#34;annotations&amp;#34;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;#34;type&amp;#34;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;#34;template&amp;#34;:{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;#34;containers&amp;#34;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;#34;name&amp;#34;: service,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;#34;image&amp;#34;: image,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;#34;args&amp;#34;: [],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;#34;resources&amp;#34;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &amp;#34;limits&amp;#34;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &amp;#34;cpu&amp;#34;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1000m&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &amp;#34;memory&amp;#34;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;512Mi&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;#34;ports&amp;#34;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &amp;#34;name&amp;#34;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http1&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &amp;#34;containerPort&amp;#34;: port&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;#34;startupProbe&amp;#34;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &amp;#34;grpc&amp;#34;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &amp;#34;port&amp;#34;: port,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &amp;#34;service&amp;#34;: health_checking_service&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;#34;scaling&amp;#34;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;#34;maxInstanceCount&amp;#34;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And deploy it using:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Trivy vulnerability scanning</title>
      <link>https://pretired.dazwilkin.com/posts/240918/</link>
      <pubDate>Wed, 18 Sep 2024 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240918/</guid>
      <description>&lt;p&gt;I build (and therefore) manage many container images. It&amp;rsquo;s easy (common?) to overlook that these images contain vulnerabilities, hopefully vulns that are fixed and that the images must be rebuilt to accommodate these changes.&lt;/p&gt;&#xA;&lt;p&gt;I have used Google&amp;rsquo;s &lt;strong&gt;very&lt;/strong&gt; expensive container vulnerability scanning tool but wanted something cheaper. I found this &lt;a href=&#34;https://www.reddit.com/r/selfhosted/comments/12mvpq2/comment/jgdjoqr/&#34;&gt;list of open source solutions&lt;/a&gt; on Reddit and decided to look into &lt;a href=&#34;https://github.com/aquasecurity/trivy&#34;&gt;Trivy&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s possible to &lt;a href=&#34;https://aquasecurity.github.io/trivy/v0.55/getting-started/installation/&#34;&gt;install&lt;/a&gt; Trivy via a package manager, a binary or to build the Go binary locally but I prefer to use containers whenever possible:&lt;/p&gt;</description>
    </item>
    <item>
      <title>XML-RPC in Rust and Python</title>
      <link>https://pretired.dazwilkin.com/posts/240811/</link>
      <pubDate>Sun, 11 Aug 2024 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240811/</guid>
      <description>&lt;p&gt;A lazy Sunday afternoon and my interest was piqued by &lt;a href=&#34;https://en.wikipedia.org/wiki/XML-RPC&#34;&gt;XML-RPC&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;client&#34;&gt;Client&lt;/h2&gt;&#xA;&lt;p&gt;A very basic XML-RPC client wrapped in a Cloud Functions function:&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;main.py&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python3&#34; data-lang=&#34;python3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; functions_framework&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xmlrpc.client&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;endpoint &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_env(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ENDPOINT&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;proxy &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xmlrpc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ServerProxy(endpoint)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@functions_framework.http&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(request):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(request)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rqst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; request&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_json(silent&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; proxy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;:{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;real&amp;#34;&lt;/span&gt;:rqst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;real&amp;#34;&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;imag&amp;#34;&lt;/span&gt;:rqst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;imag&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;:{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;real&amp;#34;&lt;/span&gt;:rqst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;real&amp;#34;&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;imag&amp;#34;&lt;/span&gt;:rqst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;imag&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    })&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; resp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;requirements.txt&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;functions-framework==3.*&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Run it:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m venv venv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source venv/bin/activate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m pip install --requirement requirements.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export ENDPOINT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 main.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;server&#34;&gt;Server&lt;/h2&gt;&#xA;&lt;p&gt;Forcing myself to go Rust first and there&amp;rsquo;s an (old) &lt;a href=&#34;https://crates.io/crates/xml-rpc&#34;&gt;xml-rpc&lt;/a&gt; crate.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Rust to generate Kubernetes CRD</title>
      <link>https://pretired.dazwilkin.com/posts/240529/</link>
      <pubDate>Wed, 29 May 2024 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240529/</guid>
      <description>&lt;p&gt;For the first time, I chose Rust to solve a problem. Until this, I&amp;rsquo;ve been trying to use Rust to learn the language and to rewrite existing code. But, this problem led me to Rust because my other tools wouldn&amp;rsquo;t cut it.&lt;/p&gt;&#xA;&lt;p&gt;The question was how to represent oneof fields in Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/&#34;&gt;Custom Resource Definitions (CRDs)&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;CRDs use &lt;a href=&#34;https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.0.md#schemaObject&#34;&gt;OpenAPI&lt;/a&gt; schema and the YAML that results can be challenging to grok.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-YAML&#34; data-lang=&#34;YAML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;apiextensions.k8s.io/v1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;CustomResourceDefinition&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;metadata&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;deploymentconfigs.example.com&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;group&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;example.com&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;names&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;categories&lt;/span&gt;: []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;DeploymentConfig&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;plural&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;deploymentconfigs&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;shortNames&lt;/span&gt;: []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;singular&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;deploymentconfig&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;scope&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Namespaced&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;versions&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;additionalPrinterColumns&lt;/span&gt;: []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;v1alpha1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;schema&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;openAPIV3Schema&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;description&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;An example schema&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;properties&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;properties&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;deployment_strategy&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;oneOf&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                - &lt;span style=&#34;color:#f92672&#34;&gt;required&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  - &lt;span style=&#34;color:#ae81ff&#34;&gt;rolling_update&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                - &lt;span style=&#34;color:#f92672&#34;&gt;required&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  - &lt;span style=&#34;color:#ae81ff&#34;&gt;recreate&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;properties&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#f92672&#34;&gt;recreate&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;properties&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#f92672&#34;&gt;something&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;format&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;uint16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;minimum&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;integer&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;required&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    - &lt;span style=&#34;color:#ae81ff&#34;&gt;something&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;object&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#f92672&#34;&gt;rolling_update&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;properties&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#f92672&#34;&gt;max_surge&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;format&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;uint16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;minimum&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;integer&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#f92672&#34;&gt;max_unavailable&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;format&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;uint16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;minimum&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;integer&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;required&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    - &lt;span style=&#34;color:#ae81ff&#34;&gt;max_surge&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    - &lt;span style=&#34;color:#ae81ff&#34;&gt;max_unavailable&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;object&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;object&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;required&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            - &lt;span style=&#34;color:#ae81ff&#34;&gt;deployment_strategy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;object&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;required&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - &lt;span style=&#34;color:#ae81ff&#34;&gt;spec&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;DeploymentConfig&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;object&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;served&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;storage&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;subresources&lt;/span&gt;: {}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I&amp;rsquo;ve developed several Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/operator/&#34;&gt;Operators&lt;/a&gt; using the &lt;a href=&#34;https://sdk.operatorframework.io/&#34;&gt;Operator SDK&lt;/a&gt; in Go (which builds upon &lt;a href=&#34;https://github.com/kubernetes-sigs/kubebuilder&#34;&gt;Kubebuilder&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Delve to debug Go containers on Kubernetes</title>
      <link>https://pretired.dazwilkin.com/posts/240528/</link>
      <pubDate>Tue, 28 May 2024 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240528/</guid>
      <description>&lt;p&gt;An interesting &lt;a href=&#34;https://stackoverflow.com/questions/78537605&#34;&gt;question&lt;/a&gt; on Stack overflow prompted me to understand how to use Visual Studio Code and &lt;a href=&#34;https://github.com/go-delve/delve&#34;&gt;Delve&lt;/a&gt; to remotely debug a Golang app running on Kubernetes (MicroK8s).&lt;/p&gt;&#xA;&lt;p&gt;The OP is using &lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;Gin&lt;/a&gt; which was also new to me so the question gave me an opportunity to try out several things.&lt;/p&gt;&#xA;&lt;h2 id=&#34;sources&#34;&gt;Sources&lt;/h2&gt;&#xA;&lt;p&gt;A simple &lt;code&gt;healthz&lt;/code&gt; handler:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;flag&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log/slog&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net/http&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/gin-gonic/gin&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;addr&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;flag&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;addr&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0.0:8080&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HTTP server endpoint&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;healthz&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;gin&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;StatusOK&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ok&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;flag&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Parse&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;router&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gin&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Default&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;router&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GET&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/fib&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;handler&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;router&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GET&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;healthz&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;healthz&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;slog&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Info&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Server starting&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;slog&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Info&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Server error&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;err&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;router&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Run&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addr&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Containerfile&lt;/code&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Securing gRPC services using Tailscale</title>
      <link>https://pretired.dazwilkin.com/posts/240430/</link>
      <pubDate>Tue, 30 Apr 2024 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240430/</guid>
      <description>&lt;p&gt;This is &lt;strong&gt;so&lt;/strong&gt; useful that it&amp;rsquo;s worth its own post.&lt;/p&gt;&#xA;&lt;p&gt;I write many gRPC services. As these generally run securely, it&amp;rsquo;s best to test them that way too but, even with e.g. &lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt;, it can be challenging to generate appropriate TLS certs.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://tailscale.com&#34;&gt;Tailscale&lt;/a&gt; makes this trivial.&lt;/p&gt;&#xA;&lt;p&gt;Assuming there&amp;rsquo;s a gRPC service running on &lt;code&gt;localhost:50051&lt;/code&gt;, we want to avoid &lt;code&gt;-plaintext&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PORT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;50051&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grpcurl &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-plaintext 0.0.0.0:&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PORT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;list&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; I&amp;rsquo;m using &lt;code&gt;list&lt;/code&gt; and assuming your service has reflection enabled but you can, of course, use relevant methods.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Cloud Translation w/ gRPC 3 ways</title>
      <link>https://pretired.dazwilkin.com/posts/240409/</link>
      <pubDate>Tue, 09 Apr 2024 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240409/</guid>
      <description>&lt;h2 id=&#34;general&#34;&gt;General&lt;/h2&gt;&#xA;&lt;p&gt;You&amp;rsquo;ll need a Google Cloud project with Cloud Translation (&lt;code&gt;translate.googleapis.com&lt;/code&gt;) enabled and a Service Account (and key) with suitable permissions in order to run the following.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BILLING&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Your Billing ID (gcloud billing accounts list)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PROJECT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Your Project ID&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ACCOUNT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tester&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EMAIL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ACCOUNT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.iam.gserviceaccount.com&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ROLES&lt;span style=&#34;color:#f92672&#34;&gt;=(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;roles/cloudtranslate.user&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;roles/serviceusage.serviceUsageConsumer&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create Project&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud projects create &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Associate Project with your Billing Account&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud billing accounts link &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--billing-account&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BILLING&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Enable Cloud Translation&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud services enable translate.googleapis.com &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--project&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create Service Account&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud iam service-accounts create &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ACCOUNT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--project&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create Service Account Key&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud iam service-accounts keys create &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PWD&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ACCOUNT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;.json &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--iam-account&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;EMAIL&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--project&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Update Project IAM permissions&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; ROLE in &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ROLES[@]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  gcloud projects add-iam-policy-binding &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --member&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;serviceAccount:&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;EMAIL&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --role&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ROLE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For the code, you&amp;rsquo;ll need to install &lt;a href=&#34;https://github.com/protocolbuffers/protobuf&#34;&gt;&lt;code&gt;protoc&lt;/code&gt;&lt;/a&gt; and preferably have it in your path.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Cloud Events protobufs and SDKs</title>
      <link>https://pretired.dazwilkin.com/posts/240405/</link>
      <pubDate>Fri, 05 Apr 2024 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240405/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve written before about &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt;&amp;rsquo;s use of &lt;a href=&#34;https://cloud.google.com/firestore&#34;&gt;Firestore&lt;/a&gt; and subscribing to Firestore document CRUD events:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pretired.dazwilkin.com/posts/230530/&#34;&gt;Routing Firestore events to GKE with Eventarc&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pretired.dazwilkin.com/posts/210413/&#34;&gt;Cloud Firestore Triggers in Golang&lt;/a&gt; using &lt;a href=&#34;https://cloud.google.com/functions/docs/calling/cloud-firestore&#34;&gt;Firestore triggers&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;I find Google&amp;rsquo;s &lt;a href=&#34;cloud.google.com/eventarc&#34;&gt;Eventarc&lt;/a&gt; documentation to be confusing and, in typical Google fashion, even though open-sourced, you often need to do some legwork to find relevant sources, viz:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Google&amp;rsquo;s Protobufs for Eventarc (using &lt;a href=&#34;https://cloudevents.io/&#34;&gt;cloudevents&lt;/a&gt;) &lt;a href=&#34;https://github.com/googleapis/google-cloudevents&#34;&gt;&lt;code&gt;google-cloudevents&lt;/code&gt;&lt;/a&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;li&gt;Convenience (since you can generate these using &lt;code&gt;protoc&lt;/code&gt;) language-specific types generated from the above e.g. &lt;a href=&#34;https://github.com/googleapis/google-cloudevents-go&#34;&gt;&lt;code&gt;google-cloudevents-go&lt;/code&gt;&lt;/a&gt;; &lt;a href=&#34;https://github.com/googleapis/google-cloudevents-python&#34;&gt;&lt;code&gt;google-cloudevents-python&lt;/code&gt;&lt;/a&gt; etc.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; &amp;ndash; IIUC EventArc is the Google service. It carries Google Events that are CloudEvents. These are defined by protocol buffers schemas.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prost! Tonic w/ a dash of JSON</title>
      <link>https://pretired.dazwilkin.com/posts/240325/</link>
      <pubDate>Mon, 25 Mar 2024 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240325/</guid>
      <description>&lt;p&gt;I naively (!) began exploring JSON marshaling of Protobufs in rust. Other protobuf language SDKs include JSON marshaling making the process straightforward. I was to learn that, in rust, it&amp;rsquo;s not so simple. Unfortunately, for me, this continues to discourage my further use of rust (rust is just hard).&lt;/p&gt;&#xA;&lt;p&gt;My goal was to marshal an arbitrary protocol buffer message that included a &lt;a href=&#34;https://protobuf.dev/programming-guides/proto3/#oneof&#34;&gt;&lt;code&gt;oneof&lt;/code&gt;&lt;/a&gt; feature. I was unable to JSON marshal the rust generated by &lt;code&gt;tonic&lt;/code&gt; for such a message.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fly Kubernetes</title>
      <link>https://pretired.dazwilkin.com/posts/240314/</link>
      <pubDate>Tue, 12 Mar 2024 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240314/</guid>
      <description>&lt;p&gt;Interested to explore &lt;a href=&#34;https://fly.io/docs/kubernetes/&#34;&gt;Fly Kubernetes&lt;/a&gt; after being accepted into the closed beta.&lt;/p&gt;&#xA;&lt;p&gt;The folks at Fly are innovative in their technology uses and, having been a long-time Kubernetes user, I was intrigued to learn that Fly.io has &lt;a href=&#34;https://fly.io/blog/fks/&#34;&gt;implemented Kubernetes atop Fly&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;My first Deployment failed:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Authentication required to access image &amp;#34;ghcr.io/{image}&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It was confirmed to me that FKS does not support pulling from private registries. The solution is &lt;code&gt;pull&lt;/code&gt;-&lt;code&gt;tag&lt;/code&gt;-&lt;code&gt;push&lt;/code&gt; images to &lt;code&gt;registry.fly.io&lt;/code&gt; but, Fly&amp;rsquo;s repository is app-specific and so, you need to do some querying to grab the Fly app created by FKS (for your namespace):&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Protobufs and Native Histograms</title>
      <link>https://pretired.dazwilkin.com/posts/240307/</link>
      <pubDate>Thu, 07 Mar 2024 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240307/</guid>
      <description>&lt;p&gt;I responded to a question &lt;a href=&#34;https://stackoverflow.com/questions/78112323/prometheus-metric-protocol-buffer-in-grpc#comment137716337_78112323&#34;&gt;Prometheus metric protocol buffer in gRPC&lt;/a&gt; on Stackoverflow and it piqued my curiosity and got me yak shaving.&lt;/p&gt;&#xA;&lt;p&gt;Prometheus used to support two exposition formats including Protocol Buffers, then dropped Protocol Buffer and has since re-added it (see &lt;a href=&#34;https://github.com/prometheus/docs/blob/main/content/docs/instrumenting/exposition_formats.md#protobuf-format&#34;&gt;Protobuf format&lt;/a&gt;). The Protobuf format has returned to support the experimental &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/feature_flags/#native-histograms&#34;&gt;Native Histograms&lt;/a&gt; feature.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m interested in adding Native Histogram support to &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt; so thought I&amp;rsquo;d learn more about this metric.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MicroK8s operability add-on</title>
      <link>https://pretired.dazwilkin.com/posts/240216/</link>
      <pubDate>Fri, 16 Feb 2024 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240216/</guid>
      <description>&lt;p&gt;Spent time today &lt;a href=&#34;https://en.wiktionary.org/wiki/yak_shaving&#34;&gt;yak-shaving&lt;/a&gt; which resulted in an unplanned migration from &lt;a href=&#34;https://microk8s.io&#34;&gt;MicroK8s&lt;/a&gt; &amp;lsquo;prometheus&amp;rsquo; &lt;a href=&#34;https://microk8s.io/docs/addons&#34;&gt;add-on&lt;/a&gt; to the new and not fully-documented &amp;lsquo;observability&amp;rsquo; add-on:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo microk8s.enable prometheus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Infer repository core for addon prometheus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEPRECATION WARNING: &amp;#39;prometheus&amp;#39; is deprecated and will soon be removed. Please use &amp;#39;observability&amp;#39; instead.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The reason for the name change is unclear.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s unclear whether there&amp;rsquo;s a difference in the primary components that are installed too (I&amp;rsquo;d thought Grafana wasn&amp;rsquo;t included in &amp;lsquo;prometheus&amp;rsquo;), &lt;a href=&#34;https://grafana.com/oss/loki&#34;&gt;(Grafana) Loki&lt;/a&gt; and &lt;a href=&#34;https://grafana.com/oss/tempo/&#34;&gt;(Grafana) Tempo&lt;/a&gt; definitely weren&amp;rsquo;t included and I don&amp;rsquo;t want them either.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Navigating Koyeb&#39;s API with Rust</title>
      <link>https://pretired.dazwilkin.com/posts/240130/</link>
      <pubDate>Tue, 30 Jan 2024 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240130/</guid>
      <description>&lt;p&gt;I wrote about &lt;a href=&#34;https://pretired.dazwilkin.com/posts/240105/&#34;&gt;Navigating Koyeb&amp;rsquo;s Golang SDK&lt;/a&gt;. That client is generated using the &lt;a href=&#34;https://openapi-generator.tech/&#34;&gt;OpenAPI Generator&lt;/a&gt; project using Koyeb&amp;rsquo;s Swagger (now OpenAPI) REST API &lt;a href=&#34;https://developer.koyeb.com/public.swagger.json&#34;&gt;spec&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This post shows how to generate a Rust SDK using the Generator and provides a very basic example of using the SDK.&lt;/p&gt;&#xA;&lt;p&gt;The Generator will create a Rust library project:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;VERS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;v7.2.0&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PACKAGE_NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;koyeb-api-client-rs&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PACKAGE_VERS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0.0&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;podman run &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--interactive --tty --rm &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--volume&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PWD&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;:/local &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;docker.io/openapitools/openapi-generator-cli:&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;VERS&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;generate &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-g&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rust &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://developer.koyeb.com/public.swagger.json &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-o&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/local/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PACKAGE_NAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--additional-properties&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;packageName&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PACKAGE_NAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;packageVersion&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PACKAGE_VERS&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will create the project in &lt;code&gt;${PWD}/${PACKAGE_NAME}&lt;/code&gt; including the documentation at:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gnarly Protocol Buffers compilation</title>
      <link>https://pretired.dazwilkin.com/posts/240117/</link>
      <pubDate>Wed, 17 Jan 2024 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240117/</guid>
      <description>&lt;p&gt;This Stackoverflow question piqued my interest:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/77829333/retry-policy-configuration-for-grpc-not-working&#34;&gt;retry policy configuration for grpc not working&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/grpc/grpc/blob/master/doc/service_config.md&#34;&gt;Service Config in gRPC&lt;/a&gt; is new to me but, my initial suspicion (albeit incorrect) was that the JSON types were incorrect.&lt;/p&gt;&#xA;&lt;p&gt;I decided to try using the Protocol Buffer source &lt;a href=&#34;https://github.com/grpc/grpc-proto/blob/master/grpc/service_config/service_config.proto&#34;&gt;&lt;code&gt;service_config.proto&lt;/code&gt;&lt;/a&gt; to verify the JSON.&lt;/p&gt;&#xA;&lt;p&gt;To do so I needed to compile the source&amp;hellip;. it was gnarly.&lt;/p&gt;&#xA;&lt;p&gt;There are 2 repos used:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/googleapis/googleapis&#34;&gt;&lt;code&gt;googleapis&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/grpc/grpc-proto&#34;&gt;&lt;code&gt;grpc-proto&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The &lt;code&gt;service_config.proto&lt;/code&gt; includes &lt;code&gt;options&lt;/code&gt; for &lt;code&gt;java_package&lt;/code&gt; but no &lt;code&gt;go_package&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Navigating Koyeb&#39;s Golang SDK</title>
      <link>https://pretired.dazwilkin.com/posts/240105/</link>
      <pubDate>Fri, 05 Jan 2024 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240105/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt; deploys gRPC &lt;a href=&#34;https://grpc.io/docs/guides/health-checking/&#34;&gt;Health Checking&lt;/a&gt; clients in locations around the World in order to health check services that are representative of customer need.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://koyeb.com&#34;&gt;Koyeb&lt;/a&gt; offers multiple locations and I spent time today writing a client for Ackal to integrate with Koyeb using the &lt;a href=&#34;https://github.com/koyeb/koyeb-api-client-go&#34;&gt;Golang client for the Koyeb API&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The SDK is generated from Koyeb&amp;rsquo;s OpenAPI (nee Swagger) &lt;a href=&#34;https://developer.koyeb.com/public.swagger.json&#34;&gt;endpoint&lt;/a&gt; using &lt;a href=&#34;https://github.com/OpenAPITools/openapi-generator-cli&#34;&gt;&lt;code&gt;openapi-generator-cli&lt;/code&gt;&lt;/a&gt;. This is a smart, programmatic solution to ensuring that the SDK always matches the API definition &lt;strong&gt;but&lt;/strong&gt; I found the result is idiosyncratic and therefore a little gnarly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Capturing e.g. CronJob metrics with GMP</title>
      <link>https://pretired.dazwilkin.com/posts/240104/</link>
      <pubDate>Thu, 04 Jan 2024 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240104/</guid>
      <description>&lt;p&gt;The deployment of &lt;a href=&#34;https://cloud.google.com/stackdriver/docs/managed-prometheus/exporters/kube_state_metrics&#34;&gt;Kube State Metrics&lt;/a&gt; for Google Managed Prometheus creates both a &lt;code&gt;PodMonitoring&lt;/code&gt; and &lt;code&gt;ClusterPodMonitoring&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;code&gt;PodMonitoring&lt;/code&gt; resource exposes metrics published on &lt;code&gt;metric-self&lt;/code&gt; port (8081).&lt;/p&gt;&#xA;&lt;p&gt;The &lt;code&gt;ClusterPodMonitoring&lt;/code&gt; exposes metrics published on &lt;code&gt;metric&lt;/code&gt; port (8080) &lt;strong&gt;but&lt;/strong&gt; this doesn&amp;rsquo;t include &lt;code&gt;cronjob&lt;/code&gt;-related metrics:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get clusterpodmonitoring/kube-state-metrics &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--output&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{.spec.endpoints[0].metricRelabeling}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;| jq -r .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JSON&#34; data-lang=&#34;JSON&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;action&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;keep&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;regex&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kube_(daemonset|deployment|replicaset|pod|namespace|node|statefulset|persistentvolume|horizontalpodautoscaler|job_created)(_.+)?&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sourceLabels&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__name__&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; The &lt;code&gt;regex&lt;/code&gt; does &lt;strong&gt;not&lt;/strong&gt; include &lt;code&gt;kube_cronjob&lt;/code&gt; and only includes &lt;code&gt;kube_job_created&lt;/code&gt; patterns.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Listing Cloud Logging log-based metrics using gRPC</title>
      <link>https://pretired.dazwilkin.com/posts/231222/</link>
      <pubDate>Fri, 22 Dec 2023 11:00:00 +0000</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/231222/</guid>
      <description>&lt;p&gt;Referring to &lt;a href=&#34;https://pretired.dazwilkin.com/posts/230314/&#34;&gt;Accessing Google Services using gRPC&lt;/a&gt;, I wanted to query a project&amp;rsquo;s &lt;a href=&#34;https://cloud.google.com/logging&#34;&gt;Cloud Logging&lt;/a&gt; for &lt;a href=&#34;https://cloud.google.com/logging/docs/logs-based-metrics&#34;&gt;log-based metrics&lt;/a&gt; using gRPC.&lt;/p&gt;&#xA;&lt;p&gt;In summary:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ENDPOINT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;logging.googleapis.com:443&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ROOT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/path/to/googleapis&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# https://github.com/googleapis/googleapis&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PACKAGE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;google/logging/v2&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# NB Not logging.proto&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PROTO&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ROOT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PACKAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/logging_metrics.proto&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TOKEN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;gcloud auth print-access-token&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PROJECT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PACKAGE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;google.logging.v2&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SERVICE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MetricsServiceV2&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;METHOD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PACKAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SERVICE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/ListLogMetrics&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ListLogMetricsRequest fields&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PARENT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;projects/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grpcurl &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--import-path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ROOT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--proto&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROTO&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization: Bearer &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;TOKEN&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{\&amp;#34;parent\&amp;#34;: \&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PARENT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ENDPOINT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;METHOD&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;From &lt;a href=&#34;https://developers.google.com/apis-explorer&#34;&gt;APIs Explorer&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/logging/docs/reference/api-overview&#34;&gt;Cloud Logging API v2&lt;/a&gt;, instead of the &lt;a href=&#34;https://cloud.google.com/logging/docs/reference/v2/rest&#34;&gt;REST reference&lt;/a&gt;, browse the &lt;a href=&#34;https://cloud.google.com/logging/docs/reference/v2/rpc&#34;&gt;gRPC reference&lt;/a&gt; specifically the package &lt;a href=&#34;https://cloud.google.com/logging/docs/reference/v2/rpc/google.logging.v2&#34;&gt;&lt;code&gt;google.logging.v2&lt;/code&gt;&lt;/a&gt; which includes &lt;a href=&#34;https://cloud.google.com/logging/docs/reference/v2/rpc/google.logging.v2#google.logging.v2.MetricsServiceV2&#34;&gt;&lt;code&gt;MetricsServiceV2&lt;/code&gt;&lt;/a&gt;. We&amp;rsquo;re interested in the &lt;code&gt;ListLogMetrics&lt;/code&gt; method (which unfortunately isn&amp;rsquo;t directly hyperlinkable) but is defined to be:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Operator support an auth proxy for Service Discovery</title>
      <link>https://pretired.dazwilkin.com/posts/231018/</link>
      <pubDate>Wed, 18 Oct 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/231018/</guid>
      <description>&lt;p&gt;CRD &lt;a href=&#34;https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/user-guides/linting.md&#34;&gt;linting&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Returning to yesterday&amp;rsquo;s failing tests, it&amp;rsquo;s unclear how to introspect the E2E tests.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get namespaces&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NAME                      STATUS   AGE&#xA;...&#xA;allns-s2os2u-0-90f56669   Active   22h&#xA;allns-s2qhuw-0-6b33d5eb   Active   4m23s&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get all &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--namespace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;allns-s2os2u-0-90f56669&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;No resources found in allns-s2os2u-0-90f56669 namespace.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get all &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--namespace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;allns-s2qhuw-0-6b33d5eb&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NAME                                                        READY   STATUS             RESTARTS   AGE&#xA;pod/prometheus-operator-6c96477b9c-q6qm2                    1/1     Running            0          4m12s&#xA;pod/prometheus-operator-admission-webhook-68bc9f885-nq6r8   0/1     ImagePullBackOff   0          4m7s&#xA;&#xA;NAME                          TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE&#xA;service/prometheus-operator   ClusterIP   10.152.183.247   &amp;lt;none&amp;gt;        443/TCP   4m9s&#xA;&#xA;NAME                                                    READY   UP-TO-DATE   AVAILABLE   AGE&#xA;deployment.apps/prometheus-operator                     1/1     1            1           4m12s&#xA;deployment.apps/prometheus-operator-admission-webhook   0/1     1            0           4m7s&#xA;&#xA;NAME                                                              DESIRED   CURRENT   READY   AGE&#xA;replicaset.apps/prometheus-operator-6c96477b9c                    1         1         1       4m13s&#xA;replicaset.apps/prometheus-operator-admission-webhook-68bc9f885   1         1         0       4m8s&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl logs deployment/prometheus-operator-admission-webhook &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--namespace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;allns-s2qhuw-0-6b33d5eb&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Error from server (BadRequest): container &amp;#34;prometheus-operator-admission-webhook&amp;#34; in pod &amp;#34;prometheus-operator-admission-webhook-68bc9f885-nq6r8&amp;#34; is waiting to start: trying and failing to pull image&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prometheus-operator-admission-webhook&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FILTER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{.spec.template.spec.containers[?(@.name==\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;NAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;)].image}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get deployment/prometheus-operator-admission-webhook &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--namespace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;allns-s2qjz2-0-fad82c03 &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--output&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;FILTER&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;quay.io/prometheus-operator/admission-webhook:52d1e55af&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Want:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Operator support an auth proxy for Service Discovery</title>
      <link>https://pretired.dazwilkin.com/posts/231017/</link>
      <pubDate>Tue, 17 Oct 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/231017/</guid>
      <description>&lt;p&gt;For &lt;code&gt;ackalctld&lt;/code&gt; to be deployable to Kubernetes with &lt;a href=&#34;github.com/prometheus-operator/prometheus-operator&#34;&gt;Prometheus Operator&lt;/a&gt;, it is necessary to &lt;a href=&#34;https://github.com/prometheus-operator/prometheus-operator/issues/5966&#34;&gt;Enable &lt;code&gt;ScrapeConfig&lt;/code&gt; to use (discovery|target) proxies #5966&lt;/a&gt;. While I&amp;rsquo;m familiar with Kubernetes, Kubernetes operators (&lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt; uses one built with the &lt;a href=&#34;&#34;&gt;Operator SDK&lt;/a&gt;) and &lt;a href=&#34;https://sdk.operatorframework.io/&#34;&gt;Prometheus Operator&lt;/a&gt;, I&amp;rsquo;m unfamiliar with developing Prometheus Operator. This (and subsequent) posts will document some preliminary work on this.&lt;/p&gt;&#xA;&lt;p&gt;Cloned &lt;a href=&#34;github.com/prometheus-operator/prometheus-operator&#34;&gt;Prometheus Operator&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Branched &lt;code&gt;scrape-config-url-proxy&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m unsure how to effect these changes and unsure whether documentation exists.&lt;/p&gt;&#xA;&lt;p&gt;Clearly, I will need to revise the &lt;code&gt;ScrapeConfig&lt;/code&gt; CRD to add the &lt;code&gt;proxy_url&lt;/code&gt; fields (one &lt;code&gt;proxy_url&lt;/code&gt; defines a proxy for the Service Discovery endpoint; the second defines a proxy for the targets themselves) and it would be useful for this to closely mirror the existing &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/http_sd/&#34;&gt;Prometheus HTTP Service Discovery&lt;/a&gt; use, namely &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/configuration/configuration/#http_sd_config&#34;&gt;&lt;code&gt;,http_sd_config&amp;gt;&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Operator `ScrapeConfig`</title>
      <link>https://pretired.dazwilkin.com/posts/231013/</link>
      <pubDate>Fri, 13 Oct 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/231013/</guid>
      <description>&lt;p&gt;TL;DR &lt;a href=&#34;https://github.com/prometheus-operator/prometheus-operator/issues/5966#issuecomment-1754317247&#34;&gt;Enable &lt;code&gt;ScrapeConfig&lt;/code&gt; to use (discovery|target) proxies&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve developed a companion, local daemon (called &lt;code&gt;ackalctld&lt;/code&gt;) for &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt; that provides a functionally close version of the service.&lt;/p&gt;&#xA;&lt;p&gt;One way to deploy &lt;code&gt;ackalctld&lt;/code&gt; is to use Kubernetes and it would be convenient if the Prometheus metrics were scrapeable by &lt;a href=&#34;https://github.com/prometheus-operator/prometheus-operator&#34;&gt;Prometheus Operator&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In order for this to work, Prometheus Operator needs to be able to scrape Google &lt;a href=&#34;https://cloud.google.com/run&#34;&gt;Cloud Run&lt;/a&gt; targets because &lt;code&gt;ackalctld&lt;/code&gt; creates Cloud Run services for its health check clients.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Exporter for Koyeb</title>
      <link>https://pretired.dazwilkin.com/posts/230709/</link>
      <pubDate>Sun, 09 Jul 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230709/</guid>
      <description>&lt;p&gt;Yet another cloud platform exporter for resource|cost management. This time for &lt;a href=&#34;https://www.koyeb.com/&#34;&gt;Koyeb&lt;/a&gt; with &lt;a href=&#34;https://github.com/DazWilkin/koyeb-exporter&#34;&gt;Koyeb Exporter&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Deploying resources to cloud platforms generally incurs cost based on the number of resources deployed, the time each resource is deployed and the cost (per period of time) that the resource is deployed. It is useful to be able to automatically measure and alert on all the resources deployed on all the platforms that you&amp;rsquo;re using and this is an intent of these exporters.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Python SDK w/ CRDs</title>
      <link>https://pretired.dazwilkin.com/posts/230708/</link>
      <pubDate>Sat, 08 Jul 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230708/</guid>
      <description>&lt;p&gt;Responded to &lt;a href=&#34;https://stackoverflow.com/questions/76636443/&#34;&gt;Get Custom K8s Resource using Python&lt;/a&gt; and found the &lt;a href=&#34;https://github.com/kubernetes-client/python/blob/master/kubernetes/docs/CustomObjectsApi.md&#34;&gt;&lt;code&gt;CustomObjectsApi&lt;/code&gt;&lt;/a&gt; documentation unclear.&lt;/p&gt;&#xA;&lt;p&gt;If you have a cluster and a kubeconfig file with a correctly configured &lt;code&gt;current-context&lt;/code&gt;, so that you can successfully:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PLURAL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;checks&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PLURAL&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--all-namespaces&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; I&amp;rsquo;m using &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt;&amp;rsquo;s CRDs in these examples.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Then you can use the following code to access the cluster&amp;rsquo;s REST API server to enumerate its CRDs:&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;main.py&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Python3&#34; data-lang=&#34;Python3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; __future__ &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; print_function&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; kubernetes &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; client, config&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; kubernetes.client.rest &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ApiException&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;load_kube_config()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;api &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;CustomObjectsApi()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Ackal&amp;#39;s Group|Version and some Kinds&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ack.al&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;version &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;v1&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plurals &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;checks&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;customers&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; plural &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; plurals:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        resp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; api&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;list_cluster_custom_object(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            group,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            version,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            plural,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; resp[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;items&amp;#34;&lt;/span&gt;]:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            spec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spec&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            print(spec)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; ApiException &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(e)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m venv venv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source venv/bin/activate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m pip install kubernetes&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;26.1.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 main.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s all!&lt;/p&gt;</description>
    </item>
    <item>
      <title>GoatCounter with Hugo with Ananke</title>
      <link>https://pretired.dazwilkin.com/posts/230622/</link>
      <pubDate>Thu, 22 Jun 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230622/</guid>
      <description>&lt;p&gt;Thanks to &lt;a href=&#34;https://discourse.gohugo.io/u/jmooring/summary&#34;&gt;Joe Mooring&lt;/a&gt; for his &lt;a href=&#34;https://discourse.gohugo.io/t/goatcounter-with-gohugo-theme-ananke/44938/2&#34;&gt;solution&lt;/a&gt; to my &lt;a href=&#34;https://discourse.gohugo.io/t/goatcounter-with-gohugo-theme-ananke/44938/&#34;&gt;question&lt;/a&gt; as to how to do this.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve decided to ditch &lt;a href=&#34;https://analytics.google.com/analytics/web/&#34;&gt;Google Analytics&lt;/a&gt; and am evaluating using &lt;a href=&#34;https://goatcounter.com&#34;&gt;GoatCounter&lt;/a&gt; with &lt;a href=&#34;https://hugo.io&#34;&gt;Hugo&lt;/a&gt; with &lt;a href=&#34;https://github.com/theNewDynamic/gohugo-theme-ananke&#34;&gt;Ananke&lt;/a&gt; theme.&lt;/p&gt;&#xA;&lt;p&gt;This was the layout of the site:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.&#xA;├── archetypes&#xA;├── content&#xA;│   └── posts&#xA;├── go.mod&#xA;├── go.sum&#xA;├── hugo.toml&#xA;├── layouts&#xA;├── public&#xA;└── static&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This is the structure (of &lt;code&gt;layouts&lt;/code&gt;) with the necessary changes:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.&#xA;├── archetypes&#xA;├── content&#xA;│   └── posts&#xA;├── go.mod&#xA;├── go.sum&#xA;├── hugo.toml&#xA;├── layouts&#xA;│   ├── _default&#xA;│   │   └── baseof.html&#xA;│   └── partials&#xA;│       └── analytics.html&#xA;├── public&#xA;└── static&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I copied &lt;a href=&#34;https://github.com/theNewDynamic/gohugo-theme-ananke/blob/master/layouts/_default/baseof.html&#34;&gt;&lt;code&gt;/layouts/_default/baseof.html&lt;/code&gt;&lt;/a&gt; from the &lt;a href=&#34;https://github.com/theNewDynamic/gohugo-theme-ananke&#34;&gt;&lt;code&gt;gohugo-ananke-theme&lt;/code&gt;&lt;/a&gt; repo into my site&amp;rsquo;s|repo&amp;rsquo;s &lt;code&gt;/layouts/_default/baseof.html&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python Protobuf changes</title>
      <link>https://pretired.dazwilkin.com/posts/230607/</link>
      <pubDate>Wed, 07 Jun 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230607/</guid>
      <description>&lt;p&gt;Python&amp;rsquo;s &lt;a href=&#34;https://protobuf.dev/&#34;&gt;Protocol Buffers&lt;/a&gt; code-generation using &lt;a href=&#34;https://github.com/protocolbuffers/protobuf/tree/main/python&#34;&gt;&lt;code&gt;protoc&lt;/code&gt;&lt;/a&gt; has had significant changes that can cause developers&amp;hellip; &amp;ldquo;challenges&amp;rdquo;. This post summarizes my experience of these mostly to save me from repreatedly recreating this history for myself when I forget it.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Version change&lt;/li&gt;&#xA;&lt;li&gt;Generated code change&lt;/li&gt;&#xA;&lt;li&gt;Implementation Backends&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;I&amp;rsquo;ll use this summarized table of &lt;code&gt;proto&lt;/code&gt; and the Pypi library&amp;rsquo;s history in this post. &lt;a href=&#34;https://github.com/protocolbuffers/protobuf&#34;&gt;&lt;code&gt;protoc&lt;/code&gt;&lt;/a&gt; refers to the compiler that supports code-generation in multiple languages. &lt;a href=&#34;https://pypi.org/project/protobuf/&#34;&gt;&lt;code&gt;protobuf&lt;/code&gt;&lt;/a&gt; refers to the corresponding Python (runtime) library on &lt;a href=&#34;https://pypi.org&#34;&gt;Pypi&lt;/a&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Routing Firestore events to GKE with Eventarc</title>
      <link>https://pretired.dazwilkin.com/posts/230530/</link>
      <pubDate>Tue, 30 May 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230530/</guid>
      <description>&lt;p&gt;Google announced &lt;a href=&#34;https://cloud.google.com/blog/products/databases/firestore-triggers-for-cloud-run-and-google-kubernetes-engine/&#34;&gt;Firestore &amp;hellip; integration with Eventarc&lt;/a&gt;. &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt; uses &lt;a href=&#34;https://cloud.google.com/firestore&#34;&gt;Firestore&lt;/a&gt; to persist Customer and Check information and it uses &lt;a href=&#34;https://cloud.google.com/functions/docs/calling/cloud-firestore-1st-gen&#34;&gt;Google Cloud Firestore Triggers&lt;/a&gt; to handle events on these document types.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/eventarc&#34;&gt;Eventarc&lt;/a&gt; feels like the strategic future of eventing in Google Cloud and I&amp;rsquo;ve been concerned since adopting the technology that Google would abandon Google Cloud Firestore Triggers.&lt;/p&gt;&#xA;&lt;p&gt;For this reason, when I saw last week&amp;rsquo;s announcement, I thought I should evaluate the mechanism and this blog post is a summary of that work.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploying Hugo site to DigitalOcean Apps</title>
      <link>https://pretired.dazwilkin.com/posts/230502/</link>
      <pubDate>Tue, 02 May 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230502/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been running a &lt;a href=&#34;https://www.digitalocean.com/go/app-platform?&#34;&gt;DigitalOcean Apps&lt;/a&gt; static site for Hugo using the &lt;a href=&#34;https://docs.digitalocean.com/products/app-platform/reference/buildpacks/hugo/&#34;&gt;Hugo Buildpack&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve migrated a set of Hugo sites to use &lt;a href=&#34;https://gohugo.io/hugo-modules/&#34;&gt;Hugo Modules&lt;/a&gt; which includes the addition of &lt;code&gt;go.mod&lt;/code&gt; (and &lt;code&gt;go.sum&lt;/code&gt;) files to the Hugo project in order to manage e.g. themes.&lt;/p&gt;&#xA;&lt;p&gt;Unfortunately, the Hugo Buildpack used by DigitalOcean Apps does not support Hugo Modules. DigitalOcean support recommended that I switch to use a &lt;a href=&#34;https://docs.digitalocean.com/products/app-platform/reference/dockerfile/&#34;&gt;build with a Dockerfile&lt;/a&gt;. Unfortunately (!) the recommended Hugo container image (&lt;a href=&#34;https://hub.docker.com/r/klakegg/hugo&#34;&gt;&lt;code&gt;klakegg/hugo&lt;/code&gt;&lt;/a&gt;) is outdated (0.107.0). The current version is &lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.111.3&#34;&gt;&lt;code&gt;0.111.3&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Robusta KRR w/ GMP</title>
      <link>https://pretired.dazwilkin.com/posts/230427/</link>
      <pubDate>Thu, 27 Apr 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230427/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been spending time recently optimizing &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt;&amp;rsquo;s use of Google &lt;a href=&#34;https://cloud.google.com/logging&#34;&gt;Cloud Logging&lt;/a&gt; and &lt;a href=&#34;https://cloud.google.com/monitoring&#34;&gt;Cloud Monitoring&lt;/a&gt; in posts:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pretired.dazwilkin.com/posts/230413/&#34;&gt;Filtering metrics w/ Google Managed Prometheus&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pretired.dazwilkin.com/posts/230419/&#34;&gt;Kubernetes metrics, metrics everywhere&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pretired.dazwilkin.com/posts/230425/&#34;&gt;Google Metric Diagnostics and Metric Data Ingested&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Yesterday, I read that &lt;a href=&#34;https://home.robusta.dev/&#34;&gt;Robusta&lt;/a&gt; has a new open source project &lt;a href=&#34;https://github.com/robusta-dev/krr&#34;&gt;Kubernetes Resource Recommendations (KRR)&lt;/a&gt; so I took some time to evaluate it.&lt;/p&gt;&#xA;&lt;p&gt;This post describes the changes I had to make to get KRR working with &lt;a href=&#34;https://cloud.google.com/stackdriver/docs/managed-prometheus&#34;&gt;Google Managed Prometheus (GMP)&lt;/a&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Metric Diagnostics and Metric Data Ingested</title>
      <link>https://pretired.dazwilkin.com/posts/230425/</link>
      <pubDate>Tue, 25 Apr 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230425/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been on an efficiency drive with &lt;a href=&#34;https://cloud.google.com/logging&#34;&gt;Cloud Logging&lt;/a&gt; and &lt;a href=&#34;https://cloud.google.com/monitoring&#34;&gt;Cloud Monitoring&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;With regards Cloud Logging, I&amp;rsquo;m contemplating (!) eliminating almost all log storage. As it is I&amp;rsquo;ve buzz cut log storage with a &lt;code&gt;_Default&lt;/code&gt; sink that has comprehensive sets of &lt;code&gt;NOT LOG_ID(X)&lt;/code&gt; inclusion and exclusion filters. As I was doing so, I began to wonder why I need to pay for the storage of much logging. There&amp;rsquo;s the comfort from knowing that everything you may ever need is being logged (at least for 30 days) but there&amp;rsquo;s also the costs that that entails. I use logs exclusively for debugging which got me thinking, couldn&amp;rsquo;t I just capture logs when I&amp;rsquo;m debugging (rather thna all the time?). I&amp;rsquo;ve not taken that leap yet but I&amp;rsquo;m noodling on it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Exporter for Azure (Container Apps)</title>
      <link>https://pretired.dazwilkin.com/posts/230420/</link>
      <pubDate>Thu, 20 Apr 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230420/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve written Prometheus Exporters for various cloud platforms. My motivation for writing these Exporters is that I want a unified mechanism to track my usage of these platform&amp;rsquo;s services. It&amp;rsquo;s easy to deploy a service on a platform and inadvertently leave it running (up a bill). The set of exporters is:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/azure-exporter&#34;&gt;Prometheus Exporter for Azure&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/fly-exporter&#34;&gt;Prometheus Exporter for Fly.io&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/gcp-exporter&#34;&gt;Prometheus Exporter for GCP&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/linode-exporter&#34;&gt;Prometheus Exporter for Linode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/vultr-exporter&#34;&gt;Prometheus Exporter for Vultr&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This post describes the recently-added Azure Exporter which only provides metrics for Container Apps and Resource Groups.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes metrics, metrics everywhere</title>
      <link>https://pretired.dazwilkin.com/posts/230419/</link>
      <pubDate>Wed, 19 Apr 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230419/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been tinkering with ways to &amp;ldquo;unit-test&amp;rdquo; my assumptions when using cloud platforms. I recently wrote about good posts by Google describing achieving cost savings with Cloud Monitoring and Cloud Logging:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/blog/products/management-tools/learn-to-understand-and-reduce-cloud-monitoring-costs/&#34;&gt;How to identify and reduce costs of your Google Cloud observability in Cloud Monitoring&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/blog/topics/cost-management/how-to-approach-cloud-logging-pricing-for-cloud-admins&#34;&gt;Cloud Logging pricing for Cloud Admins: How to approach it &amp;amp; save cost&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;With Cloud Monitoring, I&amp;rsquo;ve restricted the &lt;code&gt;prometheus.googleapis.com&lt;/code&gt; metrics that are being ingested but realized I wanted to track the number of Pods (and Containers) deployed to a GKE cluster.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Filtering metrics w/ Google Managed Prometheus</title>
      <link>https://pretired.dazwilkin.com/posts/230413/</link>
      <pubDate>Thu, 13 Apr 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230413/</guid>
      <description>&lt;p&gt;Google has published two, very good blog posts on cost management:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/blog/products/management-tools/learn-to-understand-and-reduce-cloud-monitoring-costs/&#34;&gt;How to identify and reduce costs of your Google Cloud observability in Cloud Monitoring&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/blog/topics/cost-management/how-to-approach-cloud-logging-pricing-for-cloud-admins&#34;&gt;Cloud Logging pricing for Cloud Admins: How to approach it &amp;amp; save cost&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This post is about my application cost reductions for Cloud Monitoring for &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m pleased with &lt;a href=&#34;https://cloud.google.com/stackdriver/docs/managed-prometheus&#34;&gt;Google Cloud Managed Service for Prometheus&lt;/a&gt; (hereinafter GMP). I&amp;rsquo;ve a strong preference for letting service providers run components of &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt; that I consider important but non-differentiating.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Azure Container Apps</title>
      <link>https://pretired.dazwilkin.com/posts/230404/</link>
      <pubDate>Tue, 04 Apr 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230404/</guid>
      <description>&lt;p&gt;The majority of &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt;&amp;rsquo;s components are deployed to &lt;a href=&#34;https://cloud.google.com&#34;&gt;Google Cloud&lt;/a&gt;. However, by its nature, Ackal benefits from deployments that span cloud platforms. I&amp;rsquo;ve deployed Ackal&amp;rsquo;s &lt;a href=&#34;https://grpc.io&#34;&gt;gRPC&lt;/a&gt; &lt;a href=&#34;https://github.com/grpc/grpc/blob/master/doc/health-checking.md&#34;&gt;health checks&lt;/a&gt; to &lt;a href=&#34;https://fly.io&#34;&gt;Fly&lt;/a&gt;, and managed Kubernetes services on &lt;a href=&#34;https://linode.com&#34;&gt;Linode&lt;/a&gt; and &lt;a href=&#34;https://vultr.com&#34;&gt;Vultr&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Today, I decided to revisit&lt;a href=&#34;#microsoft&#34;&gt;¹&lt;/a&gt; &lt;a href=&#34;https://azure.microsoft.com&#34;&gt;Azure&lt;/a&gt;. Ackal uses Azure (Active Directory) for one of its OAuth providers. This time, I wanted to deploy a containerized gRPC service. Azure provides &lt;a href=&#34;https://azure.microsoft.com/en-us/products/category/containers/&#34;&gt;several&lt;/a&gt; container-oriented services. I decided to use &lt;a href=&#34;https://azure.microsoft.com/en-us/products/container-apps/&#34;&gt;Azure Container Apps&lt;/a&gt; and, in hindsight, find it analogous to Google &lt;a href=&#34;https://cloud.google.com/run&#34;&gt;Cloud Run&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Apps Script connecting to GCS</title>
      <link>https://pretired.dazwilkin.com/posts/230329/</link>
      <pubDate>Wed, 29 Mar 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230329/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m building a Google Sheet that interacts with &lt;a href=&#34;https://cloud.google.com/storage&#34;&gt;Google Cloud Storage (GCS)&lt;/a&gt; objects using &lt;a href=&#34;https://developers.google.com/apps-script&#34;&gt;Apps Script&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I Googled but found few examples of such integrations beyond out-of-band solutions (e.g. Python solutions) that interact with Google services and program Google Sheets using its library.&lt;/p&gt;&#xA;&lt;p&gt;In my case, I&amp;rsquo;m going to bind a Google Sheet to a specific Google Cloud project and my Google (User) account has &lt;code&gt;owner&lt;/code&gt; access to the Google Cloud Storage bucket and its objects.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Access Google Services using gRPC</title>
      <link>https://pretired.dazwilkin.com/posts/230314/</link>
      <pubDate>Tue, 14 Mar 2023 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230314/</guid>
      <description>&lt;p&gt;Google publishes interface definitions of Google APIs (services) that support REST and gRPC in a repo called &lt;a href=&#34;https://github.com/googleapis/googleapis&#34;&gt;Google APIs&lt;/a&gt;. Google&amp;rsquo;s SDKs uses gRPC to access these services but, how to do this using e.g. &lt;a href=&#34;https://github.com/fullstorydev/grpcurl&#34;&gt;gRPCurl&lt;/a&gt;?&lt;/p&gt;&#xA;&lt;p&gt;I wanted to debug &lt;a href=&#34;https://cloud.google.com/profiler/docs&#34;&gt;Cloud Profiler&lt;/a&gt; and its agent makes &lt;a href=&#34;https://github.com/googleapis/googleapis/blob/42ba7e6302f5e0f10ac2b9b17f5b6d568ecae02d/google/devtools/cloudprofiler/v2/profiler.proto#L83&#34;&gt;&lt;code&gt;UpdateProfile&lt;/code&gt;&lt;/a&gt; RPCs to &lt;a href=&#34;https://github.com/googleapis/googleapis/blob/42ba7e6302f5e0f10ac2b9b17f5b6d568ecae02d/google/devtools/cloudprofiler/v2/profiler.proto#L41&#34;&gt;&lt;code&gt;cloudprofiler.googleapis.com&lt;/code&gt;&lt;/a&gt;. Cloud Profiler is more challenging service to debug because (a) it&amp;rsquo;s publicly &amp;ldquo;write-only&amp;rdquo;; and (b) it has complex messages. &lt;code&gt;UpdateProfile&lt;/code&gt; sends &lt;a href=&#34;https://github.com/googleapis/googleapis/blob/42ba7e6302f5e0f10ac2b9b17f5b6d568ecae02d/google/devtools/cloudprofiler/v2/profiler.proto#L123&#34;&gt;&lt;code&gt;UpdateProfileRequest&lt;/code&gt;&lt;/a&gt; messages that include &lt;a href=&#34;https://github.com/googleapis/googleapis/blob/42ba7e6302f5e0f10ac2b9b17f5b6d568ecae02d/google/devtools/cloudprofiler/v2/profiler.proto#L123&#34;&gt;&lt;code&gt;Profile&lt;/code&gt;&lt;/a&gt; messages that include &lt;code&gt;profile_bytes&lt;/code&gt; which are gzip compressed serialized protos of &lt;a href=&#34;https://github.com/google/pprof&#34;&gt;pprof&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://github.com/google/pprof/blob/d61513b1440d93d62aad023cc60d7a33f3917b70/proto/profile.proto#L46&#34;&gt;&lt;code&gt;Profile&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Operators</title>
      <link>https://pretired.dazwilkin.com/posts/230310/</link>
      <pubDate>Fri, 10 Mar 2023 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230310/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt; uses a Kubernetes Operator to orchestrate the lifecycle of its health checks. Ackal&amp;rsquo;s Operator is written in Go using &lt;a href=&#34;https://github.com/kubernetes-sigs/kubebuilder&#34;&gt;&lt;code&gt;kubebuilder&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Yesterday, my interest was piqued by a &lt;a href=&#34;https://metalbear.co&#34;&gt;MetalBear&lt;/a&gt; blog post &lt;a href=&#34;https://metalbear.co/blog/writing-a-kubernetes-operator/&#34;&gt;Writing a Kubernetes Operator [in Rust]&lt;/a&gt;. I spent some time reimplementing one of Ackal&amp;rsquo;s CRDs (&lt;code&gt;Check&lt;/code&gt;) using &lt;a href=&#34;https://github.com/kube-rs/kube&#34;&gt;&lt;code&gt;kube-rs&lt;/code&gt;&lt;/a&gt; and not only refreshed my Rust knowledge but learned a bunch more about Kubernetes and Operators.&lt;/p&gt;&#xA;&lt;p&gt;While rummaging around the Kubernetes documentation, I discovered flant&amp;rsquo;s &lt;a href=&#34;https://github.com/flant/shell-operator&#34;&gt;&lt;code&gt;Shell-operator&lt;/code&gt;&lt;/a&gt; and spent some time today exploring its potential.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Secure (TLS) gRPC services with LKE</title>
      <link>https://pretired.dazwilkin.com/posts/230215/</link>
      <pubDate>Wed, 15 Feb 2023 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230215/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; &lt;a href=&#34;https://cert-manager.io&#34;&gt;&lt;code&gt;cert-manager&lt;/code&gt;&lt;/a&gt; is a better solution to what follows.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;I wrote about deploying &lt;a href=&#34;https://pretired.dazwilkin.com/posts/220603/&#34;&gt;Secure (TLS) gRPC services with Vultr Kubernetes Engine (VKE)&lt;/a&gt;. This week, I&amp;rsquo;ve reproduced this deployment using Linode Kubernetes Engine (LKE).&lt;/p&gt;&#xA;&lt;p&gt;Thanks to the consistency provided by Kubernetes, the Kubernetes programming is almost identical. The main differences are between the CLI&amp;rsquo;s provided by these platforms. Both are good. They&amp;rsquo;re just different.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m going to include the &lt;code&gt;linode-cli&lt;/code&gt; commands I&amp;rsquo;m using in this post as I found it slightly more quirky.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Authenticate PromLens to Google Managed Prometheus</title>
      <link>https://pretired.dazwilkin.com/posts/230104/</link>
      <pubDate>Wed, 04 Jan 2023 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230104/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m using &lt;a href=&#34;https://cloud.google.com/stackdriver/docs/managed-prometheus&#34;&gt;Google Managed Service for Prometheus (GMP)&lt;/a&gt; and liking it.&lt;/p&gt;&#xA;&lt;p&gt;Sometime ago, I tried using &lt;a href=&#34;https://promlens.com/&#34;&gt;PromLens&lt;/a&gt; with GMP but GMP&amp;rsquo;s Prometheus HTTP API endpoint requires auth and I&amp;rsquo;ve battled Prometheus&amp;rsquo; somewhat limited auth mechanism before (&lt;a href=&#34;https://pretired.dazwilkin.com/posts/211005/&#34;&gt;Scraping metrics exposed by Google Cloud Run services that require authentication&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;p&gt;Listening to &lt;a href=&#34;https://promcon.io/2022-munich/schedule/&#34;&gt;PromCon EU 2022&lt;/a&gt; videos, I learned that PromLens has been &lt;a href=&#34;https://promlabs.com/blog/2022/10/25/promlabs-and-chronosphere-open-source-the-promlens-query-builder&#34;&gt;open sourced&lt;/a&gt; and contributed to the Prometheus project. Eventually, the functionality of PromLens should be combined into the Prometheus UI.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Maintaining Container Images</title>
      <link>https://pretired.dazwilkin.com/posts/221128/</link>
      <pubDate>Mon, 28 Nov 2022 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/221128/</guid>
      <description>&lt;p&gt;As I contemplate moving my &amp;ldquo;thing&amp;rdquo; into production, I&amp;rsquo;m anticipating aspects of the application that need maintenance and how this can be automated.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;d been negligent in the maintenance of some of my container images.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m using mostly Go and some Rust as the basis of static(ally-compiled) binaries that run in these containers &lt;strong&gt;but&lt;/strong&gt; not every container has a base image of &lt;a href=&#34;https://hub.docker.com/_/scratch&#34;&gt;&lt;code&gt;scratch&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;scratch&lt;/code&gt; is the &lt;strong&gt;only&lt;/strong&gt; base image that doesn&amp;rsquo;t change and thus the only base image that doesn&amp;rsquo;t require that container images buit &lt;code&gt;FROM&lt;/code&gt; it, be maintained.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Delegate domain-wide authority using Golang</title>
      <link>https://pretired.dazwilkin.com/posts/221117/</link>
      <pubDate>Thu, 17 Nov 2022 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/221117/</guid>
      <description>&lt;p&gt;I&amp;rsquo;d not used Google&amp;rsquo;s &lt;a href=&#34;https://developers.google.com/identity/protocols/oauth2/service-account#delegatingauthority&#34;&gt;Domain-wide Delegation&lt;/a&gt; from Golang and struggled to find example code.&lt;/p&gt;&#xA;&lt;p&gt;Google provides Java and Python &lt;a href=&#34;https://developers.google.com/identity/protocols/oauth2/service-account#authorizingrequests&#34;&gt;samples&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Google has a myriad packages implementing its OAuth security and it&amp;rsquo;s always daunting trying to determine which one to use.&lt;/p&gt;&#xA;&lt;p&gt;As it happens, I backed into the solution through &lt;code&gt;client.Options&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ctx&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;context&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Background&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Google Workspace APIS don&amp;#39;t use IAM do use OAuth scopes&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Scopes used here must be reflected in the scopes on the&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Google Workspace Domain-wide Delegate client&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;scopes&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; []&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;{ &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt; }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Delegates on behalf of this Google Workspace user&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;subject&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a@google-workspace-email.com&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;creds&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;google&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;FindDefaultCredentialsWithParams&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;ctx&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;google&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;CredentialsParams&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;Scopes&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;scopes&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;Subject&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;subject&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;opts&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;option&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;WithCredentials&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;creds&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;admin&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NewService&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ctx&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;opts&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this case &lt;code&gt;NewService&lt;/code&gt; applies to Google&amp;rsquo;s Golang &lt;a href=&#34;https://pkg.go.dev/google.golang.org/api/admin/directory/v1&#34;&gt;Admin SDK API&lt;/a&gt; although the pattern of &lt;code&gt;NewService(ctx)&lt;/code&gt; or &lt;code&gt;NewService(ctx, opts)&lt;/code&gt; where &lt;code&gt;opts&lt;/code&gt; is a &lt;a href=&#34;https://pkg.go.dev/google.golang.org/api@v0.103.0/option#ClientOption&#34;&gt;&lt;code&gt;option.ClientOption&lt;/code&gt;&lt;/a&gt; is consistent across Google&amp;rsquo;s Golang libraries.&lt;/p&gt;</description>
    </item>
    <item>
      <title>`curl`&#39;ing a Tailscale Webhook</title>
      <link>https://pretired.dazwilkin.com/posts/221114/</link>
      <pubDate>Mon, 14 Nov 2022 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/221114/</guid>
      <description>&lt;p&gt;[Tailscale] is &lt;strong&gt;really&lt;/strong&gt; good. I&amp;rsquo;ve been using it as a virtual private network to span 2 home networks and to securely (!) access my hosts when I&amp;rsquo;m remote.&lt;/p&gt;&#xA;&lt;p&gt;Recently Tailscale added &lt;a href=&#34;https://tailscale.com/kb/1213/webhooks/&#34;&gt;Webhook&lt;/a&gt; functionality to permit processing subscribed-to (Tailscale) events. I&amp;rsquo;m always a sucker for a webhook ;-)&lt;/p&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s a &lt;code&gt;curl&lt;/code&gt; command to send a test event to  a Tailscale Webhook:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;URL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# From Tailscale&amp;#39;s docs&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://tailscale.com/kb/1213/webhooks/#events-payload&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BODY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;timestamp&amp;#34;: &amp;#34;2022-09-21T13:37:51.658918-04:00&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;version&amp;#34;: 1,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;type&amp;#34;: &amp;#34;test&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;tailnet&amp;#34;: &amp;#34;example.com&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;message&amp;#34;: &amp;#34;This is a test event&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;data&amp;#34;: null&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;date +%s&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;V&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;T&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BODY&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  | openssl dgst -sha256 -hmac &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SECRET&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -hex -r &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  | head --bytes&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;64&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--request POST &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tailscale-Webhook-Signature:t=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;T&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,v1=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;V&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--data &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BODY&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;https://&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;URL&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There must be a better way of extracting the hashed value from the &lt;code&gt;openssl&lt;/code&gt; output.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The curious cases of the `deleted:serviceaccount`</title>
      <link>https://pretired.dazwilkin.com/posts/221111/</link>
      <pubDate>Fri, 11 Nov 2022 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/221111/</guid>
      <description>&lt;p&gt;While testing &lt;a href=&#34;https://pretired.dazwilkin.com/posts/221110/&#34;&gt;Firestore export and import&lt;/a&gt; yesterday and checking the IAM permissions on a Cloud Storage Bucket, I noticed some Member (&lt;code&gt;member&lt;/code&gt;) values (I think Google refers to these as Principals) were logical but unfamiliar to me:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deleted:serviceAccount:{email}?uid={uid}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I was using &lt;code&gt;gsutil iam get gs://${BUCKET}&lt;/code&gt; because I&amp;rsquo;d realized (and this is another useful lesson) that, as I&amp;rsquo;ve been creating daily test projects, I&amp;rsquo;ve been binding each project&amp;rsquo;s Firestore Service Account (&lt;code&gt;service-{project-number}@gcp-sa-firestore.iam.gserviceaccount.com&lt;/code&gt;) to a Bucket owned by another Project &lt;strong&gt;but&lt;/strong&gt; I hadn&amp;rsquo;t been deleting the binding when I deleted the Project.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Firestore Export &amp; Import</title>
      <link>https://pretired.dazwilkin.com/posts/221110/</link>
      <pubDate>Thu, 10 Nov 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/221110/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m using Firestore to maintain state in my &amp;ldquo;thing&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;In an attempt to ensure that I&amp;rsquo;m able to restore the database, I run (Cloud Scheduler) scheduled backups (see &lt;a href=&#34;https://pretired.dazwilkin.com/posts/220503/&#34;&gt;Automating Scheduled Firestore Exports&lt;/a&gt; and I&amp;rsquo;ve been testing imports to ensure that the process works.&lt;/p&gt;&#xA;&lt;p&gt;It does.&lt;/p&gt;&#xA;&lt;p&gt;I thought I&amp;rsquo;d document an important but subtle consideration with Firestore exports (which I&amp;rsquo;d not initially understood).&lt;/p&gt;&#xA;&lt;p&gt;Google facilitates that backup process with the sibling commands:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Basic programmatic access to GitHub Issues</title>
      <link>https://pretired.dazwilkin.com/posts/221106/</link>
      <pubDate>Sun, 06 Nov 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/221106/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s been a while!&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve been spending time writing Bash scripts and a web site but neither has been sufficiently creative that I&amp;rsquo;ve felt worth a blog post.&lt;/p&gt;&#xA;&lt;p&gt;As I&amp;rsquo;ve been finalizing the web site, I needed an Issue Tracker and decided to leverage GitHub(&amp;rsquo;s &lt;a href=&#34;https://docs.github.com/en/issues&#34;&gt;Issues&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;p&gt;As a former Googler, I&amp;rsquo;m familiar with Google&amp;rsquo;s (excellent) internal issue tracking tool (Buganizer) and it&amp;rsquo;s public manifestation &lt;a href=&#34;https://issuetracker.google.com&#34;&gt;Issue Tracker&lt;/a&gt;. Google documents Issue Tracker and its &lt;a href=&#34;https://developers.google.com/issue-tracker/concepts/issues&#34;&gt;Issue&lt;/a&gt; type which I&amp;rsquo;ve mercilessly plagiarized in my implementation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Secure (TLS) gRPC services with VKE</title>
      <link>https://pretired.dazwilkin.com/posts/220603/</link>
      <pubDate>Fri, 03 Jun 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220603/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; &lt;a href=&#34;https://cert-manager.io&#34;&gt;&lt;code&gt;cert-manager&lt;/code&gt;&lt;/a&gt; is a better solution to what follows.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve a need to deploy a Vultr Kubernetes Engine (VKE) cluster on a daily basis (create and delete within a few hours) and expose (securely|TLS) a gRPC service.&lt;/p&gt;&#xA;&lt;p&gt;I have an existing solution &lt;a href=&#34;https://pretired.dazwilkin.com/posts/211130/&#34;&gt;Automatic Certs w/ Golang gRPC service on Compute Engine&lt;/a&gt; that combines a gRPC Healthchecking and an ACME service and decided to reuse this.&lt;/p&gt;&#xA;&lt;p&gt;In order for it work, we need:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vultr CLI and JSON output</title>
      <link>https://pretired.dazwilkin.com/posts/220602/</link>
      <pubDate>Thu, 02 Jun 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220602/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve begun exploring &lt;a href=&#34;https://vultr.com&#34;&gt;Vultr&lt;/a&gt; after the company announced a managed Kubernetes offering &lt;a href=&#34;https://www.vultr.com/kubernetes/&#34;&gt;Vultr Kubernetes Engine (VKE)&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In my brief experience, it&amp;rsquo;s a decent platform and its CLI &lt;a href=&#34;https://github.com/vultr/vultr-cli&#34;&gt;&lt;code&gt;vultr-cli&lt;/code&gt;&lt;/a&gt; is mostly (!) good. The CLI has a limitation in that command output is text formatted and this makes it challenging to parse the output when scripting.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; The Vultr developers have a branch &lt;a href=&#34;https://github.com/vultr/vultr-cli/tree/rewrite&#34;&gt;&lt;code&gt;rewrite&lt;/code&gt;&lt;/a&gt; that includes a solution to this problem.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Example&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ID              12345678-90ab-cdef-1234-567890abcdef&#xA;LABEL           test&#xA;DATE CREATED    2022-01-01T00:00:00+00:00&#xA;CLUSTER SUBNET  255.255.255.255/16&#xA;SERVICE SUBNET  255.255.255.255/12&#xA;IP              255.255.255.255&#xA;ENDPOINT        12345678-90ab-cdef-1234-567890abcdef.vultr-k8s.com&#xA;VERSION         v1.23.5+3&#xA;REGION          mars&#xA;STATUS          pending&#xA; &#xA;NODE POOLS&#xA;ID              12345678-90ab-cdef-1234-567890abcdef&#xA;DATE CREATED    2022-01-01T00:00:00+00:00&#xA;DATE UPDATED    2022-01-01T00:00:00+00:00&#xA;LABEL           nodepool&#xA;TAG             foo&#xA;PLAN            vc2-1c-2gb&#xA;STATUS          pending&#xA;NODE QUANTITY   1&#xA;AUTO SCALER     false&#xA;MIN NODES       1&#xA;MAX NODES       1&#xA; &#xA;NODES&#xA;ID                                      DATE CREATED                    LABEL                   STATUS&#xA;12345678-&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Until that&amp;rsquo;s available, I&amp;rsquo;m lazy writing &lt;strong&gt;very simple&lt;/strong&gt; bash scripts to parse &lt;code&gt;vultr-cli&lt;/code&gt; command output as JSON. The repo is &lt;a href=&#34;https://github.com/DazWilkin/vultr-cli-format&#34;&gt;&lt;code&gt;vultr-cli-format&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automating HackMD documents</title>
      <link>https://pretired.dazwilkin.com/posts/220524/</link>
      <pubDate>Tue, 24 May 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220524/</guid>
      <description>&lt;p&gt;I was introduced to &lt;a href=&#34;https://hackmd.io&#34;&gt;HackMD&lt;/a&gt; while working on an open-source project. It&amp;rsquo;s a collaborative editing tool for Markdown documents &lt;strong&gt;and there&amp;rsquo;s an &lt;a href=&#34;https://hackmd.io/@hackmd-api/developer-portal&#34;&gt;API&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;I wanted to be able to programmatically edit one of my documents with a daily update. The &lt;a href=&#34;https://hackmd.io/@hackmd-api/developer-portal&#34;&gt;API&lt;/a&gt; is easy-to-use and my only challenge was futzing with escape characters in bash strips representing the document Markdown content.&lt;/p&gt;&#xA;&lt;p&gt;You&amp;rsquo;ll need an account with HackMD and an to &lt;a href=&#34;https://hackmd.io/settings#api&#34;&gt;Create API Token&lt;/a&gt; that I&amp;rsquo;ll refer to as &lt;code&gt;TOKEN&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Exporters for fly.io and Vultr</title>
      <link>https://pretired.dazwilkin.com/posts/220520/</link>
      <pubDate>Fri, 20 May 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220520/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been on a roll building utilities this week. I developed a Service Health dashboard for my &amp;ldquo;thing&amp;rdquo;, a &lt;a href=&#34;https://github.com/DazWilkin/fly-exporter&#34;&gt;Prometheus Exporter for Fly.io&lt;/a&gt; and today, a &lt;a href=&#34;https://github.com/DazWilkin/vultr-exporter&#34;&gt;Prometheus Exporter for Vultr&lt;/a&gt;. This is motivated by the fear that I will forget a deployed Cloud resource and incur a horrible bill.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve no written several Prometheus Exporters for cloud platforms:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/gcp-exporter&#34;&gt;Prometheus Exporter for GCP&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/linode-exporter&#34;&gt;Prometheus Exporter for Linode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/fly-exporter&#34;&gt;Prometheus Exporter for Fly.io&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/vultr-exporter&#34;&gt;Prometheus Exporter for Vultr&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Each of them monitors resource deployments and produces resource count metrics that can be scraped by Prometheus and alerted with Alertmanager. I have Alertmanager &lt;a href=&#34;https://prometheus.io/docs/alerting/latest/configuration/#pushover_config&#34;&gt;configured&lt;/a&gt; to send notifications to &lt;a href=&#34;https://pushover.net&#34;&gt;Pushover&lt;/a&gt;. Last week I wrote an integration between &lt;a href=&#34;https://pretired.dazwilkin.com/posts/220514/&#34;&gt;Google Cloud Monitoring to send notifications to Pushover&lt;/a&gt; too.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Google Monitoring Alerting to send Pushover notifications</title>
      <link>https://pretired.dazwilkin.com/posts/220514/</link>
      <pubDate>Sat, 14 May 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220514/</guid>
      <description>&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#artifacts&#34;&gt;Artifacts&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#pushover&#34;&gt;Pushover&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#caveat&#34;&gt;&lt;strong&gt;Caveat&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#cloud-monitoring-webhook&#34;&gt;Cloud Monitoring Webhook&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#cloud-functions-2nd-gen&#34;&gt;Cloud Functions&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#cloud-run&#34;&gt;Cloud Run&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;artifacts&#34;&gt;Artifacts&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GitHub: &lt;a href=&#34;https://github.com/DazWilkin/go-gcp-pushover-notificationchannel&#34;&gt;&lt;code&gt;go-gcp-pushover-notificationchannel&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Image: &lt;code&gt;ghcr.io/dazwilkin/go-gcp-pushover-notificationchannel:220515&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;pushover&#34;&gt;Pushover&lt;/h2&gt;&#xA;&lt;p&gt;Logging in to your &lt;a href=&#34;https://pushover.net&#34;&gt;Pushover&lt;/a&gt; account, you will be presented with a summary|dashboard page that includes &lt;code&gt;Your User Key&lt;/code&gt;. Copy the value of this key into a variable called &lt;code&gt;PUSHOVER_USER&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pushover.net/apps/build&#34;&gt;Create New Application|API Token&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pretired.dazwilkin.com/images/220514.pushover.app.png&#34; alt=&#34;Pushover: New API Token&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Pushover &lt;a href=&#34;https://pushover.net/api&#34;&gt;API&lt;/a&gt; has a &lt;a href=&#34;https://pushover.net/api#messages&#34;&gt;Pushing Messages&lt;/a&gt; method. The documentation describes the format of the HTTP Request. It must be a &lt;code&gt;POST&lt;/code&gt; using TLS (&lt;code&gt;https://&lt;/code&gt;) to &lt;code&gt;https://api.pushover.net/1/messages.json&lt;/code&gt;. The &lt;code&gt;content-type&lt;/code&gt; should be &lt;code&gt;application/json&lt;/code&gt;. In the JSON body of the message, we must include &lt;code&gt;token&lt;/code&gt; (&lt;code&gt;PUSHOVER_TOKEN&lt;/code&gt;), &lt;code&gt;user&lt;/code&gt; (&lt;code&gt;PUSHOVER_USER_KEY&lt;/code&gt;), &lt;code&gt;device&lt;/code&gt; (we&amp;rsquo;ll use &lt;code&gt;cloud-monitoring&lt;/code&gt;) and a &lt;code&gt;title&lt;/code&gt; and a &lt;code&gt;message&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cloud Run custom domain mappings</title>
      <link>https://pretired.dazwilkin.com/posts/220506/</link>
      <pubDate>Fri, 06 May 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220506/</guid>
      <description>&lt;p&gt;I have several Cloud Run services that I want to map to a domain.&lt;/p&gt;&#xA;&lt;p&gt;During development, I create a Google Cloud Platform (GCP) project each day into which everything is deployed. This means that, every day, the Cloud Run services have newly non-inferable (to me) URLs. I thought this would be tedious to manage because:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;My DNS service isn&amp;rsquo;t programmable (I know!)&lt;/li&gt;&#xA;&lt;li&gt;Cloud Run services have non-inferable (by me) URLs&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;i.e. I thought I&amp;rsquo;d have to manually update the DNS entries each day.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automating Scheduled Firestore Exports</title>
      <link>https://pretired.dazwilkin.com/posts/220503/</link>
      <pubDate>Tue, 03 May 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220503/</guid>
      <description>&lt;p&gt;For my &amp;ldquo;thing&amp;rdquo;, I use &lt;a href=&#34;https://cloud.google.com/firestore&#34;&gt;Firestore&lt;/a&gt; to persist state. I like Firestore a lot and, having been around Google for almost (!) a decade, I much prefer it to Datastore.&lt;/p&gt;&#xA;&lt;p&gt;Firestore has a &lt;a href=&#34;https://firebase.google.com/docs/firestore/manage-data/export-import&#34;&gt;managed export|import service&lt;/a&gt; and I use this to backup Firestore collections|documents.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;d been doing backups manually (using &lt;code&gt;gcloud&lt;/code&gt;) and decided today to take the plunge and use &lt;a href=&#34;https://cloud.google.com/scheduler&#34;&gt;Cloud Scheduler&lt;/a&gt; for the first time. I&amp;rsquo;d been reluctant to do this until now because I&amp;rsquo;d assumed &lt;strong&gt;incorrectly&lt;/strong&gt; that I&amp;rsquo;d need to write a wrapping service to invoke the export.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Playing with GitHub Container Registry REST API</title>
      <link>https://pretired.dazwilkin.com/posts/220422/</link>
      <pubDate>Fri, 22 Apr 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220422/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve a day to catch up on blogging. I&amp;rsquo;m building a &amp;ldquo;thing&amp;rdquo; and getting this near to the finish line consumes my time and has meant that I&amp;rsquo;m not originating anything particularly new. However, there are a couple of tricks in my deployment process that may be of interest to others.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve been a long-term using of Google&amp;rsquo;s [Cloud Build] and like the simplicity (everything&amp;rsquo;s a container, alot!). Because I&amp;rsquo;m using GitHub repos, I&amp;rsquo;ve been using GitHub Actions to (re)build containers on pushes and GitHub Container registry (GHCR) to store the results. I know that Google provides analogs for GitHub repos and (forces me to use) Artifact Registry (to deploy my Cloud Run services) &lt;strong&gt;but&lt;/strong&gt; even though I dislike GitHub Actions, it&amp;rsquo;s really easy to do everything in one place.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Google&#39;s Public Certificate Authority with Golang autocert</title>
      <link>https://pretired.dazwilkin.com/posts/220421/</link>
      <pubDate>Thu, 21 Apr 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220421/</guid>
      <description>&lt;p&gt;Last year, I wrote about using &lt;a href=&#34;https://pretired.dazwilkin.com/posts/211130/&#34;&gt;Automatic Certs w/ Golang gRPC service on Compute Engine&lt;/a&gt;. That solution uses &lt;a href=&#34;https://en.wikipedia.org/wiki/Automatic_Certificate_Management_Environment&#34;&gt;ACME&lt;/a&gt; with (the wonderful) &lt;a href=&#34;https://letsencrypt.org&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt;. Google is offering a private preview of &lt;a href=&#34;https://cloud.google.com/blog/products/identity-security/automate-public-certificate-lifecycle-management-via--acme-client-api&#34;&gt;Automate Public Certificates Lifecycle Management via RFC 8555 (ACME)&lt;/a&gt; and, because I&amp;rsquo;m using Google Cloud Platform extensively to build a &amp;ldquo;thing&amp;rdquo; and I think it would be useful to have a backup to Let&amp;rsquo;s Encrypt, I thought I&amp;rsquo;d give the solution a try. You&amp;rsquo;ll need to sign-up for the private preview, for what follows to work.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus HTTP Service Discovery of Cloud Run services</title>
      <link>https://pretired.dazwilkin.com/posts/220225/</link>
      <pubDate>Fri, 25 Feb 2022 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220225/</guid>
      <description>&lt;p&gt;Some time ago, I wrote about using &lt;a href=&#34;https://pretired.dazwilkin.com/posts/210419/&#34;&gt;Prometheus Service Discovery w/ Consul for Cloud Run&lt;/a&gt; and also &lt;a href=&#34;https://pretired.dazwilkin.com/posts/211005/&#34;&gt;Scraping metrics exposed by Google Cloud Run services that require authentication&lt;/a&gt;. Both solutions remain viable but they didn&amp;rsquo;t address another use case for Prometheus and Cloud Run services that I have with a &amp;ldquo;thing&amp;rdquo; that I&amp;rsquo;ve been building.&lt;/p&gt;&#xA;&lt;p&gt;In this scenario, I want to:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Configure Prometheus to scrape Cloud Run service metrics&lt;/li&gt;&#xA;&lt;li&gt;Discover Cloud Run services dynamically&lt;/li&gt;&#xA;&lt;li&gt;Authenticate to Cloud Run using Firebase Auth ID tokens&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;These requirements and &amp;ndash; one other &amp;ndash; present several challenges:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automatic Certs w/ Golang gRPC service on Compute Engine</title>
      <link>https://pretired.dazwilkin.com/posts/211130/</link>
      <pubDate>Tue, 30 Nov 2021 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/211130/</guid>
      <description>&lt;p&gt;I needed to deploy a &lt;a href=&#34;https://github.com/grpc/grpc/blob/master/src/proto/grpc/health/v1/health.proto&#34;&gt;healthcheck&lt;/a&gt;-enabled gRPC TLS-enabled service. Fortunately, most (all?) of the SDKs include an implementation, e.g. Golang has &lt;a href=&#34;https://github.com/grpc/grpc-go/tree/master/health&#34;&gt;&lt;code&gt;grpc-go/health&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I learned in my travels that:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;DigitalOcean [App] platform does not (&lt;a href=&#34;https://www.digitalocean.com/community/questions/app-platform-http-2-support&#34;&gt;link&lt;/a&gt;) work with TLS-based gRPC apps.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://fly.io&#34;&gt;Fly&lt;/a&gt; has a regression (&lt;a href=&#34;https://community.fly.io/t/urgent-grpc-server-unreachable-via-grpcurl/2694/5&#34;&gt;link&lt;/a&gt;) that breaks gRPC&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;So, I resorted to Google Cloud Platform (GCP). Although Cloud Run would be well-suited to running the gRPC app, it uses a proxy|sidecar to provision a cert for the app and I wanted to be able to (easily use a custom domain) and give myself a somewhat general-purpose solution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Firebase Auth authorized domains</title>
      <link>https://pretired.dazwilkin.com/posts/211026/</link>
      <pubDate>Tue, 26 Oct 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/211026/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m using Firebase Authentication in a project to authenticate users of various OAuth2 identity systems. Firebase Authentication requires a set of Authorized Domains.&lt;/p&gt;&#xA;&lt;p&gt;The (web) app that interacts with Firebase Authentication is deployed to Cloud Run.  The Authorized Domains list must include the app&amp;rsquo;s Cloud Run service URL.&lt;/p&gt;&#xA;&lt;p&gt;Cloud Run service URLs vary by Project (ID). They are a combination of the service name, a hash (?) of the Project (ID) and &lt;code&gt;.a.run.app&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using `gcloud ... --format` with arbitrary returned data</title>
      <link>https://pretired.dazwilkin.com/posts/211022/</link>
      <pubDate>Fri, 22 Oct 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/211022/</guid>
      <description>&lt;p&gt;If you use &lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt;, you&amp;rsquo;ll know that, its &lt;a href=&#34;https://stedolan.github.io/jq/manual/&#34;&gt;documentation&lt;/a&gt; uses examples that you can try locally or using the excellent &lt;a href=&#34;https://jqplay.org&#34;&gt;&lt;code&gt;jqplay&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[1,2,3]&amp;#34;&lt;/span&gt; | jq .&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1:&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  2,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And &lt;a href=&#34;https://jqplay.org/s/L_n_bO9Ans&#34;&gt;here&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you use Google Cloud Platform (GCP) CLI, &lt;a href=&#34;https://cloud.google.com/sdk/gcloud&#34;&gt;&lt;code&gt;gcloud&lt;/code&gt;&lt;/a&gt;, this powerful tool includes JSON output formatting of results (&lt;code&gt;--format=json&lt;/code&gt;) and YAML (&lt;code&gt;--format=yaml&lt;/code&gt;) etc. and includes a set of so-called &lt;a href=&#34;https://cloud.google.com/sdk/gcloud&#34;&gt;projections&lt;/a&gt; that you can use to format the returned data.&lt;/p&gt;&#xA;&lt;p&gt;There is a comparable &lt;a href=&#34;https://cloud.google.com/sdk/gcloud/reference/topic/projections#slice&#34;&gt;&lt;code&gt;slice&lt;/code&gt;&lt;/a&gt; projection that you may use with &lt;code&gt;gcloud&lt;/code&gt; and the documentation even includes an example:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang Structured Logging w/ Google Cloud Logging (2)</title>
      <link>https://pretired.dazwilkin.com/posts/211018/</link>
      <pubDate>Mon, 18 Oct 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/211018/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt; There&amp;rsquo;s an issue with my naive implementation of &lt;code&gt;RenderValuesHook&lt;/code&gt; as described in this post. I summarized the problem in this &lt;a href=&#34;https://github.com/go-logr/logr/issues/120&#34;&gt;issue&lt;/a&gt; where I&amp;rsquo;ve outlined (hopefully) a more robust solution.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Recently, I &lt;a href=&#34;https://pretired.dazwilkin.com/posts/210928/&#34;&gt;described&lt;/a&gt; how to configure Golang logging so that user-defined key-values applied to the logs are parsed when ingested by &lt;a href=&#34;https://cloud.google.com/logging&#34;&gt;Google Cloud Logging&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s an example of what we&amp;rsquo;re trying to achieve. This is an example Cloud Logging log entry that incorporates user-defined labels (see &lt;code&gt;dog:freddie&lt;/code&gt; and &lt;code&gt;foo:bar&lt;/code&gt;) and a readily-querable &lt;code&gt;jsonPayload&lt;/code&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sigstore</title>
      <link>https://pretired.dazwilkin.com/posts/211007/</link>
      <pubDate>Thu, 07 Oct 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/211007/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been on a digression (&lt;a href=&#34;https://github.com/DazWilkin/gcp-oidc-token-proxy&#34;&gt;&lt;code&gt;gcp-oidc-token-proxy&lt;/code&gt;&lt;/a&gt;) this week. Yesterday I began exploring &lt;a href=&#34;https://podman.io&#34;&gt;Podman&lt;/a&gt; and &lt;a href=&#34;https://pretired.dazwilkin.com/posts/211006/&#34;&gt;wrote&lt;/a&gt; briefly about running &lt;code&gt;gcp-oidc-token-proxy&lt;/code&gt; on my localhost using it.&lt;/p&gt;&#xA;&lt;p&gt;This morning while walking with my dog, I &lt;a href=&#34;https://www.heavybit.com/library/podcasts/the-kubelist-podcast/ep-20-sigstore-with-dan-lorenc-of-google/&#34;&gt;listened&lt;/a&gt; to Google&amp;rsquo;s Dan Lorenc explain &lt;a href=&#34;https://www.sigstore.dev/&#34;&gt;Sigstore&lt;/a&gt; (blog](&lt;a href=&#34;https://blog.sigstore.dev/&#34;&gt;https://blog.sigstore.dev/&lt;/a&gt;)) on &lt;a href=&#34;https://kubelist.com/podcast/&#34;&gt;The Kubelist Podcast&lt;/a&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;p&gt;The plan today is to try to sign the &lt;code&gt;gcp-oidc-token-proxy&lt;/code&gt; container &lt;a href=&#34;https://github.com/DazWilkin/gcp-oidc-token-proxy/pkgs/container/gcp-oidc-token-proxy&#34;&gt;images&lt;/a&gt; in GitHub Container Registry.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; I decided against trying the hardware key approach. I have a Google Titan key and only Yubikeys are &lt;a href=&#34;https://github.com/go-piv/piv-go#non-yubikey-smartcards&#34;&gt;well-tested&lt;/a&gt; by &lt;a href=&#34;https://github.com/go-piv/piv-go&#34;&gt;&lt;code&gt;go-piv&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Podman</title>
      <link>https://pretired.dazwilkin.com/posts/211006/</link>
      <pubDate>Wed, 06 Oct 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/211006/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve read about &lt;a href=&#34;https://podman.io/&#34;&gt;Podman&lt;/a&gt; and been intrigued by it but never taken the time to install it and play around. This morning, walking with my dog, I listened to the almost-always-interesting &lt;a href=&#34;https://kubernetespodcast.com&#34;&gt;Kubernetes Podcast&lt;/a&gt; and two of the principals behind Podman were on the show to &lt;a href=&#34;https://kubernetespodcast.com/episode/164-podman/&#34;&gt;discuss&lt;/a&gt; it.&lt;/p&gt;&#xA;&lt;p&gt;I decided to install it and use it in this week&amp;rsquo;s &lt;a href=&#34;https://github.com/DazWilkin/gcp-oidc-token-proxy&#34;&gt;project&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s a working Podman deployment for &lt;code&gt;gcp-oidc-token-proxy&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ACCOUNT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ENDPOINT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Can&amp;#39;t match container name i.e. prometheus&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;POD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SECRET&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ACCOUNT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;podman secret create &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SECRET&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PWD&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ACCOUNT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Pod publishes pod-port:container-port&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;podman pod create &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;POD&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--publish&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;9091:9090 &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--publish&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;7776:7777&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PROMETHEUS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;mktemp&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Important&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod go+r &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROMETHEUS&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--expression&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s|some-service-xxxxxxxxxx-xx.a.run.app|&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ENDPOINT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;|g&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PWD&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/prometheus.yml &amp;gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROMETHEUS&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Prometheus&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Requires --tty&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Can&amp;#39;t include --publish but exposes 9090&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;podman run &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--detach --rm --tty &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--pod&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;POD&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;prometheus &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--volume&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROMETHEUS&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;:/etc/prometheus/prometheus.yml &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;docker.io/prom/prometheus:v2.30.2 &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --config.file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/etc/prometheus/prometheus.yml &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --web.enable-lifecycle&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# GCP OIDC Token Proxy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Can&amp;#39;t include --publish but exposes 7777&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;podman run &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--detach --rm &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--pod&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;POD&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;gcp-oidc-token-proxy &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--secret&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SECRET&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--env&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/run/secrets/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SECRET&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;ghcr.io/dazwilkin/gcp-oidc-token-proxy:ec8fa9d9ab1b7fa47448ff32e34daa0c3d211a8d &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --port&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7777&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;prometheus&lt;/code&gt; container includes a &lt;code&gt;volume&lt;/code&gt; mount.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scraping metrics exposed by Google Cloud Run services that require authentication</title>
      <link>https://pretired.dazwilkin.com/posts/211005/</link>
      <pubDate>Tue, 05 Oct 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/211005/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve written a solution (&lt;a href=&#34;https://github.com/DazWilkin/gcp-oidc-token-proxy&#34;&gt;&lt;code&gt;gcp-oidc-token-proxy&lt;/code&gt;&lt;/a&gt;) that can be used in conjunction with Prometheus &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/configuration/configuration/#oauth2&#34;&gt;OAuth2&lt;/a&gt; to authenticate requests so that Prometheus can scrape metrics exposed by e.g. Cloud Run services that require authentication. The solution resulted from my &lt;a href=&#34;https://stackoverflow.com/questions/69411584/is-there-a-way-to-configure-prometheus-to-use-a-google-service-account-to-auth&#34;&gt;question&lt;/a&gt; on Stack overflow.&lt;/p&gt;&#xA;&lt;p&gt;Problem #1: Endpoint requires authentication&lt;/p&gt;&#xA;&lt;p&gt;Given a Cloud Run service URL for which:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ENDPOINT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;my-server-blahblah-wl.a.run.app&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Returns 200 when authentication w/ an ID token&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TOKEN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;gcloud auth print-identity-token&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--silent &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--request GET &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization: Bearer &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;TOKEN&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--write-out &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%{response_code}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--output /dev/null &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;https://&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ENDPOINT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/metrics&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Returns 403 otherwise&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--silent &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--request GET &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--write-out &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%{response_code}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--output /dev/null &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;https://&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ENDPOINT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/metrics&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Problem #2: Prometheus &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/configuration/configuration/#oauth2&#34;&gt;OAuth2&lt;/a&gt; configuration is constrained&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang Structured Logging w/ Google Cloud Logging</title>
      <link>https://pretired.dazwilkin.com/posts/210928/</link>
      <pubDate>Tue, 28 Sep 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210928/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve multiple components in an app and these are deployed across multiple Google Cloud Platform (GCP) services: Kubernetes Engine, Cloud Functions, Cloud Run, etc. Almost everything is written in Golang and I started the project using &lt;a href=&#34;https://github.com/go-logr/logr&#34;&gt;&lt;code&gt;go-logr&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;logr&lt;/code&gt; is in two parts: a &lt;code&gt;Logger&lt;/code&gt; that you use to write log entries; a &lt;code&gt;LogSink&lt;/code&gt; (adaptor) that consumes log entries and outputs them to a specific log implementation.&lt;/p&gt;&#xA;&lt;p&gt;Initially, I defaulted to using &lt;code&gt;stdr&lt;/code&gt; which is a &lt;code&gt;LogSink&lt;/code&gt; for Go&amp;rsquo;s standard logging implementation. Something similar to the module&amp;rsquo;s &lt;a href=&#34;https://github.com/go-logr/stdr/blob/master/example/main.go&#34;&gt;example&lt;/a&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>GitHub help with dependency management</title>
      <link>https://pretired.dazwilkin.com/posts/210924/</link>
      <pubDate>Fri, 24 Sep 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210924/</guid>
      <description>&lt;p&gt;This is very useful:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pretired.dazwilkin.com/images/210924.notifications.png&#34; alt=&#34;GitHub Notifications&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;I am building an application that comprises multiple repos. I continue to procrastinate on whether using multiple repos vs. a monorepo was a good idea but, an issue that I have (had) is the need to ensure that the repos&amp;rsquo; contents are using current|latest modules. GitHub can help.&lt;/p&gt;&#xA;&lt;p&gt;Most of the application is written in Golang with a smattering of Rust and some JavaScript.&lt;/p&gt;</description>
    </item>
    <item>
      <title>`gcloud beta run services replace`</title>
      <link>https://pretired.dazwilkin.com/posts/210907/</link>
      <pubDate>Mon, 06 Sep 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210907/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; I&amp;rsquo;m working on a project that includes multiple Cloud Run services. I&amp;rsquo;ve been putting my &lt;code&gt;gcloud&lt;/code&gt; head on to deploy these services thinking that it&amp;rsquo;s curious there&amp;rsquo;s no way to write the specs as YAML configs. Today, I learned that there is: &lt;a href=&#34;https://cloud.google.com/sdk/gcloud/reference/beta/run/services/replace&#34;&gt;&lt;code&gt;gcloud beta run services replace&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;What prompted the discovery was some frustration trying to deploy a JSON-valued environment variable to Cloud Run:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  local FIREBASE_CONFIG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    apiKey: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;FIREBASE_API_KEY&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    authDomain: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;FIREBASE_AUTH_DOMAIN&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    projectId: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;FIREBASE_PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    storageBucket: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;FIREBASE_STORAGE_BUCKET&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    messagingSenderId: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;FIREBASE_MESSAGING_SENDER&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    appId: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;FIREBASE_APP&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  gcloud run deploy &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SRV_NAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --image&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;IMAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --command&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/server&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --args&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--endpoint=:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PORT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --set-env-vars&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;FIREBASE_CONFIG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;FIREBASE_CONFIG&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --max-instances&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --memory&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;256Mi &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --ingress&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;all &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --platform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;managed &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --port&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PORT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --allow-unauthenticated &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --region&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;REGION&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --project&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;gcloud&lt;/code&gt; balks at this.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Infrastructure as Code</title>
      <link>https://pretired.dazwilkin.com/posts/210902/</link>
      <pubDate>Thu, 02 Sep 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210902/</guid>
      <description>&lt;h2 id=&#34;problem&#34;&gt;Problem&lt;/h2&gt;&#xA;&lt;p&gt;I&amp;rsquo;m building an application that comprises:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Kubernetes¹&lt;/li&gt;&#xA;&lt;li&gt;Kubernetes Operator&lt;/li&gt;&#xA;&lt;li&gt;Cloud Firestore&lt;/li&gt;&#xA;&lt;li&gt;Cloud Functions&lt;/li&gt;&#xA;&lt;li&gt;Cloud Run&lt;/li&gt;&#xA;&lt;li&gt;Cloud Endpoints&lt;/li&gt;&#xA;&lt;li&gt;Stripe&lt;/li&gt;&#xA;&lt;li&gt;Firebase Authentication&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;¹ - I&amp;rsquo;m using Google Kubernetes Engine (GKE) but may include other managed Kubernetes offerings (e.g. Digital Ocean, Linode, Oracle). GKE clusters are manageable by &lt;code&gt;gcloud&lt;/code&gt; but other platforms require other CLI tools. All are accessible from bash but are these supported by e.g. Terraform (see below)?&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Many of the components are packaged as container images and, because I&amp;rsquo;m using GitHub to host the project&amp;rsquo;s repos (I&amp;rsquo;ll leave the monorepo discussion for another post), I&amp;rsquo;ve become inculcated and use GitHub Container Registry (GHCR) as the container repo.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Renewing Firebase Authentication ID tokens with gRPC</title>
      <link>https://pretired.dazwilkin.com/posts/210730/</link>
      <pubDate>Fri, 30 Jul 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210730/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve written before about a project in which I&amp;rsquo;m using Firebase Authentication in combination with Google Cloud Endpoints and a gRPC service running on Cloud Run:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pretired.dazwilkin.com/posts/210614/&#34;&gt;Firebase Authentication, Cloud Endpoints and gRPC (1of2)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pretired.dazwilkin.com/posts/210618/&#34;&gt;Firebase Authentication, Cloud Endpoints and gRPC (2of2)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This works well with one caveat, the ID tokens (JWTs) minted by Firebase Authentication have a 3600 second (one hour) lifetime.&lt;/p&gt;&#xA;&lt;p&gt;The user flow in my app is that whenever the user invokes the app&amp;rsquo;s CLI:&lt;/p&gt;</description>
    </item>
    <item>
      <title>gRPC Interceptors and in-memory gRPC connections</title>
      <link>https://pretired.dazwilkin.com/posts/210724/</link>
      <pubDate>Sat, 24 Jul 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210724/</guid>
      <description>&lt;p&gt;For&amp;hellip; reasons, I wanted to pre-filter gRPC requests to check for authorization. Authorization is implemented as a &amp;lsquo;micro-service&amp;rsquo; and I wanted the authorization server to run in the same process as the gRPC client.&lt;/p&gt;&#xA;&lt;p&gt;TL;DR:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Shiju&amp;rsquo;s &lt;a href=&#34;https://shijuvar.medium.com/writing-grpc-interceptors-in-go-bf3e7671fe48&#34;&gt;&amp;ldquo;Writing gRPC Interceptors in Go&amp;rdquo;&lt;/a&gt; is great&lt;/li&gt;&#xA;&lt;li&gt;This Stack overflow &lt;a href=&#34;https://stackoverflow.com/a/52080545/609290&#34;&gt;answer&lt;/a&gt; ostensibly for writing unit tests for gRPC got me an in-process server&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;What follows stands on these folks&amp;rsquo; shoulders&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;A key motivator for me to write blog posts is that helps me ensure that I understand things. Writing this post, I realized I&amp;rsquo;d not researched gRPC Interceptors and, as luck would have it, I found some interesting content, not on &lt;a href=&#34;https://grpc.io&#34;&gt;&lt;code&gt;grpc.io&lt;/code&gt;&lt;/a&gt; but on the &lt;a href=&#34;https://github.com/grpc-ecosystem&#34;&gt;&lt;code&gt;grpc-ecosystem&lt;/code&gt;&lt;/a&gt; repo, specifically &lt;a href=&#34;https://github.com/grpc-ecosystem/go-grpc-middleware&#34;&gt;Go gRPC middleware&lt;/a&gt;. But, I refer again to Shiju&amp;rsquo;s clear and helpful &lt;a href=&#34;https://shijuvar.medium.com/writing-grpc-interceptors-in-go-bf3e7671fe48&#34;&gt;&amp;ldquo;Writing gRPC Interceptors in Go&amp;rdquo;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Stripe</title>
      <link>https://pretired.dazwilkin.com/posts/210716/</link>
      <pubDate>Fri, 16 Jul 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210716/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s been almost a month since my last post. I&amp;rsquo;ve been occupied learning &lt;a href=&#34;https://stripe.com&#34;&gt;Stripe&lt;/a&gt; and integrating it into an application that I&amp;rsquo;m developing. The app benefits from a billing mechanism for prospective customers and, as far as I can tell, Stripe is the solution. I&amp;rsquo;d be interested in hearing perspectives on alternatives.&lt;/p&gt;&#xA;&lt;p&gt;As with any platform, there&amp;rsquo;s good and bad and I&amp;rsquo;ll summarize my perspective on Stripe here. It&amp;rsquo;s been some time since I developed in JavaScript and this lack of familiarity has meant that the solution took longer than I wanted to develop. That said, before this component, I developed integration with &lt;a href=&#34;https://firebase.google.com/products/auth&#34;&gt;Firebase Authentication&lt;/a&gt; and that required JavaScript&amp;rsquo;ing too and that was much easier (and more enjoyable).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Firebase Authentication, Cloud Endpoints and gRPC (2of2)</title>
      <link>https://pretired.dazwilkin.com/posts/210618/</link>
      <pubDate>Fri, 18 Jun 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210618/</guid>
      <description>&lt;p&gt;Earlier this week, I wrote about using &lt;a href=&#34;https://pretired.dazwilkin.com/posts/210614/&#34;&gt;Firebase Authentcation, Cloud Endpoints and gRPC (1of2)&lt;/a&gt;. Since then, I &lt;a href=&#34;https://github.com/GoogleCloudPlatform/esp-v2/issues/542&#34;&gt;learned some more&lt;/a&gt; and added a gRPC interceptor to implement basic authorization for the service.&lt;/p&gt;&#xA;&lt;h2 id=&#34;espv2---allow-unauthenticated&#34;&gt;ESPv2 &lt;code&gt;--allow-unauthenticated&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The Cloud Enpoints (ESPv2) proxy must be run as &lt;code&gt;--allow-unauthenticated&lt;/code&gt; on Cloud Run to ensure that requests make it to the proxy where the request is authenticated and only authenticated requests make it on to the backend service. Thanks Google&amp;rsquo;s &lt;a href=&#34;https://github.com/nareddyt&#34;&gt;Teju Nareddy&lt;/a&gt;!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Firebase Authentication, Cloud Endpoints and gRPC (1of2)</title>
      <link>https://pretired.dazwilkin.com/posts/210614/</link>
      <pubDate>Mon, 14 Jun 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210614/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m building a service that requires user authentication. The primary endpoint is a gRPC-based service. I would like to consider using certificate-based auth but this feels&amp;hellip; challenging. Instead, I have been aware of, but never used, &lt;a href=&#34;https://firebase.google.com/products/auth&#34;&gt;Firebase Authentication&lt;/a&gt; and was interested to see that &lt;a href=&#34;https://cloud.google.com/endpoints&#34;&gt;Cloud Endpoints&lt;/a&gt; includes Firebase Authentication as one of its supported auth mechanisms. Curiosity piqued, I confirmed that gRPC supports &lt;a href=&#34;https://grpc.io/docs/guides/auth/#using-google-token-based-authentication&#34;&gt;Google token-based authentication&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The following is a summary of what I did but I&amp;rsquo;ll leave the extensive documentation to Google, (Google&amp;rsquo;s) Firebase and gRPC, all of which, in this case, provide really good explanations.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cloud Endpoints combine OpenAPI and gRPC... or not!</title>
      <link>https://pretired.dazwilkin.com/posts/210608/</link>
      <pubDate>Tue, 08 Jun 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210608/</guid>
      <description>&lt;p&gt;See:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pretired.dazwilkin.com/posts/210519/&#34;&gt;Multiplexing gRPC and HTTP endpoints with Cloud Run&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pretired.dazwilkin.com/posts/200325/&#34;&gt;gRPC, Cloud Run &amp;amp; Endpoints&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/GoogleCloudPlatform/esp-v2/issues/523&#34;&gt;ESPv2: Configure Cloud Endpoints to proxy traffic to a Cloud Run multiplexed (gRPC|HTTP) service&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Challenges:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cloud Run permits single port&lt;/li&gt;&#xA;&lt;li&gt;Cloud Run services publishing e.g. gRPC and Prometheus, must multiplex transports&lt;/li&gt;&#xA;&lt;li&gt;Cloud Run services publishing multiplexed transports are &lt;em&gt;challenging&lt;/em&gt; to expose using Cloud Endpoints&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;hypothesis-1-multiplexed-transports-work-with-cloud-run&#34;&gt;Hypothesis #1: Multiplexed transports work with Cloud Run&lt;/h2&gt;&#xA;&lt;p&gt;See: &lt;a href=&#34;https://pretired.dazwilkin.com/posts/210519/&#34;&gt;Multiplexing gRPC and HTTP endpoints with Cloud Run&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Struggling with Golang structs</title>
      <link>https://pretired.dazwilkin.com/posts/210527/</link>
      <pubDate>Thu, 27 May 2021 16:06:08 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210527/</guid>
      <description>&lt;p&gt;Julia&amp;rsquo;s post &lt;a href=&#34;https://jvns.ca/blog/2021/05/24/blog-about-what-you-ve-struggled-with/&#34;&gt;Blog about what you&amp;rsquo;ve struggled with&lt;/a&gt; resonates because I&amp;rsquo;ve been struggling with Golang structs in a project. Not the definitions of structs but seemingly needing to reproduce them across the project. I realize that each instance of these resources differs from the others but I&amp;rsquo;m particularly concerned by having to duplicate method implementations on them.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m kinda hoping that I see the solution to my problem by writing it out. If you&amp;rsquo;re reading this, I didn&amp;rsquo;t :-(&lt;/p&gt;</description>
    </item>
    <item>
      <title>Consul discovers Google Cloud Run</title>
      <link>https://pretired.dazwilkin.com/posts/210520/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210520/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve written a basic &lt;code&gt;discoverer&lt;/code&gt; of Google &lt;a href=&#34;https://cloud.google.com/run&#34;&gt;Cloud Run&lt;/a&gt; services. This is for a project and it extends work done in some previous posts to &lt;a href=&#34;https://pretired.dazwilkin.com/posts/210519/&#34;&gt;Multiplex gRPC and Prometheus with Cloud Run&lt;/a&gt; and to use &lt;a href=&#34;https://pretired.dazwilkin.com/posts/210419/&#34;&gt;Consul for Prometheus service discovery&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This solution:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Accepts a set of Google Cloud Platform (GCP) projects&lt;/li&gt;&#xA;&lt;li&gt;Trawls them for Cloud Run services&lt;/li&gt;&#xA;&lt;li&gt;Assumes that the services expose Prometheus metrics on &lt;code&gt;:443/metrics&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Relabels the services&lt;/li&gt;&#xA;&lt;li&gt;Surfaces any discovered Cloud Run services&amp;rsquo; metrics in Prometheus&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You&amp;rsquo;ll need Docker and Docker Compose.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Multiplexing gRPC and HTTP (Prometheus) endpoints with Cloud Run</title>
      <link>https://pretired.dazwilkin.com/posts/210519/</link>
      <pubDate>Wed, 19 May 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210519/</guid>
      <description>&lt;p&gt;Google &lt;a href=&#34;https://cloud.google.com/run&#34;&gt;Cloud Run&lt;/a&gt; is useful but, each service is limited to exposing a single port. This caused me problems with a gRPC service that serves (non-gRPC) Prometheus metrics because customarily, you would serve gRPC on one port and the Prometheus metrics on another.&lt;/p&gt;&#xA;&lt;p&gt;Fortunately, &lt;a href=&#34;https://github.com/soheilhy/cmux&#34;&gt;cmux&lt;/a&gt; provides a solution by providing a mechanism that multiplexes both services (gRPC and HTTP) on a single port!&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; See the cmux &lt;a href=&#34;https://github.com/soheilhy/cmux#limitations&#34;&gt;Limitations&lt;/a&gt; and use:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;grpcl&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;MatchWithWriters&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;cmux&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;HTTP2MatchHeaderFieldSendSettings&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content-type&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;application/grpc&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Extending the &lt;a href=&#34;https://github.com/soheilhy/cmux#how-to&#34;&gt;example&lt;/a&gt; from the cmux repo:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Firestore Golang Timestamps &amp; Merging</title>
      <link>https://pretired.dazwilkin.com/posts/210506/</link>
      <pubDate>Thu, 06 May 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210506/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m using Google&amp;rsquo;s &lt;a href=&#34;https://pkg.go.dev/cloud.google.com/go/firestore#DocumentRef&#34;&gt;Golang SDK for Firestore&lt;/a&gt;. The experience is excellent and I&amp;rsquo;m quickly becoming a fan of Firestore. However, as a Golang Firestore developer, I&amp;rsquo;m feeling less loved and some of the concepts in the database were causing me a conundrum.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m still not entirely certain that I have Timestamps nailed but&amp;hellip; I learned an important lesson on the auto-creation of Timestamps in documents and how to retain these values.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Service Discovery w/ Consul for Cloud Run</title>
      <link>https://pretired.dazwilkin.com/posts/210419/</link>
      <pubDate>Mon, 19 Apr 2021 00:00:09 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210419/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m working on a project that will programmatically create Google &lt;a href=&#34;https://cloud.google.com/run&#34;&gt;Cloud Run&lt;/a&gt; services and I want to be able to dynamically discover these services using Prometheus.&lt;/p&gt;&#xA;&lt;p&gt;This is one solution.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Google Cloud Run is the service I&amp;rsquo;m using, but the principle described herein applies to any runtime service that you&amp;rsquo;d wish to use.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Why is this challenging? IIUC, it&amp;rsquo;s primarily because Prometheus has a limited set of plugins for service discovery, see the sections that include &lt;code&gt;_sd_&lt;/code&gt; in Prometheus &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/configuration/configuration/&#34;&gt;Configuration&lt;/a&gt; documentation. Unfortunately, Cloud Run is not explicitly supported. The alternative appears to be to use file-based discovery but this seems &amp;lsquo;challenging&amp;rsquo;; it requires, for example, reloading Prometheus on file changes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cloud Firestore Triggers in Golang</title>
      <link>https://pretired.dazwilkin.com/posts/210413/</link>
      <pubDate>Mon, 12 Apr 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210413/</guid>
      <description>&lt;p&gt;I was pleased to discover that Google provides a non-Node.JS mechanism to subscribe to and act upon Firestore triggers, &lt;a href=&#34;https://cloud.google.com/functions/docs/calling/cloud-firestore&#34;&gt;Google Cloud Firestore Triggers&lt;/a&gt;. I&amp;rsquo;ve nothing against Node.JS but, for the project i&amp;rsquo;m developing, everything else is written in Golang. It&amp;rsquo;s good to keep it all in one language.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m perplexed that Cloud Functions still (!) only supports Go 1.13 (03-Sep-2019). Even &lt;a href=&#34;https://golang.org/doc/devel/release.html#go1.14&#34;&gt;Go 1.14&lt;/a&gt; (25-Feb-2020) was released pre-pandemic and we&amp;rsquo;re now running on 1.16. Come on Google!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fly.io</title>
      <link>https://pretired.dazwilkin.com/posts/210412/</link>
      <pubDate>Mon, 12 Apr 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210412/</guid>
      <description>&lt;p&gt;I spent some time over the weekend understanding &lt;a href=&#34;https://fly.io&#34;&gt;Fly.io&lt;/a&gt;. It&amp;rsquo;s always fascinating to me how many smart people are building really neat solutions. Fly.io is subtly different to other platforms that I use (Kubernetes, GCP, DO, Linode) and I&amp;rsquo;ve found the Fly.io team to be highly responsive and helpful to my noob questions.&lt;/p&gt;&#xA;&lt;p&gt;One of the team&amp;rsquo;s posts, &lt;a href=&#34;https://fly.io/blog/docker-without-docker/&#34;&gt;Docker without Docker&lt;/a&gt; surfaced in my Feedly feed (&lt;a href=&#34;https://news.ycombinator.com/item?id=26746280&#34;&gt;hackernews&lt;/a&gt;) and it piqued my interest.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Golang with the Firestore Emulator</title>
      <link>https://pretired.dazwilkin.com/posts/210317/</link>
      <pubDate>Wed, 17 Mar 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210317/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://pretired.dazwilkin.com/images/210317.firebase.firestore.docs.png&#34; alt=&#34;Firestore&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This works great but it wasn&amp;rsquo;t clearly documented for non-Firebase users. I assume it will work, as well, for any of the client libraries (not just Golang).&lt;/p&gt;&#xA;&lt;p&gt;Assuming you have some (Golang) code (in this case using the Google Cloud Client Library) that interacts with a Firestore database. Something of the form:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Golang&#34; data-lang=&#34;Golang&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;context&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;crypto/sha256&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cloud.google.com/go/firestore&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hash&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sha256&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;New&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Write&lt;/span&gt;([]byte(&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Sprintf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%x&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Sum&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Dog&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;Name&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;                 &lt;span style=&#34;color:#e6db74&#34;&gt;`firestore:&amp;#34;name&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;Age&lt;/span&gt;     &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;`firestore:&amp;#34;age&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;Human&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;firestore&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;DocumentRef&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`firestore:&amp;#34;human&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;Created&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Time&lt;/span&gt;              &lt;span style=&#34;color:#e6db74&#34;&gt;`firestore:&amp;#34;created&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NewDog&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;human&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;firestore&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;DocumentRef&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;Dog&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Dog&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Name&lt;/span&gt;:    &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Age&lt;/span&gt;:     &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Human&lt;/span&gt;:   &lt;span style=&#34;color:#a6e22e&#34;&gt;human&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Created&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Now&lt;/span&gt;(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Dog&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;ID&lt;/span&gt;() &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hash&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Name&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Human&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;Name&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`firestore:&amp;#34;name&amp;#34;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Human&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;ID&lt;/span&gt;() &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hash&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Name&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;ctx&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;context&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Background&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;project&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PROJECT&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;client&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;firestore&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NewClient&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ctx&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;project&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;FIRESTORE_EMULATOR_HOST&amp;#34;&lt;/span&gt;); &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Using Firestore Emulator: %s&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;client&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Close&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;me&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Human&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Name&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;me&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;meDocRef&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;client&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Collection&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;humans&amp;#34;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;Doc&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;me&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ID&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;meDocRef&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Set&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ctx&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;me&lt;/span&gt;); &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;freddie&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NewDog&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Freddie&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;meDocRef&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;freddieDocRef&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;client&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Collection&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dogs&amp;#34;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;Doc&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;freddie&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ID&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;freddieDocRef&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Set&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ctx&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;freddie&lt;/span&gt;); &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then you can interact instead with the Firestore Emulator.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Programmatically deploying Cloud Run services (Golang|Python)</title>
      <link>https://pretired.dazwilkin.com/posts/210316/</link>
      <pubDate>Tue, 16 Mar 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210316/</guid>
      <description>&lt;p&gt;Phew! Programmitcally deploying Cloud Run services should be easy but it didn&amp;rsquo;t find it so.&lt;/p&gt;&#xA;&lt;p&gt;My issues were that the Cloud Run Admin (!) API is poorly documented and it uses non-standard endpoints (thanks Sal!). Here, for others who may struggle with this, is how I got this to work.&lt;/p&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;Goal&lt;/h2&gt;&#xA;&lt;p&gt;Programmatically (have Golang, Python, want Rust) deploy services to Cloud Run.&lt;/p&gt;&#xA;&lt;p&gt;i.e. achieve this:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud run deploy &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;NAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--image&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;IMAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--platform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;managed &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--no-allow-unauthenticated &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--region&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;REGION&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--project&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;TRICK&lt;/strong&gt; &lt;a href=&#34;https://cloud.google.com/sdk/gcloud/reference#--log-http&#34;&gt;&lt;code&gt;--log-http&lt;/code&gt;&lt;/a&gt; is your friend&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus VPA Recommendations</title>
      <link>https://pretired.dazwilkin.com/posts/210305/</link>
      <pubDate>Fri, 05 Mar 2021 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210305/</guid>
      <description>&lt;p&gt;Phew!&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/For_Want_of_a_Nail&#34;&gt;For Want of a Nail&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;I was interested in learning how to &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/&#34;&gt;Manage Resources for Containers&lt;/a&gt;. On the way, I learned and discovered:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#kubectl-top&#34;&gt;&lt;code&gt;kubectl top&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#vertical-pod-autoscaler-vpa&#34;&gt;Vertical Pod Autoscaler&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;A (valuable) digression through &lt;a href=&#34;#digression-podmonitor&#34;&gt;PodMonitor&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#kube-state-metrics&#34;&gt;&lt;code&gt;kube-state-metrics&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#kubectl-patch&#34;&gt;`kubectl-patch&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Created a &lt;a href=&#34;#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;References&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;kubernetes-resources&#34;&gt;Kubernetes Resources&lt;/h2&gt;&#xA;&lt;p&gt;Visual Studio Code has begun to bug me (reasonably) to add &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/&#34;&gt;&lt;code&gt;resources&lt;/code&gt;&lt;/a&gt; to Kubernetes manifests.&lt;/p&gt;&#xA;&lt;p&gt;E.g.:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-YAML&#34; data-lang=&#34;YAML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;resources&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;limits&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;cpu&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;memory&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;512Mi&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I&amp;rsquo;ve been spending time with Deislab&amp;rsquo;s &lt;a href=&#34;https://github.com/deislabs/akri&#34;&gt;Akri&lt;/a&gt; and decided to determine whether Akri&amp;rsquo;s primary resources (Agent, Controller) and some of my creations HTTP Device and Discovery, were being suitably constrained.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dapr</title>
      <link>https://pretired.dazwilkin.com/posts/210222/</link>
      <pubDate>Mon, 22 Feb 2021 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210222/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s a good name, I read it as &amp;ldquo;dapper&amp;rdquo; but I frequently type &amp;ldquo;darp&amp;rdquo; :-(&lt;/p&gt;&#xA;&lt;p&gt;Was interested to &lt;a href=&#34;https://blog.dapr.io/posts/2021/02/17/announcing-dapr-v1.0/&#34;&gt;read&lt;/a&gt; that &lt;a href=&#34;https://dapr.io/&#34;&gt;Dapr&lt;/a&gt; is now v1.0 and decided to check it out. I was initially confused between Dapr and service mesh functionality. But, having used Dapr, it appears to be more focused in aiding the development of (cloud-native) (distributed) apps by providing developers with abstractions for e.g. service discovery, eventing, observability whereas service meshes feel (!) more oriented towards simplifying the deployment of existing apps. Both use the concept of proxies, deployed alongside app components (as sidecars on Kubernetes) to provide their functionality to apps.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Krustlet on DO Managed Kubernetes</title>
      <link>https://pretired.dazwilkin.com/posts/210122/</link>
      <pubDate>Fri, 22 Jan 2021 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210122/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve spent time this week returning to the interesting Deislabs project &lt;a href=&#34;https://github.com/deislabs/krustlet&#34;&gt;Krustlet&lt;/a&gt;. Since the last time, the bootstrapping process has been simplified using Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/&#34;&gt;Bootstrap Tokens&lt;/a&gt;. I know this updated process &lt;a href=&#34;https://github.com/deislabs/krustlet/blob/master/docs/howto/krustlet-on-microk8s.md&#34;&gt;works&lt;/a&gt; with &lt;a href=&#34;https://microk8s.io&#34;&gt;MicroK8s&lt;/a&gt;. Unfortunately, I&amp;rsquo;m struggling with it on &lt;a href=&#34;cloud.google.com/kubernetes-engine&#34;&gt;GKE&lt;/a&gt; and thought I&amp;rsquo;d try DigitalOcean Managed Kubernetes.&lt;/p&gt;&#xA;&lt;p&gt;It worked first time!&lt;/p&gt;&#xA;&lt;p&gt;In the following, we run both the Kubernetes cluster and the Krustlet Droplet on DigitalOcean but, as long as the cluster and the VM are able to communicate with one another, you should be able to run these anywhere.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes cert-manager</title>
      <link>https://pretired.dazwilkin.com/posts/210108/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210108/</guid>
      <description>&lt;p&gt;I developed an &lt;a href=&#34;https://pretired.dazwilkin.com/posts/201229/&#34;&gt;admission webhook&lt;/a&gt; for Akri, twice (&lt;a href=&#34;https://github.com/DazWilkin/akri-webhook&#34;&gt;Golang&lt;/a&gt;, &lt;a href=&#34;https://github.com/DazWilkin/akri-webhook-rust&#34;&gt;Rust&lt;/a&gt;). I naively followed other examples for the generation of the certificates, created a 1.20 cluster and &lt;a href=&#34;https://stackoverflow.com/questions/65587904/&#34;&gt;broke&lt;/a&gt; that process.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;d briefly considered using &lt;a href=&#34;https://cert-manager.io&#34;&gt;&lt;code&gt;cert-manager&lt;/code&gt;&lt;/a&gt; recently but quickly abandoned the idea thinking it would be onerous and unnecessary complexity for little-old-me. I was wrong. It&amp;rsquo;s excellent and I recommend it highly.&lt;/p&gt;&#xA;&lt;p&gt;I won&amp;rsquo;t reproduce the &lt;code&gt;v1beta1&lt;/code&gt; and &lt;code&gt;v1&lt;/code&gt; examples from the Stackoverflow question as they should be self-explanatory. I suspect (!?) that I should not have used Kubernete&amp;rsquo;s (API Server&amp;rsquo;s) CA for the Webhook but it could well be that I just don&amp;rsquo;t understand the correct approach.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Webhooks</title>
      <link>https://pretired.dazwilkin.com/posts/201229/</link>
      <pubDate>Tue, 29 Dec 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201229/</guid>
      <description>&lt;p&gt;I spent some time last week writing my first &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/&#34;&gt;admission webhook&lt;/a&gt; for Kubernetes. I wrote the handler in Golang because I&amp;rsquo;m most familiar with Golang and because, as Kubernetes&amp;rsquo; native language, I was more confident that the necessary SDKs would exist and that the documentation would likely use Golang by default. I struggled to find useful documentation and so this post is to help you (and me!) remember how to do this next time!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Device Plugins</title>
      <link>https://pretired.dazwilkin.com/posts/201217/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201217/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m debugging an &lt;a href=&#34;https://github.com/deislabs/akri/issues/177&#34;&gt;issue&lt;/a&gt; with Akri &lt;code&gt;Zeroconf&lt;/code&gt; &lt;a href=&#34;https://github.com/DazWilkin/akri/tree/protocol-zeroconf&#34;&gt;protocol&lt;/a&gt; in which Instance environment variables are no longer (!) being surfaced within the Broker pods. In my adventures, it seemed useful to better understand how Akri works and specifically, how Akri uses Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/&#34;&gt;Device Plugins&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;IIUC plugins register with the Kubelet (!) via a gRPC service (&lt;code&gt;Registration&lt;/code&gt;) that the Kubelet exposes on a UNIX socket at &lt;code&gt;/var/lib/kubelet/device-plugins/kubelet.sock&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Then (!) if successful, devices should be reported by the Node&amp;rsquo;s metadata (spec) and available to be bound to Pods.&lt;/p&gt;</description>
    </item>
    <item>
      <title>webmention</title>
      <link>https://pretired.dazwilkin.com/posts/201203/</link>
      <pubDate>Thu, 03 Dec 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201203/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s see if this works!?&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve added the following link to this site&amp;rsquo;s &lt;code&gt;baseof.html&lt;/code&gt; so that it is now rendered for each page:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;link&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://us-central1-webmention.cloudfunctions.net/webmention&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;rel&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;webmention&amp;#34;&lt;/span&gt; /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I discovered &lt;a href=&#34;https://indieweb.org/&#34;&gt;indieweb&lt;/a&gt; yesterday reading about &lt;a href=&#34;https://aaronparecki.com/2018/06/30/11/your-first-webmention&#34;&gt;webmention&lt;/a&gt;. Who knows what got me to webmention!?&lt;/p&gt;&#xA;&lt;p&gt;The principles of both are sound. Instead of relying on come-go behemoths to run our digital world, indieweb seeks to provide technologies that enable us to achieve things without them. webmention is a cross-walled-garden mechanism to perform an evolved form of pingbacks. If X references one of Y&amp;rsquo;s posts, X&amp;rsquo;s server notifies Y&amp;rsquo;s server during publication through a webmention service and, Y can then decide to add reference counts of copies of the referring link to their page. Clever.&lt;/p&gt;</description>
    </item>
    <item>
      <title>pest: parsing in Rust</title>
      <link>https://pretired.dazwilkin.com/posts/201202/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201202/</guid>
      <description>&lt;p&gt;A Microsoft engineer introduced me to &lt;a href=&#34;https://pest.rs&#34;&gt;&lt;code&gt;pest&lt;/code&gt;&lt;/a&gt; as a way to introduce service filtering in a ZeroConf plugin that I&amp;rsquo;m prototyping for &lt;a href=&#34;https://github.com/deislabs/akri&#34;&gt;Akri&lt;/a&gt;. It&amp;rsquo;s been fun to learn but I worry that, because I won&amp;rsquo;t use it frequently, I&amp;rsquo;m going to quickly forget what I&amp;rsquo;ve done. So, here are my notes.&lt;/p&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s the problem, I&amp;rsquo;d like to be able to provide users of the ZeroConf plugin with a string-based filter that permits them to filter the services discovered when the Akri agent browses a network.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Akri</title>
      <link>https://pretired.dazwilkin.com/posts/201113/</link>
      <pubDate>Fri, 13 Nov 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201113/</guid>
      <description>&lt;p&gt;For the past couple of weeks, I&amp;rsquo;ve been playing around with &lt;a href=&#34;http://github.com/deislabs/akri&#34;&gt;Akri&lt;/a&gt;, a Microsoft (DeisLabs) project for &lt;a href=&#34;https://cloudblogs.microsoft.com/opensource/2020/10/20/announcing-akri-open-source-project-building-connected-edge-kubernetes/&#34;&gt;building a connected edge with Kubernetes&lt;/a&gt;. Kubernetes, IoT, Rust (and Golang) make this all compelling to me.&lt;/p&gt;&#xA;&lt;p&gt;Initially, I deployed an Akri &lt;a href=&#34;https://github.com/deislabs/akri/blob/main/docs/end-to-end-demo.md&#34;&gt;End-to-End&lt;/a&gt; to &lt;a href=&#34;https://microk8s.io/&#34;&gt;MicroK8s&lt;/a&gt; on Google Compute Engine (&lt;a href=&#34;https://github.com/deislabs/akri/blob/main/docs/end-to-end-demo-gce.md&#34;&gt;link&lt;/a&gt;) and Digital Ocean (&lt;a href=&#34;https://github.com/deislabs/akri/blob/main/docs/end-to-end-demo-do.md&#34;&gt;link&lt;/a&gt;). But I was interested to create me own example and so have proposed a very (!) simple &lt;a href=&#34;https://github.com/DazWilkin/akri/blob/protocol-http/docs/extensibility-http.md&#34;&gt;HTTP-based protocol&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This blog summarizes my thoughts about Akri and an explanation of the HTTP protocol implementation in the hope that this helps others.&lt;/p&gt;</description>
    </item>
    <item>
      <title>GitHub Actions &amp;&amp; GitHub Container Registry</title>
      <link>https://pretired.dazwilkin.com/posts/201029/</link>
      <pubDate>Thu, 29 Oct 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201029/</guid>
      <description>&lt;p&gt;You know when you start something and then regret it!? I think I&amp;rsquo;ll be sticking with &lt;a href=&#34;https://cloud.google.com/cloud-build&#34;&gt;Google Cloud Build&lt;/a&gt;; &lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt; appears functional and useful but I found the documentation to be confusing and limited and struggled to get a simple container image build|push working.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve long used &lt;a href=&#34;https://hub.docker.com&#34;&gt;Docker Hub&lt;/a&gt; but am planning to use it less as a result of the planned &lt;a href=&#34;https://www.docker.com/blog/scaling-docker-to-serve-millions-more-developers-network-egress/&#34;&gt;changes&lt;/a&gt;. I want to see Docker succeed and to do so it needs to find a way to make money but, there are free alternatives including the new &lt;a href=&#34;https://github.blog/2020-09-01-introducing-github-container-registry/&#34;&gt;GitHub Container Registry&lt;/a&gt; and the very very cheap &lt;a href=&#34;https://cloud.google.com/container-registry&#34;&gt;Google Container Registry&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>akri</title>
      <link>https://pretired.dazwilkin.com/posts/201022/</link>
      <pubDate>Thu, 22 Oct 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201022/</guid>
      <description>&lt;p&gt;I was very interested to read about Microsoft&amp;rsquo;s DeisLab&amp;rsquo;s latest (rust-based) Kubernetes project: &lt;a href=&#34;https://cloudblogs.microsoft.com/opensource/2020/10/20/announcing-akri-open-source-project-building-connected-edge-kubernetes/&#34;&gt;akri&lt;/a&gt;. If I understand it correctly, it provides a mechanism to make any (IoT) device accessible to containers running within a cluster. I need to spend more time playing around with it so that I can fully understand it. I had some problems getting the &lt;a href=&#34;https://github.com/deislabs/akri/blob/main/docs/end-to-end-demo.md&#34;&gt;End-to-End&lt;/a&gt; demo running on Google Compute Engine (and then I tried DigitalOcean droplet) instances. So, here&amp;rsquo;s a two-ways solution to get you going.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploying a Rust HTTP server to DigitalOcean App Platform</title>
      <link>https://pretired.dazwilkin.com/posts/201008/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201008/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://digitalocean.com&#34;&gt;DigitalOcean&lt;/a&gt; launched an &lt;a href=&#34;https://www.digitalocean.com/blog/introducing-digitalocean-app-platform-reimagining-paas-to-make-it-simpler-for-you-to-build-deploy-and-scale-apps&#34;&gt;App Platform&lt;/a&gt; with many &lt;a href=&#34;https://www.digitalocean.com/docs/app-platform/languages-frameworks/&#34;&gt;Supported Languages and Frameworks&lt;/a&gt;. I used &lt;a href=&#34;https://www.digitalocean.com/docs/app-platform/languages-frameworks/go/&#34;&gt;Golang&lt;/a&gt; first, then wondered how to use non-natively-supported languages, i.e. Rust.&lt;/p&gt;&#xA;&lt;p&gt;The good news is that &lt;a href=&#34;https://www.digitalocean.com/docs/app-platform/languages-frameworks/docker/&#34;&gt;Docker&lt;/a&gt; is a supported framework and so, you can run pretty much anything.&lt;/p&gt;&#xA;&lt;p&gt;Repo: &lt;a href=&#34;https://github.com/DazWilkin/do-apps-rust&#34;&gt;https://github.com/DazWilkin/do-apps-rust&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;rust&#34;&gt;Rust&lt;/h2&gt;&#xA;&lt;p&gt;I&amp;rsquo;m a Rust noob. I&amp;rsquo;m always receptive to feedback on improvements to the code. I looked to mirror the Golang example. I&amp;rsquo;m using &lt;a href=&#34;https://crates.io/crates/rocket&#34;&gt;rocket&lt;/a&gt; and &lt;a href=&#34;https://crates.io/crates/rocket-prometheus&#34;&gt;rocket-prometheus&lt;/a&gt; for the first time:&lt;/p&gt;&#xA;&lt;p&gt;You will want to install rust nightly (as Rocket has a dependency that requires it) and then you can override the default toolchain for the current project using:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hugo and Google Cloud Storage</title>
      <link>https://pretired.dazwilkin.com/posts/200930/</link>
      <pubDate>Wed, 30 Sep 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200930/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m using &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; as a static site generator for &lt;a href=&#34;https://pretired.dazwilkin.com&#34;&gt;this&lt;/a&gt; blog. I&amp;rsquo;m using &lt;a href=&#34;https://firebase.google.com&#34;&gt;Firebase&lt;/a&gt; (for free) to host &lt;a href=&#34;https://lefsilver.com&#34;&gt;lefsilver&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I have other domains that I want to promote and decided to use Google Cloud Storage buckets for these sites. Using &lt;a href=&#34;https://cloud.google.com/storage&#34;&gt;Google Cloud Storage&lt;/a&gt; for &lt;a href=&#34;https://cloud.google.com/storage/docs/hosting-static-website&#34;&gt;Hosting a static website&lt;/a&gt; and using Hugo to deploy sites to &lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hugo-deploy/#google-cloud-storage-gcs&#34;&gt;Google Cloud Storage (GCS)&lt;/a&gt; are documented but, I didn&amp;rsquo;t find a location where this is combined into a single tutorial and I wanted to add an explanation for ensuring your sites are included in Google&amp;rsquo;s and Bing&amp;rsquo;s search indexes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rube Goldberg Cloud Build machine for solving Quadratic equations</title>
      <link>https://pretired.dazwilkin.com/posts/200928/</link>
      <pubDate>Mon, 28 Sep 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200928/</guid>
      <description>&lt;p&gt;Google &lt;a href=&#34;https://cloud.google.com/cloud-build/docs/build-config&#34;&gt;Cloud Build&lt;/a&gt; is described by Google as a &amp;ldquo;CI/CD platform&amp;rdquo; but it&amp;rsquo;s fundamentally a service that permits a series of containers to be chained together in a pipeline, optionally leveraging shared data.&lt;/p&gt;&#xA;&lt;p&gt;As a CI/CD platform, it can be used to lint, test, compile and build software but, if you were looking for a way to explain its basic awesomeness, you could&amp;hellip; I don&amp;rsquo;t know&amp;hellip; build a Rube Goldberg style machine that solves Quadratic equations using it 😄&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visual Studio Code plus Google Cloud Shell</title>
      <link>https://pretired.dazwilkin.com/posts/200917/</link>
      <pubDate>Thu, 17 Sep 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200917/</guid>
      <description>&lt;h2 id=&#34;update-2020-09-24&#34;&gt;Update: 2020-09-24&lt;/h2&gt;&#xA;&lt;p&gt;Three updates since I wrote the post:&lt;/p&gt;&#xA;&lt;h3 id=&#34;gcloud-alpha-cloud-shell-get-mount-command-dir&#34;&gt;&lt;code&gt;gcloud alpha cloud-shell get-mount-command ${DIR}&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;p&gt;It&amp;rsquo;s possible to use &lt;code&gt;sshfs&lt;/code&gt; to mount the Cloud Shell home directory locally:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DIR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/path/to/dir&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud alpha cloud-shell get-mount-command &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Which generates something of the form:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sshfs &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;USERNAME&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;HOST&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-p &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;PORT&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-oIdentityFile&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~/.ssh/google_compute_engine &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-oStrictHostKeyChecking&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You may then &lt;code&gt;code --new-window ${DIR}&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;curl-command-may-lack-sshhost&#34;&gt;curl command may lack &lt;code&gt;.sshHost&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;p&gt;curl&amp;rsquo;ing the &lt;code&gt;cloudshell.googleapis.com&lt;/code&gt; endpoint will result in a null value for &lt;code&gt;.sshHost&lt;/code&gt; if the Cloud Shell VM must be recreated. The &lt;code&gt;gcloud&lt;/code&gt; command avoids this by using an operation to poll the endpoint until the VM exists. The hacky alternative is to run &lt;code&gt;gcloud alpha cloud-shell ssh&lt;/code&gt; to force the VM to be created before running the curl command.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Actions SDK Conversational Quickstart</title>
      <link>https://pretired.dazwilkin.com/posts/200916/</link>
      <pubDate>Wed, 16 Sep 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200916/</guid>
      <description>&lt;p&gt;Google&amp;rsquo;s tutorial didn&amp;rsquo;t work for me.&lt;/p&gt;&#xA;&lt;p&gt;In this post, I&amp;rsquo;ll help you get this working.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://developers.google.com/assistant/conversational/quickstart&#34;&gt;https://developers.google.com/assistant/conversational/quickstart&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;create-and-set-up-a-project&#34;&gt;&lt;a href=&#34;https://developers.google.com/assistant/conversational/quickstart&#34;&gt;Create and set up a project&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;This mostly works.&lt;/p&gt;&#xA;&lt;p&gt;I recommend using the &lt;a href=&#34;https://console.actions.google.com&#34;&gt;Actions Console&lt;/a&gt; as described to create the project.&lt;/p&gt;&#xA;&lt;p&gt;I chose &amp;ldquo;Custom&amp;rdquo; and &amp;ldquo;Blank Project&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;You need &lt;strong&gt;not&lt;/strong&gt; enable &lt;a href=&#34;https://console.developers.google.com/apis/library/actions.googleapis.com?q=actions&#34;&gt;Actions API&lt;/a&gt; as this is done automatically:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pretired.dazwilkin.com/images/200916.api_library.png&#34; alt=&#34;Actions API&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;For the console work, I&amp;rsquo;m going to use Google&amp;rsquo;s excellent Cloud Shell. You may access this through the browser &lt;strong&gt;or&lt;/strong&gt; through a terminal:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Trillian Map Mode</title>
      <link>https://pretired.dazwilkin.com/posts/200908/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200908/</guid>
      <description>&lt;p&gt;Chatting with one of Google&amp;rsquo;s Trillian team, I was encouraged to explore Trillian&amp;rsquo;s &lt;a href=&#34;https://github.com/google/trillian#map-mode&#34;&gt;Map Mode&lt;/a&gt;. The following is the result of some spelunking through this unfamiliar cave. I can&amp;rsquo;t provide any guarantee that this usage is correct or sufficient.&lt;/p&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s the repo: &lt;a href=&#34;https://github.com/DazWilkin/go-trillian-map&#34;&gt;https://github.com/DazWilkin/go-trillian-map&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve written about Trillian &lt;a href=&#34;https://github.com/google/trillian#log-mode&#34;&gt;Log Mode&lt;/a&gt; &lt;a href=&#34;https://pretired.dazwilkin.com/tags/trillian/&#34;&gt;elsewhere&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I uncovered use of Trillian Map Mode through Trillian&amp;rsquo;s integration &lt;a href=&#34;https://github.com/google/trillian/blob/master/integration/maptest/map.go&#34;&gt;tests&lt;/a&gt;. I&amp;rsquo;m unclear on the distinction between &lt;code&gt;TrillianMapClient&lt;/code&gt; and &lt;code&gt;TrillianMapWriteClient&lt;/code&gt; but the latter served most of my needs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Minimizing WASM binaries</title>
      <link>https://pretired.dazwilkin.com/posts/200819/</link>
      <pubDate>Wed, 19 Aug 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200819/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve spent time recently playing around with WebAssembly (WASM) and &lt;a href=&#34;https://github.com/wapc&#34;&gt;waPC&lt;/a&gt;. Rust and WASM were born at Mozilla and there&amp;rsquo;s a natural affinity with writing WASM binaries in Rust. In the WASM examples I&amp;rsquo;ve been using for &lt;a href=&#34;https://pretired.dazwilkin.com/posts/200817/&#34;&gt;WASM Transparency&lt;/a&gt;, &lt;a href=&#34;https://pretired.dazwilkin.com/posts/200807/&#34;&gt;waPC and MsgPack&lt;/a&gt; and &lt;a href=&#34;https://pretired.dazwilkin.com/posts/200612/&#34;&gt;waPC and Protobufs&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve created 3 WASM binaries: &lt;code&gt;complex.wasm&lt;/code&gt;, &lt;code&gt;simplex.wasm&lt;/code&gt; and &lt;code&gt;fabcar.wasm&lt;/code&gt; and each is about 2.5MB when:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo build --target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;wasm32-unknown-unknown --release&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;a href=&#34;https://rustwasm.github.io/docs/book&#34;&gt;Rust and WebAssembly&lt;/a&gt; book has an excellent section titled &lt;a href=&#34;https://rustwasm.github.io/docs/book/reference/code-size.html&#34;&gt;Shrinking &lt;code&gt;.wasm.&lt;/code&gt; Code Size&lt;/a&gt;. So, let&amp;rsquo;s see what help that provides.&lt;/p&gt;</description>
    </item>
    <item>
      <title>WASM Transparency</title>
      <link>https://pretired.dazwilkin.com/posts/200817/</link>
      <pubDate>Mon, 17 Aug 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200817/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been playing around with a proof-of-concept combining WASM and &lt;a href=&#34;https://github.com/google/trillian&#34;&gt;Trillian&lt;/a&gt;. The hypothesis was to explore using WASM as a form of chaincode with Trillian. The project works but it&amp;rsquo;s far from being a chaincode-like solution.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s start with a couple of (trivial) examples and then I&amp;rsquo;ll explain what&amp;rsquo;s going on and how it&amp;rsquo;s implemented.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2020/08/14 18:42:17 [main:loop:dynamic-invoke] Method: mul&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2020/08/14 18:42:17 [random:New] Message&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2020/08/14 18:42:17 [random:New] Float32&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2020/08/14 18:42:17 [random:New] Float32&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2020/08/14 18:42:17 [random:New] Message&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2020/08/14 18:42:17 [random:New] Float32&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2020/08/14 18:42:17 [random:New] Float32&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2020/08/14 18:42:17 [Client:Invoke] Metadata: complex.wasm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2020/08/14 18:42:17 [main:loop:dynamic-invoke] Success: result:{real:0.036980484 imag:0.3898267}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After shipping a Rust-sourced WASM solution (&lt;code&gt;complex.wasm&lt;/code&gt;) to the WASM transparency server, the client invokes a method &lt;code&gt;mul&lt;/code&gt; that&amp;rsquo;s exposed by it using a dynamically generated request message and outputs the response. Woo hoo! Yes, an expensive way to multiple complex numbers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>waPC and MsgPack (Rust|Golang)</title>
      <link>https://pretired.dazwilkin.com/posts/200807/</link>
      <pubDate>Fri, 07 Aug 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200807/</guid>
      <description>&lt;p&gt;As my reader will know (Hey Mom!), I&amp;rsquo;ve been noodling around with WASM and &lt;a href=&#34;https://github.com/wapc&#34;&gt;waPC&lt;/a&gt;. I&amp;rsquo;ve been exploring ways to pass structured messages across the host:guest boundary.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://developers.google.com/protocol-buffers&#34;&gt;Protobufs&lt;/a&gt; was my first choice. &lt;a href=&#34;https://medium.com/@KevinHoffman&#34;&gt;@KevinHoffman&lt;/a&gt; created waPC and &lt;a href=&#34;https://github.com/wascc&#34;&gt;waSCC&lt;/a&gt; and he &lt;a href=&#34;https://medium.com/@KevinHoffman/interface-types-are-basically-a-way-of-embedding-metadata-into-a-wasm-file-so-that-arbitrary-data-14965ebdfa48&#34;&gt;explained&lt;/a&gt; to me and that wSCC uses &lt;a href=&#34;https://msgpack.org/&#34;&gt;Message Pack&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s slightly surprising to me (still) that technologies like this exist with &lt;strong&gt;everyone&lt;/strong&gt; else seemingly using them and I&amp;rsquo;ve not heard of them. I don&amp;rsquo;t expect to know everything but I&amp;rsquo;m surprised I&amp;rsquo;ve not stumbled upon msgpack until now.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Envoy WASM filters in Rust</title>
      <link>https://pretired.dazwilkin.com/posts/200723/</link>
      <pubDate>Thu, 23 Jul 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200723/</guid>
      <description>&lt;p&gt;A digression thanks to &lt;a href=&#34;https://blog.salrashid.me/&#34;&gt;Sal Rashid&lt;/a&gt; who&amp;rsquo;s exploring WASM filters w/ Envoy.&lt;/p&gt;&#xA;&lt;p&gt;The documentation is sparse but:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://banzaicloud.com/blog/envoy-wasm-filter/&#34;&gt;How to write WASM filters for Envoy&amp;hellip;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;There is a Rust SDK but it&amp;rsquo;s not documented:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/proxy-wasm/proxy-wasm-rust-sdk&#34;&gt;proxy-wasm-rust-sdk&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;I found two useful posts by Rustaceans who were able to make use of it:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://antweiss.com/blog/extending-envoy-with-wasm-and-rust/&#34;&gt;Extending Envoy with WASM and Rust&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.red-badger.com/extending-istio-with-rust-and-webassembly&#34;&gt;Extending Istio with Rust and WebAssembly&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s my simple use of the SDK&amp;rsquo;s examples.&lt;/p&gt;&#xA;&lt;h2 id=&#34;wasme&#34;&gt;wasme&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -sL https://run.solo.io/wasme/install | sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PATH&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/.wasme/bin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wasme --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It may be possible to avoid creating an account on WebAssemblyHub if you&amp;rsquo;re staying local.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Remotely invoking WASM functions using gRPC and waPC</title>
      <link>https://pretired.dazwilkin.com/posts/200717/</link>
      <pubDate>Fri, 17 Jul 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200717/</guid>
      <description>&lt;p&gt;Following on from &lt;a href=&#34;https://pretired.dazwilkin.com/posts/200612/&#34;&gt;waPC &amp;amp; Protobufs&lt;/a&gt;, I can now remotely invoke (arbitrary) WASM functions:&lt;/p&gt;&#xA;&lt;p&gt;Client:&lt;/p&gt;&#xA;&lt;p&gt;The logging isn&amp;rsquo;t perfectly clear but, the client gets (a previously added) WASM binary from the server (using the SHA-256 of the WASM binary as a unique identifier). The result includes metadata that includes a protobuf descriptor of the WASM binary&amp;rsquo;s functions. The descriptor defines gRPC services (that represent the WASM functions) with input (parameters) and output (results) messages.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang Protobuf APIv2</title>
      <link>https://pretired.dazwilkin.com/posts/200630/</link>
      <pubDate>Tue, 30 Jun 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200630/</guid>
      <description>&lt;p&gt;Google has a new Golang Protobuf API, APIv2 (&lt;a href=&#34;https://pkg.go.dev/google.golang.org/protobuf?tab=overview&#34;&gt;google.golang.org/protobuf&lt;/a&gt;) superseding APIv1 (&lt;a href=&#34;https://pkg.go.dev/github.com/golang/protobuf?tab=overview&#34;&gt;github.com/golang/protobuf&lt;/a&gt;). If your code is importing &lt;code&gt;github.com/golang/protobuf&lt;/code&gt;, you&amp;rsquo;re using APIv2. Otherwise, you should consult with the docs because Google reimplemented APIv1 atop APIv2. One challenge this caused me, as someone who does not use protobufs and gRPC on a daily basis, is that &lt;a href=&#34;https://pkg.go.dev/github.com/golang/protobuf/protoc-gen-go/grpc?tab=doc&#34;&gt;gRPC&lt;/a&gt; (code-generation) is being removed from the (Golang) &lt;code&gt;protoc-gen-go&lt;/code&gt;, the Golang plugin that generates gRPC service bindings.&lt;/p&gt;</description>
    </item>
    <item>
      <title>WASM Cloud Functions</title>
      <link>https://pretired.dazwilkin.com/posts/200617/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200617/</guid>
      <description>&lt;p&gt;Following on from &lt;a href=&#34;https://pretired.dazwilkin.com/posts/200612/&#34;&gt;waPC &amp;amp; Protobufs&lt;/a&gt; and a question on Stack Overflow about Cloud Functions, I was compelled to try running WASM on Cloud Functions no JavaScript.&lt;/p&gt;&#xA;&lt;p&gt;I wanted to reuse the WASM waPC functions that I&amp;rsquo;d written in Rust as described in the other post. Cloud Functions does not (yet!?) provide a Rust runtime and so I&amp;rsquo;m using the &lt;a href=&#34;https://github.com/wapc/wapc-go&#34;&gt;waPC Host for Go&lt;/a&gt; in this example.&lt;/p&gt;&#xA;&lt;p&gt;It works!&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PARAMS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{&amp;#34;a&amp;#34;:{&amp;#34;real&amp;#34;:39,&amp;#34;imag&amp;#34;:3},&amp;#34;b&amp;#34;:{&amp;#34;real&amp;#34;:39,&amp;#34;imag&amp;#34;:3}}&amp;#39;&lt;/span&gt; | base64&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TOKEN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;gcloud auth print-identity-token&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;\&amp;#34;filename\&amp;#34;:\&amp;#34;complex.wasm\&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;\&amp;#34;function\&amp;#34;:\&amp;#34;c:mul\&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#x9;\&amp;#34;params\&amp;#34;:\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PARAMS&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&amp;#34;&lt;/span&gt; |&lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;curl &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--silent &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--request POST &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization: Bearer &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;TOKEN&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--data @- &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;https://&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;REGION&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;-&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;.cloudfunctions.net/invoker&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;yields (correctly):&lt;/p&gt;</description>
    </item>
    <item>
      <title>waPC &amp; Protobufs</title>
      <link>https://pretired.dazwilkin.com/posts/200612/</link>
      <pubDate>Fri, 12 Jun 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200612/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m hacking around with a solution that combines WASM and Google &lt;a href=&#34;https://github.com/google/trillian&#34;&gt;Trillian&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Ultimately, I&amp;rsquo;d like to be able to ship WASM (binaries) to a Trillian personality and then invoke (exported) functions on them. Some this was borne from the interesting exploration of &lt;a href=&#34;https://github.com/deislabs/krustlet&#34;&gt;Krustlet&lt;/a&gt; and its application of &lt;a href=&#34;https://wascc.dev/&#34;&gt;wascc&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m still booting into WASM but it&amp;rsquo;s a &lt;em&gt;very&lt;/em&gt; interesting technology that has most interesting potential outside the browser. Some folks have been trailblazing the technology and I have been reading Kevin Hoffman&amp;rsquo;s &lt;a href=&#34;https://medium.com/@KevinHoffman&#34;&gt;medium&lt;/a&gt; and &lt;a href=&#34;https://wascc.dev/&#34;&gt;wascc&lt;/a&gt; (nee waxosuit) work. From this, I stumbled upon Kevin&amp;rsquo;s &lt;a href=&#34;https://medium.com/@KevinHoffman/introducing-wapc-dc9d8b0c2223&#34;&gt;waPC&lt;/a&gt; and I&amp;rsquo;m using waPC in this prototyping as a way to exchange data between clients and servers running WASM binaries.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Container Registry w/ OCI</title>
      <link>https://pretired.dazwilkin.com/posts/200508/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200508/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been spending some time this week with &lt;a href=&#34;https://github.com/deislabs/krustlet&#34;&gt;Krustlet&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m working on documenting how to run Krustlet(s) alongside &lt;a href=&#34;https://cloud.google.com/kubernetes-engine&#34;&gt;GKE&lt;/a&gt;. I&amp;rsquo;ve been running a Krustlet with &lt;a href=&#34;https://microk8s.io&#34;&gt;MicroK8s&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The Krustlet demos reference WASM assemblines stored in Azure Container Registry as OCI containers. &lt;a href=&#34;https://cloud.google.com/container-registry&#34;&gt;Google Container Registry&lt;/a&gt; supports &lt;a href=&#34;https://cloud.google.com/container-registry/docs/image-formats#oci_format&#34;&gt;OCI format&lt;/a&gt; and so I tried (successfully) using GCR instead of AZR.&lt;/p&gt;&#xA;&lt;p&gt;There may be an easier approach but this is how I got this working.&lt;/p&gt;&#xA;&lt;p&gt;Krustlet uses &lt;a href=&#34;https://github.com/engineerd/wasm-to-oci&#34;&gt;&lt;code&gt;wasm-to-oci&lt;/code&gt;&lt;/a&gt;. I was challenged by &lt;code&gt;wasm-to-oci&lt;/code&gt; authentication. &lt;code&gt;wasm-to-oci&lt;/code&gt; uses &lt;a href=&#34;https://github.com/deislabs/oras&#34;&gt;&lt;code&gt;ORAS&lt;/code&gt;&lt;/a&gt;. It turns out that, after authenticating using ORAS, I&amp;rsquo;m able to use &lt;code&gt;wasm-to-oci&lt;/code&gt; to authenticate to a GCR registry!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rust implementation of Crate Transparency using Google Trillian</title>
      <link>https://pretired.dazwilkin.com/posts/200429/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200429/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been hacking on a Rust-based transparent application for Google Trillian. As appears to be my fixation, this personality is for another package manager. This time, Rust&amp;rsquo;s &lt;a href=&#34;https://doc.rust-lang.org/1.0.0/book/crates-and-modules.html&#34;&gt;Crates&lt;/a&gt; often found in &lt;a href=&#34;https://crates.io&#34;&gt;&lt;code&gt;crates.io&lt;/code&gt;&lt;/a&gt; which is Rust&amp;rsquo;s Package Registry. I discussed this project earlier this month &lt;a href=&#34;https://pretired.dazwilkin.com/posts/200403/&#34;&gt;Rust Crate Transparency &amp;amp;&amp;amp; Rust SDK for Google Trillian&lt;/a&gt; and and earlier approach for Python&amp;rsquo;s packages with &lt;a href=&#34;https://pretired.dazwilkin.com/posts/190907/&#34;&gt;pypi-transparency&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This time, of course, I&amp;rsquo;m using Rust. And, by way of a first for me, for the gRPC server implementation (aka &amp;ldquo;personality&amp;rdquo;). I&amp;rsquo;ve been lazy thanks to the excellent &lt;a href=&#34;https://github.com/fullstorydev/grpcurl&#34;&gt;gRPCurl&lt;/a&gt; and have been using it way of a client. Because I&amp;rsquo;m more familiar with Golang and because I&amp;rsquo;ve written (most) other Trillian personalities in Golang, I resorted to quickly implementing Crate Transparency in Golang too in order to uncover bugs with the Rust implementation. I&amp;rsquo;ll write a follow-up post on the complexity I seem to struggle with when using protobufs and gRPC [in Golang].&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang Xiaomi Bluetooth Temperature|Humidity (LYWSD03MMC) 2nd Gen</title>
      <link>https://pretired.dazwilkin.com/posts/200417/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200417/</guid>
      <description>&lt;p&gt;Well, this became more of an adventure that I&amp;rsquo;d originally wanted but, after learning some BLE and, with the help of others (Thanks Jonatha, JsBergbau), I&amp;rsquo;ve sample code that connects to 4 Xiaomi 2nd gen. Thermometers, subscribes to readings and publishes the data to MQTT. From there, I&amp;rsquo;m scraping it using Inuits &lt;a href=&#34;&#34;&gt;MQTTGateway&lt;/a&gt; into Prometheus.&lt;/p&gt;&#xA;&lt;p&gt;Repo: &lt;a href=&#34;https://github.com/DazWilkin/gomijia2&#34;&gt;https://github.com/DazWilkin/gomijia2&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pretired.dazwilkin.com/images/200417.prometheus.png&#34; alt=&#34;Prometheus&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;thankscredit&#34;&gt;Thanks|Credit:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/u1f35c&#34;&gt;Jonathan McDowell&lt;/a&gt; for &lt;a href=&#34;https://github.com/u1f35c/gomijia&#34;&gt;gomijia&lt;/a&gt; and &lt;a href=&#34;https://github.com/u1f35c/gomijia/issues/1&#34;&gt;help&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/JsBergbau&#34;&gt;JsBergbau&lt;/a&gt; for &lt;a href=&#34;https://github.com/JsBergbau/MiTemperature2/issues/29#issuecomment-614314939&#34;&gt;help&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;background&#34;&gt;Background&lt;/h3&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve been playing around with &lt;a href=&#34;https://esphome.io&#34;&gt;ESPHome&lt;/a&gt; and blogged around my very positive experience &lt;a href=&#34;https://pretired.dazwilkin.com/posts/200227/&#34;&gt;ESPHome, MQTT, Prometheus and almost Cloud IoT&lt;/a&gt;. I&amp;rsquo;ve ordered a couple of &lt;a href=&#34;https://www.espressif.com/en/products/hardware/esp32-devkitc-googlecloud-iot/overview&#34;&gt;ESP32-DevKitC&lt;/a&gt; and hope this will enable me to connect to Google &lt;a href=&#34;https://cloud.google.com/iot-core&#34;&gt;Cloud IoT&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rust Crate Transparency &amp;&amp; Rust SDK for Google Trillian</title>
      <link>https://pretired.dazwilkin.com/posts/200403/</link>
      <pubDate>Fri, 03 Apr 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200403/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m noodling the utility of a Transparency solution for Rust Crates. When developers push crates to Cargo, a bunch of metadata is associated with the crate. E.g. &lt;a href=&#34;https://crates.io/crates/protobuf&#34;&gt;&lt;code&gt;protobuf&lt;/code&gt;&lt;/a&gt;. As with Golang Modules, Python packages on PyPi etc., there appears to be utility in making tamperproof recordings of these publications. Then, other developers may confirm that a crate pulled from cates.io is highly unlikely to have been changed.&lt;/p&gt;&#xA;&lt;p&gt;On Linux, Cargo stores downloaded crates under &lt;code&gt;${HOME}/.crates/registry&lt;/code&gt;. In the case of the latest version (&lt;code&gt;2.12.0&lt;/code&gt;) of &lt;code&gt;protobuf&lt;/code&gt;, on my machine, I have:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Trillian on Cloud Run</title>
      <link>https://pretired.dazwilkin.com/posts/200326/</link>
      <pubDate>Thu, 26 Mar 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200326/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve written previously (&lt;a href=&#34;https://medium.com/google-cloud/google-trillian-for-noobs-1a-c87a78e5e585&#34;&gt;Google Trillian for Noobs&lt;/a&gt;) about Google&amp;rsquo;s interesting project &lt;a href=&#34;https://github.com/google/trillian&#34;&gt;Trillian&lt;/a&gt; and about some of the &amp;ldquo;personalities&amp;rdquo; (e.g. &lt;a href=&#34;https://pretired.dazwilkin.com/posts/190907/&#34;&gt;PyPi Transparency&lt;/a&gt;) that I&amp;rsquo;ve build using it.&lt;/p&gt;&#xA;&lt;p&gt;Having gone slight cra-cra on &lt;a href=&#34;https://cloud.google.com/run&#34;&gt;Cloud Run&lt;/a&gt; and &lt;a href=&#34;https://grpc.io&#34;&gt;gRPC&lt;/a&gt; this week with &lt;a href=&#34;https://pretired.dazwilkin.com/posts/200320/&#34;&gt;Golang gRPC Cloud Run&lt;/a&gt; and &lt;a href=&#34;https://pretired.dazwilkin.com/posts/200325/&#34;&gt;gRPC, Cloud Run &amp;amp; Endpoints&lt;/a&gt;, I thought it&amp;rsquo;d be fun to deploy Trillian and a personality to Cloud Run.&lt;/p&gt;&#xA;&lt;p&gt;It mostly (!) works :-)&lt;/p&gt;&#xA;&lt;p&gt;At the end of the post, I&amp;rsquo;ve summarized creating a Cloud SQL instance to host the Trillian data(base).&lt;/p&gt;</description>
    </item>
    <item>
      <title>gRPC, Cloud Run &amp; Endpoints</title>
      <link>https://pretired.dazwilkin.com/posts/200325/</link>
      <pubDate>Wed, 25 Mar 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200325/</guid>
      <description>&lt;p&gt;&amp;lt;3 Google but there&amp;rsquo;s quite often an assumption that we&amp;rsquo;re all sitting around the engineering table and, of course, we&amp;rsquo;re not.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/endpoints&#34;&gt;Cloud Endpoints&lt;/a&gt; is a powerful offering but &amp;ndash; IMO &amp;ndash; it&amp;rsquo;s &lt;strong&gt;super&lt;/strong&gt; confusing to understand and complex to deploy.&lt;/p&gt;&#xA;&lt;p&gt;If you&amp;rsquo;re familiar with the motivations behind service meshes (e.g. &lt;a href=&#34;https://istio.io&#34;&gt;Istio&lt;/a&gt;), Cloud Endpoints fits in a similar niche (&amp;ldquo;neesh&amp;rdquo; or &amp;ldquo;nitch&amp;rdquo;?). The underlying ambition is that, developers can take &lt;strong&gt;existing&lt;/strong&gt; code and by adding a proxy (or sidecar), general-purpose abstractions, security, logging etc. may be added.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang gRPC Cloud Run</title>
      <link>https://pretired.dazwilkin.com/posts/200320/</link>
      <pubDate>Fri, 20 Mar 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200320/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Update: 2020-03-24&lt;/strong&gt;: Since writing this post, I&amp;rsquo;ve contributed &lt;a href=&#34;https://github.com/grpc-ecosystem/grpc-cloud-run-example/pull/12&#34;&gt;Golang&lt;/a&gt; and &lt;a href=&#34;https://github.com/grpc-ecosystem/grpc-cloud-run-example/pull/15&#34;&gt;Rust&lt;/a&gt; samples to Google&amp;rsquo;s project. I recommend you start there.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Google explained how to run gRPC servers with Cloud Run. The examples are good but only Python and Node.JS:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/blog/products/compute/serve-cloud-run-requests-with-grpc-not-just-http&#34;&gt;gRPC comes to Cloud Run&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/grpc-ecosystem/grpc-cloud-run-example&#34;&gt;gRPC in Google Cloud Run&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Missing Golang&amp;hellip;. until now ;-)&lt;/p&gt;&#xA;&lt;p&gt;I had problems with 1.14 and so I&amp;rsquo;m using 1.13.&lt;/p&gt;&#xA;&lt;h2 id=&#34;project-structure&#34;&gt;Project structure&lt;/h2&gt;&#xA;&lt;p&gt;I&amp;rsquo;ll tidy up my repo but the code may be found:&lt;/p&gt;</description>
    </item>
    <item>
      <title>OriginStamp Rust SDK Example</title>
      <link>https://pretired.dazwilkin.com/posts/200312/</link>
      <pubDate>Thu, 12 Mar 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200312/</guid>
      <description>&lt;p&gt;I wrote &lt;a href=&#34;https://pretired.dazwilkin.com/posts/200217/&#34;&gt;recently&lt;/a&gt; describing Python and Golang clients for OriginStamp based on OriginStamp&amp;rsquo;s API&amp;rsquo;s swagger spec. As a way to pursue learning rust, I&amp;rsquo;ve been forcing myself to write examples using rust. I&amp;rsquo;m honestly finding learning rust tough going and think I&amp;rsquo;m probably better to revert to the &amp;ldquo;Learning Rust&amp;rdquo; tutorials.&lt;/p&gt;&#xA;&lt;p&gt;That said, herewith an explanation of building a rust client using an OpenAPI (!) generated SDK from OriginStamp&amp;rsquo;s swagger spec.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google&#39;s New Golang SDK for Protobufs</title>
      <link>https://pretired.dazwilkin.com/posts/200310/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200310/</guid>
      <description>&lt;p&gt;Google has released a new Golang SDK for protobuf. In the [announcement], a useful tool to redact properties is described. If like me, this is somewhat novel to you, here&amp;rsquo;s a mashup using Google&amp;rsquo;s &lt;a href=&#34;https://developers.google.com/protocol-buffers/docs/gotutorial&#34;&gt;Protocol Buffer Basics&lt;/a&gt; w/ redaction.&lt;/p&gt;&#xA;&lt;p&gt;To be very clear, as it&amp;rsquo;s an important distinction:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;Version&lt;/th&gt;&#xA;          &lt;th&gt;Repo&lt;/th&gt;&#xA;          &lt;th&gt;Docs&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;v2&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://google.golang.org/protobuf&#34;&gt;google.golang.org/protobuf&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/google.golang.org/protobuf&#34;&gt;Docs&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;v1&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://github.com/golang/protobuf&#34;&gt;github.com/golang/protobuf&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/golang/protobuf&#34;&gt;Docs&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;project&#34;&gt;Project&lt;/h3&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s my project structure:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.&#xA;├── protoc-3.11.4-linux-x86_64&#xA;│   ├── bin&#xA;│   │   └── protoc&#xA;│   ├── include&#xA;│   │   └── google&#xA;│   └── readme.txt&#xA;└── src&#xA;    ├── go.mod&#xA;    ├── go.sum&#xA;    ├── main.go&#xA;    ├── protos&#xA;    │   ├── addressbook.pb.go&#xA;    │   └── addressbook.proto&#xA;    └── README.md&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You may structure as you wish.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ESPHome, MQTT, Prometheus and almost Cloud IoT</title>
      <link>https://pretired.dazwilkin.com/posts/200227/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200227/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://esphome.io&#34;&gt;ESPHome&lt;/a&gt; is a very interesting project. I&amp;rsquo;d not heard of it until this week and am surprised that it isn&amp;rsquo;t more newsworthy.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m always tinkering with IoT stuff, have a couple of &lt;a href=&#34;https://docs.wemos.cc/en/latest/d1/index.html&#34;&gt;Wemos D1&lt;/a&gt; ESP8266s. They are brought out occasionally for learning. I&amp;rsquo;ve been using them this week with ESPHome. I&amp;rsquo;m looking to buy some Xiaomi BLE temperature sensors and thinking I could read the temperatures from these using the ESPs (thanks to ESPHome) and publish the data to MQTT. I tried (unsuccessfully) to publish to &lt;a href=&#34;https://cloud.google.com/iot-core&#34;&gt;Google Cloud IoT&lt;/a&gt; (not Google&amp;rsquo;s fault but a limitation in the current ESPHome, I think) but have been successful publishing to a &lt;a href=&#34;https://mosquitto.org&#34;&gt;Mosquitto&lt;/a&gt; broker and rendering the metric data in &lt;a href=&#34;https://prometheus.io&#34;&gt;Prometheus&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>OriginStamp: Verifying Proofs</title>
      <link>https://pretired.dazwilkin.com/posts/200226/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200226/</guid>
      <description>&lt;p&gt;Recently, I &lt;a href=&#34;https://pretired.dazwilkin.com/posts/200217/&#34;&gt;wrote&lt;/a&gt; about some initial adventures with &lt;a href=&#34;https://originstamp.org&#34;&gt;OriginStamp&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Using OriginStamp&amp;rsquo;s &lt;a href=&#34;https://originstamp.org/home&#34;&gt;UI&lt;/a&gt; or API, submitting a hash results in transactions being submitted to Bitcoin, Ethereum and a German newspaper.&lt;/p&gt;&#xA;&lt;p&gt;Using the API, it&amp;rsquo;s possible to query OriginStamp&amp;rsquo;s service for a proof. This post explains how to verify such a proof.&lt;/p&gt;&#xA;&lt;p&gt;The diligent reader among you (Hey Mom!) will recall that I submitted a hash for the message:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Frederik Jack is a bubbly Border Collie&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The SHA-256 hash of this message is:&lt;/p&gt;</description>
    </item>
    <item>
      <title>FreeTSA &amp; Digitorus&#39; Timestamp SDK</title>
      <link>https://pretired.dazwilkin.com/posts/200219/</link>
      <pubDate>Wed, 19 Feb 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200219/</guid>
      <description>&lt;p&gt;I wrote recently about some exploration of Timestamping with &lt;a href=&#34;https://pretired.dazwilkin.com/posts/200217/&#34;&gt;OriginStamp&lt;/a&gt;. Since writing that post, I had some supportive feedback from the helpful folks at OriginStamp and plan to continue exploring that solution.&lt;/p&gt;&#xA;&lt;p&gt;Meanwhile, OriginStamp exposed me to &lt;a href=&#34;https://en.wikipedia.org/wiki/Timestamping_%28computing%29&#34;&gt;timestamping&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Trusted_timestamping&#34;&gt;trusted timestamping&lt;/a&gt; and I discovered &lt;a href=&#34;https://freetsa.org&#34;&gt;freeTSA.org&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;What&amp;rsquo;s the point? These services provide authoritative proof of the existence of a digital asset before some point in time; OriginStamp provides a richer service and uses multiple timestamp authorities including Bitcoin, Ethereum and rather interestingly a German Newspaper&amp;rsquo;s &lt;a href=&#34;https://blockchain.suedkurier.de/faq&#34;&gt;Trusted Timestamp&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>OriginStamp Python|Golang SDK Examples</title>
      <link>https://pretired.dazwilkin.com/posts/200217/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200217/</guid>
      <description>&lt;p&gt;A friend mentioned &lt;a href=&#34;https://originstamp.org&#34;&gt;OriginStamp&lt;/a&gt; to me.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;NB&lt;/strong&gt; There are 2 sites: &lt;a href=&#34;https://originstamp.com&#34;&gt;originstamp.com&lt;/a&gt; and &lt;a href=&#34;https://originstamp.org&#34;&gt;originstamp.org&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s an interesting project.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s a solution for providing auditable proof that you had a(ccess to) some digital thing before a certain date. OriginStamp provides user-|developer-friendly means to submit files|hashes (of your content) and have these bundled into transactions that are submitted to e.g. bitcoin.&lt;/p&gt;&#xA;&lt;p&gt;I won&amp;rsquo;t attempt to duplicate the narrative here, review OriginStamp&amp;rsquo;s site and some of its content.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Accessing GCR repos from Kubernetes</title>
      <link>https://pretired.dazwilkin.com/posts/200207/</link>
      <pubDate>Fri, 07 Feb 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200207/</guid>
      <description>&lt;p&gt;Until today, I&amp;rsquo;d not accessed a &lt;a href=&#34;https://cloud.google.com/container-registry&#34;&gt;Google Container Registry&lt;/a&gt; repo from a &lt;strong&gt;non-GKE&lt;/strong&gt; Kubernetes deployment.&lt;/p&gt;&#xA;&lt;p&gt;It turns out that it&amp;rsquo;s pretty well-documented (&lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/&#34;&gt;link&lt;/a&gt;) but, here&amp;rsquo;s an end-end example.&lt;/p&gt;&#xA;&lt;p&gt;Assuming:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BILLING&lt;span style=&#34;color:#f92672&#34;&gt;=[[&lt;/span&gt;YOUR-BILLING&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PROJECT&lt;span style=&#34;color:#f92672&#34;&gt;=[[&lt;/span&gt;YOUR-PROJECT&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SERVER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;us.gcr.io&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If not already:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud projects create &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;$PROJECT&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud beta billing projects link &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--billing-account&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BILLING&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud services enable containerregistry.googleapis.com &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--project&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;container-registry&#34;&gt;Container Registry&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IMAGE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;busybox&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Or ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;IMAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker tag &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;IMAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SERVER&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;IMAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker push &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SERVER&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;IMAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud container images list-tags &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SERVER&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;IMAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;service-account&#34;&gt;Service Account&lt;/h2&gt;&#xA;&lt;p&gt;Create a service account that&amp;rsquo;s permitted to download (read-only) images from this project&amp;rsquo;s registry&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cloud Build wishlist: Mountable Golang Modules Proxy</title>
      <link>https://pretired.dazwilkin.com/posts/200206/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200206/</guid>
      <description>&lt;p&gt;I think it would be valuable if Google were to provide volumes in &lt;a href=&#34;https://cloud.google.com/cloud-build&#34;&gt;Cloud Build&lt;/a&gt; of package registries (e.g. &lt;a href=&#34;https://proxy.golang.org&#34;&gt;Go Modules&lt;/a&gt;; &lt;a href=&#34;https://pypi.org&#34;&gt;PyPi&lt;/a&gt;; &lt;a href=&#34;https://search.maven.org/&#34;&gt;Maven&lt;/a&gt;; &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;NPM&lt;/a&gt; etc.).&lt;/p&gt;&#xA;&lt;p&gt;Google provides a &lt;a href=&#34;https://cloud.google.com/container-registry/docs/using-dockerhub-mirroring&#34;&gt;mirror&lt;/a&gt; of a subset of Docker Hub. This confers several benefits: Google&amp;rsquo;s imprimatur; speed (latency); bandwidth; and convenience.&lt;/p&gt;&#xA;&lt;p&gt;The same benefits would apply to package registries.&lt;/p&gt;&#xA;&lt;p&gt;In the meantime, there&amp;rsquo;s a hacky way to gain some of the benefits of these when using Cloud Build.&lt;/p&gt;&#xA;&lt;p&gt;In the following example, I&amp;rsquo;ll show an approach using Golang Modules and Google&amp;rsquo;s module proxy aka &lt;code&gt;proxy.golang.org&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up a GCE Instance as an Inlets Exit Node</title>
      <link>https://pretired.dazwilkin.com/posts/200122/</link>
      <pubDate>Wed, 22 Jan 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200122/</guid>
      <description>&lt;p&gt;The prolific &lt;a href=&#34;https://blog.alexellis.io/&#34;&gt;Alex Ellis&lt;/a&gt; has a new project, &lt;a href=&#34;https://github.com/inlets/inlets&#34;&gt;Inlets&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s a quick tutorial using &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Compute Platform&amp;rsquo;s (GCP)&lt;/a&gt; &lt;a href=&#34;https://cloud.google.com/compute/&#34;&gt;Compute Engine (GCE)&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;NB&lt;/strong&gt; I&amp;rsquo;m using one of Google&amp;rsquo;s &lt;a href=&#34;https://cloud.google.com/free/&#34;&gt;&amp;ldquo;Always free&amp;rdquo;&lt;/a&gt; f1-micro instances &lt;strong&gt;but&lt;/strong&gt; you may still pay for network *gress and storage&lt;/p&gt;&#xA;&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;&#xA;&lt;p&gt;I&amp;rsquo;m assuming you&amp;rsquo;ve a Google account, have used GCP and have a billing account established, i.e. the following returns at least one billing account:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud beta billing accounts list&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you&amp;rsquo;ve only one billing account and it&amp;rsquo;s the one you wish to use, then you can:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Trendnet TEW-812DRU and DD-WRT</title>
      <link>https://pretired.dazwilkin.com/posts/200113/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200113/</guid>
      <description>&lt;p&gt;The FBI Portland published an interesting &lt;a href=&#34;https://www.fbi.gov/contact-us/field-offices/portland/news/press-releases/tech-tuesday-internet-of-things-iot&#34;&gt;advisory&lt;/a&gt; with several, sensible recommendations including firewalling IoT devices from other devices on a home network. I decided to deploy a redundant &lt;a href=&#34;https://www.trendnet.com/products/wifi/AC-routers/AC1750/TEW-812DRU&#34;&gt;Trendnet TEW-812DRU version 2.0&lt;/a&gt; for this purpose.&lt;/p&gt;&#xA;&lt;p&gt;Caveat Developer: Before I go further, I don&amp;rsquo;t recommend installing DD-WRT on a Trendnet TEW-812DRU unless you&amp;rsquo;re willing to brick the device irrecoverably.&lt;/p&gt;&#xA;&lt;p&gt;I read the DD-WRT instructions several times (&lt;a href=&#34;https://forum.dd-wrt.com/phpBB2/viewtopic.php?t=51486&#34;&gt;&amp;ldquo;peacock thread&amp;rdquo;&lt;/a&gt;,&lt;a href=&#34;https://dd-wrt.com/support/router-database/?model=TEW-812DRU_v2&#34;&gt;router database&lt;/a&gt; &amp;ndash; do not use v3.0 beta builds!), thought I&amp;rsquo;d followed them and still (temporarily) bricked my router using the firmware downloaded from the DD-WRT router database. It is thanks to Justin&amp;rsquo;s help and his &lt;a href=&#34;https://blog.swwomm.com/2018/07/dd-wrt-firmware-for-trendnet-tew-812dru.html&#34;&gt;post&lt;/a&gt; that I was encouraged to try restoring my device to the Trendent firmware and then retring the DD-WRT installation with an older firmware version.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Fit</title>
      <link>https://pretired.dazwilkin.com/posts/200110/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200110/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve spent a few days exploring [Google Fit SDK] as I try to wean myself from my obsession with metrics (of all forms). A quick Googling got me to Robert&amp;rsquo;s &lt;a href=&#34;https://ithoughthecamewithyou.com/post/export-google-fit-daily-steps-to-a-google-sheet&#34;&gt;Exporter Google Fit Daily Steps, Weight and Distance to a Google Sheet&lt;/a&gt;. This works and is probably where I should have stopped&amp;hellip; avoiding the rabbit hole that I&amp;rsquo;ve been down&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;I threw together a simple Golang implementation of the SDK using &lt;a href=&#34;https://godoc.org/google.golang.org/api/fitness/v1&#34;&gt;Google&amp;rsquo;s Golang API Client Library&lt;/a&gt;. Thanks to Robert&amp;rsquo;s example, I was able to infer some of the complexity this API particularly in its use of data types, data sources and datasets. Having used Stackdriver in my previous life, Google Fit&amp;rsquo;s structure bears more than a passing resemblance to Stackdriver&amp;rsquo;s data model and its use of resource types and metric types.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Home Exporter</title>
      <link>https://pretired.dazwilkin.com/posts/200107/</link>
      <pubDate>Tue, 07 Jan 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200107/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m obsessing over Prometheus exporters. First came &lt;a href=&#34;https://pretired.dazwilkin.com/posts/191218/&#34;&gt;Linode Exporter&lt;/a&gt;, then &lt;a href=&#34;https://pretired.dazwilkin.com/posts/191220/&#34;&gt;GCP Exporter&lt;/a&gt; and, on Sunday, I stumbled upon a reverse-engineered &lt;a href=&#34;https://rithvikvibhu.github.io/GHLocalApi/&#34;&gt;API for Google Home&lt;/a&gt; devices and so wrote a very basic &lt;a href=&#34;https://github.com/DazWilkin/gohome&#34;&gt;Google Home SDK&lt;/a&gt; and a similarly basic &lt;a href=&#34;https://github.com/DazWilkin/home-exporter&#34;&gt;Google Home Exporter&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pretired.dazwilkin.com/images/200107.home-exporter.png&#34; alt=&#34;Prometheus Graphs&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The SDK only implements &lt;code&gt;/setup/eureka_info&lt;/code&gt; and then only some of the returned properties. There&amp;rsquo;s not a lot of metric-like data to use besides &lt;code&gt;SignalLevel&lt;/code&gt; (&lt;code&gt;signal_level&lt;/code&gt;) and &lt;code&gt;NoiseLevel&lt;/code&gt; (&lt;code&gt;noise_level&lt;/code&gt;). I&amp;rsquo;m not clear on the meaning of some of the properties.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Adventures around BPF</title>
      <link>https://pretired.dazwilkin.com/posts/191230/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/191230/</guid>
      <description>&lt;p&gt;I think (!?) this interesting learning experience started with &lt;a href=&#34;https://docs.cilium.io/en/v1.6/envoy/extensions/&#34;&gt;Envoy Go Extensions&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;IIUC, Cilium contributed this mechanism (&lt;a href=&#34;https://docs.cilium.io/en/v1.6/envoy/extensions/&#34;&gt;Envoy Go Extensions&lt;/a&gt;) by which it&amp;rsquo;s possible to extend Envoy using Golang. The documentation references &lt;a href=&#34;https://en.wikipedia.org/wiki/Berkeley_Packet_Filter&#34;&gt;BPF&lt;/a&gt;. Cilium and BNF were both unfamiliar technologies to me and so began my learning. This part of the journey concludes with &lt;a href=&#34;https://www.weave.works/oss/scope/&#34;&gt;Weave Scope&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I learned that Cilium is a CNI implementation that may be used with Kubernetes. GKE defaults (but is not limited to) to Google&amp;rsquo;s own CNI implementation (&lt;a href=&#34;https://cloud.google.com/kubernetes-engine/docs/concepts/network-overview&#34;&gt;link&lt;/a&gt;). From a subsequent brief exploration on CNI, I believe Digital Ocean&amp;rsquo;s managed Kubernetes service uses Cillium and Linode Kubernetes Engine uses Calico.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Cloud Platform (GCP) Exporter</title>
      <link>https://pretired.dazwilkin.com/posts/191220/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/191220/</guid>
      <description>&lt;p&gt;Earlier this week I discussed a &lt;a href=&#34;https://pretired.dazwilkin.com/posts/191218/&#34;&gt;Linode Prometheus Exporter&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I &lt;a href=&#34;https://github.com/metalmatze/digitalocean_exporter/pull/5&#34;&gt;added&lt;/a&gt; metrics for &lt;a href=&#34;https://www.digitalocean.com/products/kubernetes/&#34;&gt;Digital Ocean&amp;rsquo;s Managed Kubernetes service&lt;/a&gt; to &lt;a href=&#34;https://github.com/metalmatze&#34;&gt;@metalmatze&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://github.com/metalmatze/digitalocean_exporter&#34;&gt;Digital Ocean Exporter&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This left, metrics for &lt;a href=&#34;https://cloud.google.com&#34;&gt;Google Cloud Platform (GCP)&lt;/a&gt; which has, for many years, been my primary cloud platform. So, today I wrote &lt;a href=&#34;https://github.com/DazWilkin/gcp-exporter&#34;&gt;Prometheus Exporter for Google Cloud Platform&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;All 3 of these exporters follow the template laid down by @metalmatze and, because each of these services has a well-written Golang SDK, it&amp;rsquo;s straightforward to implement an exporter for each of them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus AlertManager</title>
      <link>https://pretired.dazwilkin.com/posts/191219/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/191219/</guid>
      <description>&lt;p&gt;Yesterday I discussed a &lt;a href=&#34;https://pretired.dazwilkin.com/posts/191218/&#34;&gt;Linode Prometheus Exporter&lt;/a&gt; and tantalized use of Prometheus AlertManager.&lt;/p&gt;&#xA;&lt;p&gt;Success:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pretired.dazwilkin.com/images/191219.alertmanager.gmail.png&#34; alt=&#34;Gmail Alert&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;configure&#34;&gt;Configure&lt;/h2&gt;&#xA;&lt;p&gt;The process is straightforward although I found the Prometheus (config) documentation slightly unwieldy to navigate :-(&lt;/p&gt;&#xA;&lt;p&gt;The overall process is &lt;a href=&#34;https://prometheus.io/docs/alerting/overview/&#34;&gt;documented&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Here are the steps I took:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#configure-prometheus&#34;&gt;Configure Prometheus&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#configure-alertmanager&#34;&gt;Configure AlertManager&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#revise-docker-compose&#34;&gt;Revise Docker Compose&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;configure-prometheus&#34;&gt;Configure Prometheus&lt;/h3&gt;&#xA;&lt;p&gt;Added the following to &lt;code&gt;prometheus.yml&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-YAML&#34; data-lang=&#34;YAML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;rule_files&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/etc/alertmanager/rules/linode.yml&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;alerting&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;alertmanagers&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;scheme&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;static_configs&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - &lt;span style=&#34;color:#f92672&#34;&gt;targets&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;alertmanager:9093&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Rules must be defined in separate rules files. See below for the content for &lt;code&gt;linode.yml&lt;/code&gt; and an explanation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linode Prometheus Exporter</title>
      <link>https://pretired.dazwilkin.com/posts/191218/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/191218/</guid>
      <description>&lt;p&gt;I enjoy using &lt;a href=&#34;https://prometheus.io&#34;&gt;Prometheus&lt;/a&gt; and have toyed around with it for some time particularly in combination with Kubernetes. I signed up with &lt;a href=&#34;https://www.linode.com/?r=9ab7d75b764e143a1b3b467390c852b2c56cd704&#34;&gt;Linode&lt;/a&gt; [referral] compelled by the addition of a managed Kubernetes service called &lt;a href=&#34;https://www.linode.com/products/kubernetes/&#34;&gt;Linode Kubernetes Engine (LKE)&lt;/a&gt;. I have an anxiety that I&amp;rsquo;ll inadvertently leave resources running (unused) on a cloud platform. Instead of refreshing the relevant billing page, it struck me that Prometheus may (not yet proven) help.&lt;/p&gt;&#xA;&lt;p&gt;The hypothesis is that a combination of a cloud-specific Prometheus &lt;a href=&#34;https://prometheus.io/docs/instrumenting/exporters/&#34;&gt;exporter&lt;/a&gt; reporting aggregate uses of e.g. Linodes (instances), NodeBalancers, Kubernetes clusters etc., could form the basis of an alert mechanism using Prometheus&amp;rsquo; &lt;a href=&#34;https://prometheus.io/docs/alerting/overview/&#34;&gt;alerting&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>NGINX Ingress</title>
      <link>https://pretired.dazwilkin.com/posts/191211/</link>
      <pubDate>Wed, 11 Dec 2019 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/191211/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve written a couple of deployment options (Google Compute Engine; Kubernetes) for an open-source project. The Kubernetes deployment provides &lt;code&gt;NodePort&lt;/code&gt; and (TCP) &lt;code&gt;LoadBalancer&lt;/code&gt; options and I&amp;rsquo;ve been trying (unsuccessfully) to add HTTPS Load-balancing.&lt;/p&gt;&#xA;&lt;p&gt;I should (!) try to deploy to &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/&#34;&gt;Google Kubernetes Engine (GKE)&lt;/a&gt; but I&amp;rsquo;ve been using &lt;a href=&#34;https://microk8s.io&#34;&gt;microk8s&lt;/a&gt;, Digital Ocean &lt;a href=&#34;https://www.digitalocean.com/products/kubernetes/&#34;&gt;Managed Kubernetes&lt;/a&gt; and the Linode &lt;a href=&#34;https://www.linode.com/products/kubernetes/&#34;&gt;LKE&lt;/a&gt; Beta. Each of these requires an implementation of Ingress controller. For GKE, GCP&amp;rsquo;s HTTP/S Load-balancer (GCLB) is used. But, for the other services, NGINX Ingress is a good option and so I&amp;rsquo;ve been exploring NGINX Ingress (Controller) &lt;a href=&#34;https://kubernetes.github.io/ingress-nginx/&#34;&gt;link&lt;/a&gt;. This Ingress appears to work except that I&amp;rsquo;ve been unable to get it to work with mutual TLS between the (NGINX) proxy and my backend services.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyPi Transparency Client (Rust)</title>
      <link>https://pretired.dazwilkin.com/posts/190930/</link>
      <pubDate>Mon, 30 Sep 2019 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/190930/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve finally being able to hack my way through to a working Rust gRPC client (for &lt;a href=&#34;https://pretired.dazwilkin.com/posts/190926/&#34;&gt;PyPi Transparency&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s not very good: poorly structured, hacky etc. but it serves the purpose of giving me a foothold into Rust development so that I can evolve it as I learn the language and its practices.&lt;/p&gt;&#xA;&lt;p&gt;There are several Rust crates (SDK) for gRPC. There&amp;rsquo;s no sanctioned SDK for Rust on &lt;a href=&#34;https://grpc.io&#34;&gt;grpc.io&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I chose &lt;a href=&#34;https://github.com/stepancheg&#34;&gt;stepancheg&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://github.com/stepancheg/grpc-rust&#34;&gt;grpc-rust&lt;/a&gt; because it&amp;rsquo;s a pure Rust implementation (not built atop the C implementation).&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyPi Transparency</title>
      <link>https://pretired.dazwilkin.com/posts/190926/</link>
      <pubDate>Thu, 26 Sep 2019 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/190926/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been noodling around with another &lt;a href=&#34;https://github.com/google/trillian&#34;&gt;Trillian&lt;/a&gt; personality.&lt;/p&gt;&#xA;&lt;p&gt;Another in a theme that interests me in providing tamperproof logs for the packages in the popular package management registries.&lt;/p&gt;&#xA;&lt;p&gt;The Golang team recently announced &lt;a href=&#34;https://proxy.golang.org/&#34;&gt;Go Module Mirror&lt;/a&gt; which is built atop Trillian. It seems to me that all the package registries (&lt;a href=&#34;https://proxy.golang.org&#34;&gt;Go Modules&lt;/a&gt;, &lt;a href=&#34;https://www.npmjs.com&#34;&gt;npm&lt;/a&gt;, &lt;a href=&#34;https://mvnrepository.com&#34;&gt;Maven&lt;/a&gt;, &lt;a href=&#34;https://nuget.org&#34;&gt;NuGet&lt;/a&gt; etc.) would benefit from tamperproof logs hosted by a trusted 3rd-party.&lt;/p&gt;&#xA;&lt;p&gt;As you may have guessed, PyPi Transparency is a log for &lt;a href=&#34;https://pypi.org&#34;&gt;PyPi&lt;/a&gt; packages. PyPi is comprehensive, definitive and trusted but, as with Go Module Mirror, it doesn&amp;rsquo;t hurt to provide a backup of some of its data. In the case of this solution, Trillian hosts a log of self-calculated SHA-256 hashes for Python packages that are added to it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Run cAdvisor when using Docker Compose</title>
      <link>https://pretired.dazwilkin.com/posts/190925/</link>
      <pubDate>Wed, 25 Sep 2019 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/190925/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/google/cadvisor&#34;&gt;&lt;code&gt;cAdvisor&lt;/code&gt;&lt;/a&gt; has long been a favorite monitoring tool of mine. I&amp;rsquo;m using Docker Compose for local testing and have begun including a &lt;code&gt;cAdvisor&lt;/code&gt; in my &lt;code&gt;docker-compose.yaml&lt;/code&gt; files.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-YAML&#34; data-lang=&#34;YAML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;cadvisor&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;always&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;google/cadvisor:${CADVISOR_VERSION}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cadvisor&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# command:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# - --prometheus_endpoint=&amp;#34;/metrics&amp;#34; # Default&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/:/rootfs:ro&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/var/run:/var/run:rw&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/sys:/sys:ro&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/var/snap/docker/current:/var/lib/docker:ro&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#- &amp;#34;/var/lib/docker/:/var/lib/docker:ro&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;expose&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8080&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I&amp;rsquo;d not realized until recently, that &lt;code&gt;cAdvisor&lt;/code&gt; also surfaces a Prometheus metrics endpoint and so, if you do follow this path and you&amp;rsquo;re also using Prometheus, don&amp;rsquo;t forget to add &lt;code&gt;cAdvisor&lt;/code&gt; to your Prometheus targets.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Engine and Free Tier</title>
      <link>https://pretired.dazwilkin.com/posts/190924/</link>
      <pubDate>Tue, 24 Sep 2019 09:40:14 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/190924/</guid>
      <description>&lt;p&gt;Google Cloud Platform &lt;a href=&#34;https://cloud.google.com/free/&#34;&gt;Free Tier&lt;/a&gt; appears (&lt;span style=&#34;color:red&#34;&gt;please verify this for yourself&lt;/span&gt;) to provide the ability to run a(n admittedly miniscule) Kubernetes cluster for free. So, why do this? It provides a definitive Kubernetes (Engine) experience on Google Cloud Platform that you may use for learning and testing.&lt;/p&gt;&#xA;&lt;p&gt;Kubernetes Engine the master node(s) and the control plane are &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/pricing&#34;&gt;free&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Kubernetes (i.e. Compute Engine) nodes potentially incur charges including for the VM runtime and any attached storage, snapshots etc. However, charges for these resources can be partially covered by the Free Tier.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cloud Functions Simple(st) HTTP Multi-host Proxy</title>
      <link>https://pretired.dazwilkin.com/posts/190918/</link>
      <pubDate>Wed, 18 Sep 2019 12:45:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/190918/</guid>
      <description>&lt;p&gt;Tweaked yesterday&amp;rsquo;s solution so that it will randomly select one from several hosts with which it&amp;rsquo;s configured.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Golang&#34; data-lang=&#34;Golang&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;proxy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;math/rand&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net/http&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net/url&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;strings&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;robin&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;hostsList&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PROXY_HOST&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hostsList&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#39;PROXY_HOST&amp;#39; environment variable should contain comma-separated list of hosts&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Comma-separated lists of hosts&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;hosts&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;strings&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Split&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;hostsList&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;urls&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; make([]&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;URL&lt;/span&gt;, len(&lt;span style=&#34;color:#a6e22e&#34;&gt;hosts&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;host&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hosts&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;origin&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;Endpoint&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;Host&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;host&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;Port&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Getenv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PROXY_PORT&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;origin&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;URL&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;urls&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;] = &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rand&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NewSource&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Now&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;UnixNano&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;q&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rand&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;New&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;Handler&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;w&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ResponseWriter&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Request&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// Pick one of the URLs at random&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;urls&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;q&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Int31n&lt;/span&gt;(int32(len(&lt;span style=&#34;color:#a6e22e&#34;&gt;urls&lt;/span&gt;)))]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[Handler] Forwarding: %s&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// Forward to it&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;reverseproxy&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;w&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;r&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This requires a minor tweak to the deployment to escape the commas within the &lt;code&gt;PROXY_HOST&lt;/code&gt; string to disambiguate these for &lt;code&gt;gcloud&lt;/code&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cloud Functions Simple(st) HTTP Proxy</title>
      <link>https://pretired.dazwilkin.com/posts/190917/</link>
      <pubDate>Tue, 17 Sep 2019 12:41:02 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/190917/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m investigating the use of &lt;a href=&#34;https://letsencrypt.org/&#34;&gt;LetsEncrypt&lt;/a&gt; for gRPC services. I found this straightforward &lt;a href=&#34;https://www.d3void.net/post/acme/&#34;&gt;post&lt;/a&gt; by Scott Devoid and am going to try this approach.&lt;/p&gt;&#xA;&lt;p&gt;Before I can do that, I need to be able to publish services (make them Internet-accessible) and would like to try to continue to use GCP for &lt;a href=&#34;https://cloud.google.com/free/&#34;&gt;free&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Some time ago, I &lt;a href=&#34;https://medium.com/google-cloud/microk8s-on-google-cloud-platform-d8b7a71a3ef&#34;&gt;wrote&lt;/a&gt; about using the excellent &lt;a href=&#34;https://microk8s.io/&#34;&gt;Microk8s&lt;/a&gt; on GCP. Using an &lt;code&gt;f1-micro&lt;/code&gt;, I&amp;rsquo;m hoping (!) to stay within the Compute Engine free tier. I&amp;rsquo;ll also try to be diligent and delete the instance when it&amp;rsquo;s not needed. This gives me a runtime platform and I can expose services to the Instance&amp;rsquo;s (Node)Ports but, I&amp;rsquo;d prefer to not be billed for a simple proxy.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visual Studio Code: gopls and YAML</title>
      <link>https://pretired.dazwilkin.com/posts/190610/</link>
      <pubDate>Tue, 10 Sep 2019 10:23:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/190610/</guid>
      <description>&lt;p&gt;The Go team is developing a &lt;a href=&#34;https://langserver.org/&#34;&gt;Language Server Protocol [LSP]&lt;/a&gt; implementation) called &lt;a href=&#34;https://github.com/golang/go/wiki/gopls&#34;&gt;&lt;code&gt;gopls&lt;/code&gt;&lt;/a&gt;. Visual Studio Code (and others) support LSP. Other languages (e.g. Python have LSP &lt;a href=&#34;https://github.com/Microsoft/python-language-server&#34;&gt;implementations&lt;/a&gt; too). I&amp;rsquo;ve been using &lt;code&gt;gopls&lt;/code&gt; for some time. It works (mostly) very well and replaces multiple, indepedent tools with two (&lt;code&gt;gopls&lt;/code&gt; and &lt;a href=&#34;https://github.com/go-delve/delve&#34;&gt;&lt;code&gt;delve&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;p&gt;My Visual Studio Code settings that include &lt;code&gt;gopls&lt;/code&gt; is:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-YAML&#34; data-lang=&#34;YAML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;go.autocompleteUnimportedPackages&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;go.useLanguageServer&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;[go]&amp;#34;: &lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;editor.snippetSuggestions&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;editor.formatOnSave&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;editor.codeActionsOnSave&amp;#34;: &lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;source.organizeImports&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;gopls&amp;#34;: &lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;usePlaceholders&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;wantCompletionDocumentation&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;go.toolsEnvVars&amp;#34;: &lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;go.languageServerFlags&amp;#34;: &lt;/span&gt;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-rpc.trace&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serve&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--debug=localhost:6060&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;go.enableCodeLens&amp;#34;: &lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;references&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;runtest&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;One of the Google engineers working on &lt;code&gt;gopls&lt;/code&gt; gave a comprehensive and interesting &lt;a href=&#34;https://lnkd.in/g-ykasj&#34;&gt;overview&lt;/a&gt; of the tool at GopherCon 2019.&lt;/p&gt;</description>
    </item>
    <item>
      <title>pypi-transparency</title>
      <link>https://pretired.dazwilkin.com/posts/190907/</link>
      <pubDate>Sat, 07 Sep 2019 13:07:44 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/190907/</guid>
      <description>&lt;p&gt;The goal of pypi-transparency is very similar to the underlying motivation for the Golang team&amp;rsquo;s &lt;a href=&#34;https://sum.golang.org/&#34;&gt;Checksum Database&lt;/a&gt; (also built with Trillian).&lt;/p&gt;&#xA;&lt;p&gt;Even though, &lt;a href=&#34;https://pypi.org&#34;&gt;PyPi&lt;/a&gt; provides hashes of the content of packages it hosts, the developer must trust that PyPi&amp;rsquo;s data is consistent. One ambition with pypi-transparency is to provide a companion, tamperproof log of PyPi package files in order to provide a double-check of these hashes.&lt;/p&gt;&#xA;&lt;p&gt;It is important to understand what this does (and does not) provide. There&amp;rsquo;s no validation of a package&amp;rsquo;s content. The only calculation is that, on first observation, a SHA-256 hash is computed of the package&amp;rsquo;s content and the hash is recorded. If the package is subsequently altered, it&amp;rsquo;s very probable that the hash will change and this provides a signal to the user that the package&amp;rsquo;s contents has changed. Because pypi-transparency uses a tamperproof log, it&amp;rsquo;s very difficult to update the hash recorded in the tamperproof log, to reflect this change. Corrolary: pypi-transparency will record the hashes of packages that include malicious code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Welcome</title>
      <link>https://pretired.dazwilkin.com/posts/190906/</link>
      <pubDate>Fri, 06 Sep 2019 13:54:49 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/190906/</guid>
      <description>&lt;p&gt;Now that I&amp;rsquo;ve (p)retired from Google, I&amp;rsquo;m starting this &lt;a href=&#34;httsp://pretired.dazwilkin.com&#34;&gt;blog&lt;/a&gt; and will no longer post stories to &lt;a href=&#34;https://medium.com/@DazWilkin&#34;&gt;Medium&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;As I concluded my time at Google, I wrapped up work on a &lt;a href=&#34;https://github.com/google/trillian&#34;&gt;Trillian&lt;/a&gt; prototype. As it remains Google&amp;rsquo;s IP, I&amp;rsquo;m not permitted to discuss it here.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve begun work on another Trillian prototype for Python package transparency, informally &lt;a href=&#34;https://pretired.dazwilkin.com/posts/190907/&#34;&gt;pypi-transparency&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
