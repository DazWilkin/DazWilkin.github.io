<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>XML-RPC on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/xml-rpc/</link>
    <description>Recent content in XML-RPC on (p)retired</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Aug 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/xml-rpc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>XML-RPC in Rust and Python</title>
      <link>https://pretired.dazwilkin.com/posts/240811/</link>
      <pubDate>Sun, 11 Aug 2024 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240811/</guid>
      <description>A lazy Sunday afternoon and my interest was piqued by XML-RPC&#xA;Client A very basic XML-RPC client wrapped in a Cloud Functions function:&#xA;main.py:&#xA;import functions_framework import os import xmlrpc.client endpoint = os.get_env(&amp;#34;ENDPOINT&amp;#34;) proxy = xmlrpc.client.ServerProxy(endpoint) @functions_framework.http def add(request): print(request) rqst = request.get_json(silent=True) resp = proxy.add( {&amp;#34;x&amp;#34;:{ &amp;#34;real&amp;#34;:rqst[&amp;#34;x&amp;#34;][&amp;#34;real&amp;#34;], &amp;#34;imag&amp;#34;:rqst[&amp;#34;x&amp;#34;][&amp;#34;imag&amp;#34;] }, &amp;#34;y&amp;#34;:{ &amp;#34;real&amp;#34;:rqst[&amp;#34;y&amp;#34;][&amp;#34;real&amp;#34;], &amp;#34;imag&amp;#34;:rqst[&amp;#34;y&amp;#34;][&amp;#34;imag&amp;#34;] } }) return resp requirements.txt:&#xA;functions-framework==3.* Run it:&#xA;python3 -m venv venv source venv/bin/activate python3 -m pip install --requirement requirements.</description>
    </item>
  </channel>
</rss>
