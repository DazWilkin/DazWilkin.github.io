<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wascc on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/wascc/</link>
    <description>Recent content in Wascc on (p)retired</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Jun 2020 00:00:00 -0800</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/wascc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>waPC &amp; Protobufs</title>
      <link>https://pretired.dazwilkin.com/posts/200612/</link>
      <pubDate>Fri, 12 Jun 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200612/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m hacking around with a solution that combines WASM and Google &lt;a href=&#34;https://github.com/google/trillian&#34;&gt;Trillian&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Ultimately, I&amp;rsquo;d like to be able to ship WASM (binaries) to a Trillian personality and then invoke (exported) functions on them. Some this was borne from the interesting exploration of &lt;a href=&#34;https://github.com/deislabs/krustlet&#34;&gt;Krustlet&lt;/a&gt; and its application of &lt;a href=&#34;https://wascc.dev/&#34;&gt;wascc&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m still booting into WASM but it&amp;rsquo;s a &lt;em&gt;very&lt;/em&gt; interesting technology that has most interesting potential outside the browser. Some folks have been trailblazing the technology and I have been reading Kevin Hoffman&amp;rsquo;s &lt;a href=&#34;https://medium.com/@KevinHoffman&#34;&gt;medium&lt;/a&gt; and &lt;a href=&#34;https://wascc.dev/&#34;&gt;wascc&lt;/a&gt; (nee waxosuit) work. From this, I stumbled upon Kevin&amp;rsquo;s &lt;a href=&#34;https://medium.com/@KevinHoffman/introducing-wapc-dc9d8b0c2223&#34;&gt;waPC&lt;/a&gt; and I&amp;rsquo;m using waPC in this prototyping as a way to exchange data between clients and servers running WASM binaries.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
