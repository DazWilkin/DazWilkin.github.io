<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ackal on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/ackal/</link>
    <description>Recent content in Ackal on (p)retired</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Jul 2023 00:00:00 -0700</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/ackal/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes Python SDK w/ CRDs</title>
      <link>https://pretired.dazwilkin.com/posts/230708/</link>
      <pubDate>Sat, 08 Jul 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230708/</guid>
      <description>Responded to Get Custom K8s Resource using Python and found the CustomObjectsApi documentation unclear.&#xA;If you have a cluster and a kubeconfig file with a correctly configured current-context, so that you can successfully:&#xA;PLURAL=&amp;#34;checks&amp;#34; kubectl get ${PLURAL} \ --all-namespaces NOTE I&amp;rsquo;m using Ackal&amp;rsquo;s CRDs in these examples.&#xA;Then you can use the following code to access the cluster&amp;rsquo;s REST API server to enumerate its CRDs:&#xA;main.py:&#xA;from __future__ import print_function from kubernetes import client, config from kubernetes.</description>
    </item>
    <item>
      <title>Azure Container Apps</title>
      <link>https://pretired.dazwilkin.com/posts/230404/</link>
      <pubDate>Tue, 04 Apr 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230404/</guid>
      <description>The majority of Ackal&amp;rsquo;s components are deployed to Google Cloud. However, by its nature, Ackal benefits from deployments that span cloud platforms. I&amp;rsquo;ve deployed Ackal&amp;rsquo;s gRPC health checks to Fly, and managed Kubernetes services on Linode and Vultr.&#xA;Today, I decided to revisitÂ¹ Azure. Ackal uses Azure (Active Directory) for one of its OAuth providers. This time, I wanted to deploy a containerized gRPC service. Azure provides several container-oriented services. I decided to use Azure Container Apps and, in hindsight, find it analogous to Google Cloud Run.</description>
    </item>
  </channel>
</rss>
