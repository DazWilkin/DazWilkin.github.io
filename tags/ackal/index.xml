<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ackal on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/ackal/</link>
    <description>Recent content in Ackal on (p)retired</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Jun 2025 00:00:00 -0700</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/ackal/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gemini Code Assist &#39;agent&#39; mode without `npx mcp-remote` (2/2)</title>
      <link>https://pretired.dazwilkin.com/posts/250627/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250627/</guid>
      <description>&lt;p&gt;Solved!&lt;/p&gt;&#xA;&lt;p&gt;Ugh.&lt;/p&gt;&#xA;&lt;p&gt;Before I continue, one important detail from yesterday&amp;rsquo;s experience which I think I didn&amp;rsquo;t clarify is that, unlike the Copilot agent, it appears (!?) that Gemini agent only supports integration with MCP servers via stdio. As a result, the only way to integrate with HTTP-based MCP servers (local or remote) is to proxy traffic through stdio as &lt;a href=&#34;https://www.npmjs.com/package/mcp-remote&#34;&gt;&lt;code&gt;mcp-remote&lt;/code&gt;&lt;/a&gt; and the Rust example herein.&lt;/p&gt;&#xA;&lt;p&gt;The most helpful change was to take a hint from the NPM &lt;a href=&#34;https://www.npmjs.com/package/mcp-remote&#34;&gt;&lt;code&gt;mcp-remote&lt;/code&gt;&lt;/a&gt; and create a log file. This helps because, otherwise the &lt;code&gt;mcp-remote&lt;/code&gt; process, because it&amp;rsquo;s launched by Visual Studio Code, well Gemini Code Assist agent, isn&amp;rsquo;t trivial to debug.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gemini Code Assist &#39;agent&#39; mode without `npx mcp-remote` (1/2)</title>
      <link>https://pretired.dazwilkin.com/posts/250626/</link>
      <pubDate>Thu, 26 Jun 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250626/</guid>
      <description>&lt;p&gt;Former Microsoftie and Googler:&lt;/p&gt;&#xA;&lt;p&gt;Good documentation &lt;a href=&#34;https://learn.microsoft.com/en-us/microsoft-copilot-studio/agent-extend-action-mcp&#34;&gt;Extend your agent with Model Context Protocol&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Not such good documentation: &lt;a href=&#34;https://developers.google.com/gemini-code-assist/docs/use-agentic-chat-pair-programmer&#34;&gt;Using agentic chat as a pair programmer&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Definition of &amp;ldquo;good&amp;rdquo; being, I was able to follow the clear instructions and it worked first time. Well done, Microsoft!&lt;/p&gt;&#xA;&lt;p&gt;This space is moving so quickly and I&amp;rsquo;m happy to alpha test these companies&amp;rsquo; solutions but (a) Google&amp;rsquo;s portfolio is a mess. This week I&amp;rsquo;ve tried (and failed) to use Gemini CLI (because I don&amp;rsquo;t want to run Node.JS on my host machine and it doesn&amp;rsquo;t work in a container: &lt;a href=&#34;https://github.com/google-gemini/gemini-cli/issues/1437&#34;&gt;issue #1437&lt;/a&gt;) and now this.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Python SDK w/ CRDs</title>
      <link>https://pretired.dazwilkin.com/posts/230708/</link>
      <pubDate>Sat, 08 Jul 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230708/</guid>
      <description>&lt;p&gt;Responded to &lt;a href=&#34;https://stackoverflow.com/questions/76636443/&#34;&gt;Get Custom K8s Resource using Python&lt;/a&gt; and found the &lt;a href=&#34;https://github.com/kubernetes-client/python/blob/master/kubernetes/docs/CustomObjectsApi.md&#34;&gt;&lt;code&gt;CustomObjectsApi&lt;/code&gt;&lt;/a&gt; documentation unclear.&lt;/p&gt;&#xA;&lt;p&gt;If you have a cluster and a kubeconfig file with a correctly configured &lt;code&gt;current-context&lt;/code&gt;, so that you can successfully:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PLURAL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;checks&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PLURAL&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--all-namespaces&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; I&amp;rsquo;m using &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt;&amp;rsquo;s CRDs in these examples.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Then you can use the following code to access the cluster&amp;rsquo;s REST API server to enumerate its CRDs:&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;main.py&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Python3&#34; data-lang=&#34;Python3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; __future__ &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; print_function&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; kubernetes &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; client, config&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; kubernetes.client.rest &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ApiException&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;load_kube_config()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;api &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;CustomObjectsApi()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Ackal&amp;#39;s Group|Version and some Kinds&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ack.al&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;version &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;v1&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plurals &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;checks&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;customers&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; plural &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; plurals:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        resp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; api&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;list_cluster_custom_object(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            group,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            version,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            plural,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; resp[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;items&amp;#34;&lt;/span&gt;]:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            spec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spec&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            print(spec)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; ApiException &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(e)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m venv venv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source venv/bin/activate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m pip install kubernetes&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;26.1.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 main.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s all!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Azure Container Apps</title>
      <link>https://pretired.dazwilkin.com/posts/230404/</link>
      <pubDate>Tue, 04 Apr 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230404/</guid>
      <description>&lt;p&gt;The majority of &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt;&amp;rsquo;s components are deployed to &lt;a href=&#34;https://cloud.google.com&#34;&gt;Google Cloud&lt;/a&gt;. However, by its nature, Ackal benefits from deployments that span cloud platforms. I&amp;rsquo;ve deployed Ackal&amp;rsquo;s &lt;a href=&#34;https://grpc.io&#34;&gt;gRPC&lt;/a&gt; &lt;a href=&#34;https://github.com/grpc/grpc/blob/master/doc/health-checking.md&#34;&gt;health checks&lt;/a&gt; to &lt;a href=&#34;https://fly.io&#34;&gt;Fly&lt;/a&gt;, and managed Kubernetes services on &lt;a href=&#34;https://linode.com&#34;&gt;Linode&lt;/a&gt; and &lt;a href=&#34;https://vultr.com&#34;&gt;Vultr&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Today, I decided to revisit&lt;a href=&#34;#microsoft&#34;&gt;¹&lt;/a&gt; &lt;a href=&#34;https://azure.microsoft.com&#34;&gt;Azure&lt;/a&gt;. Ackal uses Azure (Active Directory) for one of its OAuth providers. This time, I wanted to deploy a containerized gRPC service. Azure provides &lt;a href=&#34;https://azure.microsoft.com/en-us/products/category/containers/&#34;&gt;several&lt;/a&gt; container-oriented services. I decided to use &lt;a href=&#34;https://azure.microsoft.com/en-us/products/container-apps/&#34;&gt;Azure Container Apps&lt;/a&gt; and, in hindsight, find it analogous to Google &lt;a href=&#34;https://cloud.google.com/run&#34;&gt;Cloud Run&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
