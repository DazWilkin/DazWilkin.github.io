<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vke on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/vke/</link>
    <description>Recent content in Vke on (p)retired</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Jun 2022 00:00:00 -0700</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/vke/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Secure (TLS) gRPC services with VKE</title>
      <link>https://pretired.dazwilkin.com/posts/220603/</link>
      <pubDate>Fri, 03 Jun 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220603/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; &lt;a href=&#34;https://cert-manager.io&#34;&gt;&lt;code&gt;cert-manager&lt;/code&gt;&lt;/a&gt; is a better solution to what follows.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve a need to deploy a Vultr Kubernetes Engine (VKE) cluster on a daily basis (create and delete within a few hours) and expose (securely|TLS) a gRPC service.&lt;/p&gt;&#xA;&lt;p&gt;I have an existing solution &lt;a href=&#34;https://pretired.dazwilkin.com/posts/211130/&#34;&gt;Automatic Certs w/ Golang gRPC service on Compute Engine&lt;/a&gt; that combines a gRPC Healthchecking and an ACME service and decided to reuse this.&lt;/p&gt;&#xA;&lt;p&gt;In order for it work, we need:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vultr CLI and JSON output</title>
      <link>https://pretired.dazwilkin.com/posts/220602/</link>
      <pubDate>Thu, 02 Jun 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220602/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve begun exploring &lt;a href=&#34;https://vultr.com&#34;&gt;Vultr&lt;/a&gt; after the company announced a managed Kubernetes offering &lt;a href=&#34;https://www.vultr.com/kubernetes/&#34;&gt;Vultr Kubernetes Engine (VKE)&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In my brief experience, it&amp;rsquo;s a decent platform and its CLI &lt;a href=&#34;https://github.com/vultr/vultr-cli&#34;&gt;&lt;code&gt;vultr-cli&lt;/code&gt;&lt;/a&gt; is mostly (!) good. The CLI has a limitation in that command output is text formatted and this makes it challenging to parse the output when scripting.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; The Vultr developers have a branch &lt;a href=&#34;https://github.com/vultr/vultr-cli/tree/rewrite&#34;&gt;&lt;code&gt;rewrite&lt;/code&gt;&lt;/a&gt; that includes a solution to this problem.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Example&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ID              12345678-90ab-cdef-1234-567890abcdef&#xA;LABEL           test&#xA;DATE CREATED    2022-01-01T00:00:00+00:00&#xA;CLUSTER SUBNET  255.255.255.255/16&#xA;SERVICE SUBNET  255.255.255.255/12&#xA;IP              255.255.255.255&#xA;ENDPOINT        12345678-90ab-cdef-1234-567890abcdef.vultr-k8s.com&#xA;VERSION         v1.23.5+3&#xA;REGION          mars&#xA;STATUS          pending&#xA; &#xA;NODE POOLS&#xA;ID              12345678-90ab-cdef-1234-567890abcdef&#xA;DATE CREATED    2022-01-01T00:00:00+00:00&#xA;DATE UPDATED    2022-01-01T00:00:00+00:00&#xA;LABEL           nodepool&#xA;TAG             foo&#xA;PLAN            vc2-1c-2gb&#xA;STATUS          pending&#xA;NODE QUANTITY   1&#xA;AUTO SCALER     false&#xA;MIN NODES       1&#xA;MAX NODES       1&#xA; &#xA;NODES&#xA;ID                                      DATE CREATED                    LABEL                   STATUS&#xA;12345678-&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Until that&amp;rsquo;s available, I&amp;rsquo;m lazy writing &lt;strong&gt;very simple&lt;/strong&gt; bash scripts to parse &lt;code&gt;vultr-cli&lt;/code&gt; command output as JSON. The repo is &lt;a href=&#34;https://github.com/DazWilkin/vultr-cli-format&#34;&gt;&lt;code&gt;vultr-cli-format&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
