<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NGINX on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/nginx/</link>
    <description>Recent content in NGINX on (p)retired</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Dec 2019 00:00:00 -0700</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NGINX Ingress</title>
      <link>https://pretired.dazwilkin.com/posts/191211/</link>
      <pubDate>Wed, 11 Dec 2019 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/191211/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve written a couple of deployment options (Google Compute Engine; Kubernetes) for an open-source project. The Kubernetes deployment provides &lt;code&gt;NodePort&lt;/code&gt; and (TCP) &lt;code&gt;LoadBalancer&lt;/code&gt; options and I&amp;rsquo;ve been trying (unsuccessfully) to add HTTPS Load-balancing.&lt;/p&gt;&#xA;&lt;p&gt;I should (!) try to deploy to &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/&#34;&gt;Google Kubernetes Engine (GKE)&lt;/a&gt; but I&amp;rsquo;ve been using &lt;a href=&#34;https://microk8s.io&#34;&gt;microk8s&lt;/a&gt;, Digital Ocean &lt;a href=&#34;https://www.digitalocean.com/products/kubernetes/&#34;&gt;Managed Kubernetes&lt;/a&gt; and the Linode &lt;a href=&#34;https://www.linode.com/products/kubernetes/&#34;&gt;LKE&lt;/a&gt; Beta. Each of these requires an implementation of Ingress controller. For GKE, GCP&amp;rsquo;s HTTP/S Load-balancer (GCLB) is used. But, for the other services, NGINX Ingress is a good option and so I&amp;rsquo;ve been exploring NGINX Ingress (Controller) &lt;a href=&#34;https://kubernetes.github.io/ingress-nginx/&#34;&gt;link&lt;/a&gt;. This Ingress appears to work except that I&amp;rsquo;ve been unable to get it to work with mutual TLS between the (NGINX) proxy and my backend services.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
