<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cloud-logging on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/cloud-logging/</link>
    <description>Recent content in cloud-logging on (p)retired</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Oct 2021 00:00:00 -0700</lastBuildDate><atom:link href="https://pretired.dazwilkin.com/tags/cloud-logging/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang Structured Logging w/ Google Cloud Logging (2)</title>
      <link>https://pretired.dazwilkin.com/posts/211018/</link>
      <pubDate>Mon, 18 Oct 2021 00:00:00 -0700</pubDate>
      
      <guid>https://pretired.dazwilkin.com/posts/211018/</guid>
      <description>Recently, I described how to configure Golang logging so that user-defined key-values applied to the logs are parsed when ingested by Google Cloud Logging.
Since then (see this issue), the helpful developers of go-logr have revised funcr&amp;rsquo;s implementation (see [release: v1.2.0-rc1) so that it both supports:
 outputting logs as JSON; and enables the use of hooks to configure the logs so that these support e.g. the Cloud Logging agent&amp;rsquo;s special fields (e.</description>
    </item>
    
    <item>
      <title>Golang Structured Logging w/ Google Cloud Logging</title>
      <link>https://pretired.dazwilkin.com/posts/210928/</link>
      <pubDate>Tue, 28 Sep 2021 00:00:00 -0700</pubDate>
      
      <guid>https://pretired.dazwilkin.com/posts/210928/</guid>
      <description>I&amp;rsquo;ve multiple components in an app and these are deployed across multiple Google Cloud Platform (GCP) services: Kubernetes Engine, Cloud Functions, Cloud Run, etc. Almost everything is written in Golang and I started the project using go-logr.
logr is in two parts: a Logger that you use to write log entries; a LogSink (adaptor) that consumes log entries and outputs them to a specific log implementation.
Initially, I defaulted to using stdr which is a LogSink for Go&amp;rsquo;s standard logging implementation.</description>
    </item>
    
  </channel>
</rss>
