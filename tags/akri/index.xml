<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Akri on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/akri/</link>
    <description>Recent content in Akri on (p)retired</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Jan 2021 00:00:00 -0800</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/akri/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes cert-manager</title>
      <link>https://pretired.dazwilkin.com/posts/210108/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210108/</guid>
      <description>&lt;p&gt;I developed an &lt;a href=&#34;https://pretired.dazwilkin.com/posts/201229/&#34;&gt;admission webhook&lt;/a&gt; for Akri, twice (&lt;a href=&#34;https://github.com/DazWilkin/akri-webhook&#34;&gt;Golang&lt;/a&gt;, &lt;a href=&#34;https://github.com/DazWilkin/akri-webhook-rust&#34;&gt;Rust&lt;/a&gt;). I naively followed other examples for the generation of the certificates, created a 1.20 cluster and &lt;a href=&#34;https://stackoverflow.com/questions/65587904/&#34;&gt;broke&lt;/a&gt; that process.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;d briefly considered using &lt;a href=&#34;https://cert-manager.io&#34;&gt;&lt;code&gt;cert-manager&lt;/code&gt;&lt;/a&gt; recently but quickly abandoned the idea thinking it would be onerous and unnecessary complexity for little-old-me. I was wrong. It&amp;rsquo;s excellent and I recommend it highly.&lt;/p&gt;&#xA;&lt;p&gt;I won&amp;rsquo;t reproduce the &lt;code&gt;v1beta1&lt;/code&gt; and &lt;code&gt;v1&lt;/code&gt; examples from the Stackoverflow question as they should be self-explanatory. I suspect (!?) that I should not have used Kubernete&amp;rsquo;s (API Server&amp;rsquo;s) CA for the Webhook but it could well be that I just don&amp;rsquo;t understand the correct approach.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Webhooks</title>
      <link>https://pretired.dazwilkin.com/posts/201229/</link>
      <pubDate>Tue, 29 Dec 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201229/</guid>
      <description>&lt;p&gt;I spent some time last week writing my first &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/&#34;&gt;admission webhook&lt;/a&gt; for Kubernetes. I wrote the handler in Golang because I&amp;rsquo;m most familiar with Golang and because, as Kubernetes&amp;rsquo; native language, I was more confident that the necessary SDKs would exist and that the documentation would likely use Golang by default. I struggled to find useful documentation and so this post is to help you (and me!) remember how to do this next time!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Device Plugins</title>
      <link>https://pretired.dazwilkin.com/posts/201217/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201217/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m debugging an &lt;a href=&#34;https://github.com/deislabs/akri/issues/177&#34;&gt;issue&lt;/a&gt; with Akri &lt;code&gt;Zeroconf&lt;/code&gt; &lt;a href=&#34;https://github.com/DazWilkin/akri/tree/protocol-zeroconf&#34;&gt;protocol&lt;/a&gt; in which Instance environment variables are no longer (!) being surfaced within the Broker pods. In my adventures, it seemed useful to better understand how Akri works and specifically, how Akri uses Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/&#34;&gt;Device Plugins&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;IIUC plugins register with the Kubelet (!) via a gRPC service (&lt;code&gt;Registration&lt;/code&gt;) that the Kubelet exposes on a UNIX socket at &lt;code&gt;/var/lib/kubelet/device-plugins/kubelet.sock&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Then (!) if successful, devices should be reported by the Node&amp;rsquo;s metadata (spec) and available to be bound to Pods.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Akri</title>
      <link>https://pretired.dazwilkin.com/posts/201113/</link>
      <pubDate>Fri, 13 Nov 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201113/</guid>
      <description>&lt;p&gt;For the past couple of weeks, I&amp;rsquo;ve been playing around with &lt;a href=&#34;http://github.com/deislabs/akri&#34;&gt;Akri&lt;/a&gt;, a Microsoft (DeisLabs) project for &lt;a href=&#34;https://cloudblogs.microsoft.com/opensource/2020/10/20/announcing-akri-open-source-project-building-connected-edge-kubernetes/&#34;&gt;building a connected edge with Kubernetes&lt;/a&gt;. Kubernetes, IoT, Rust (and Golang) make this all compelling to me.&lt;/p&gt;&#xA;&lt;p&gt;Initially, I deployed an Akri &lt;a href=&#34;https://github.com/deislabs/akri/blob/main/docs/end-to-end-demo.md&#34;&gt;End-to-End&lt;/a&gt; to &lt;a href=&#34;https://microk8s.io/&#34;&gt;MicroK8s&lt;/a&gt; on Google Compute Engine (&lt;a href=&#34;https://github.com/deislabs/akri/blob/main/docs/end-to-end-demo-gce.md&#34;&gt;link&lt;/a&gt;) and Digital Ocean (&lt;a href=&#34;https://github.com/deislabs/akri/blob/main/docs/end-to-end-demo-do.md&#34;&gt;link&lt;/a&gt;). But I was interested to create me own example and so have proposed a very (!) simple &lt;a href=&#34;https://github.com/DazWilkin/akri/blob/protocol-http/docs/extensibility-http.md&#34;&gt;HTTP-based protocol&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This blog summarizes my thoughts about Akri and an explanation of the HTTP protocol implementation in the hope that this helps others.&lt;/p&gt;</description>
    </item>
    <item>
      <title>GitHub Actions &amp;&amp; GitHub Container Registry</title>
      <link>https://pretired.dazwilkin.com/posts/201029/</link>
      <pubDate>Thu, 29 Oct 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201029/</guid>
      <description>&lt;p&gt;You know when you start something and then regret it!? I think I&amp;rsquo;ll be sticking with &lt;a href=&#34;https://cloud.google.com/cloud-build&#34;&gt;Google Cloud Build&lt;/a&gt;; &lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt; appears functional and useful but I found the documentation to be confusing and limited and struggled to get a simple container image build|push working.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve long used &lt;a href=&#34;https://hub.docker.com&#34;&gt;Docker Hub&lt;/a&gt; but am planning to use it less as a result of the planned &lt;a href=&#34;https://www.docker.com/blog/scaling-docker-to-serve-millions-more-developers-network-egress/&#34;&gt;changes&lt;/a&gt;. I want to see Docker succeed and to do so it needs to find a way to make money but, there are free alternatives including the new &lt;a href=&#34;https://github.blog/2020-09-01-introducing-github-container-registry/&#34;&gt;GitHub Container Registry&lt;/a&gt; and the very very cheap &lt;a href=&#34;https://cloud.google.com/container-registry&#34;&gt;Google Container Registry&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>akri</title>
      <link>https://pretired.dazwilkin.com/posts/201022/</link>
      <pubDate>Thu, 22 Oct 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201022/</guid>
      <description>&lt;p&gt;I was very interested to read about Microsoft&amp;rsquo;s DeisLab&amp;rsquo;s latest (rust-based) Kubernetes project: &lt;a href=&#34;https://cloudblogs.microsoft.com/opensource/2020/10/20/announcing-akri-open-source-project-building-connected-edge-kubernetes/&#34;&gt;akri&lt;/a&gt;. If I understand it correctly, it provides a mechanism to make any (IoT) device accessible to containers running within a cluster. I need to spend more time playing around with it so that I can fully understand it. I had some problems getting the &lt;a href=&#34;https://github.com/deislabs/akri/blob/main/docs/end-to-end-demo.md&#34;&gt;End-to-End&lt;/a&gt; demo running on Google Compute Engine (and then I tried DigitalOcean droplet) instances. So, here&amp;rsquo;s a two-ways solution to get you going.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
