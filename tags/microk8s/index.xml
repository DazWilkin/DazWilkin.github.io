<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microk8s on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/microk8s/</link>
    <description>Recent content in Microk8s on (p)retired</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 Feb 2024 00:00:00 -0800</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/microk8s/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MicroK8s operability add-on</title>
      <link>https://pretired.dazwilkin.com/posts/240216/</link>
      <pubDate>Fri, 16 Feb 2024 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240216/</guid>
      <description>Spent time today yak-shaving which resulted in an unplanned migration from MicroK8s &amp;lsquo;prometheus&amp;rsquo; add-on to the new and not fully-documented &amp;lsquo;observability&amp;rsquo; add-on:&#xA;sudo microk8s.enable prometheus Infer repository core for addon prometheus DEPRECATION WARNING: &amp;#39;prometheus&amp;#39; is deprecated and will soon be removed. Please use &amp;#39;observability&amp;#39; instead. ... The reason for the name change is unclear.&#xA;It&amp;rsquo;s unclear whether there&amp;rsquo;s a difference in the primary components that are installed too (I&amp;rsquo;d thought Grafana wasn&amp;rsquo;t included in &amp;lsquo;prometheus&amp;rsquo;), (Grafana) Loki and (Grafana) Tempo definitely weren&amp;rsquo;t included and I don&amp;rsquo;t want them either.</description>
    </item>
    <item>
      <title>Prometheus VPA Recommendations</title>
      <link>https://pretired.dazwilkin.com/posts/210305/</link>
      <pubDate>Fri, 05 Mar 2021 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210305/</guid>
      <description>Phew!&#xA;For Want of a Nail&#xA;I was interested in learning how to Manage Resources for Containers. On the way, I learned and discovered:&#xA;kubectl top Vertical Pod Autoscaler A (valuable) digression through PodMonitor kube-state-metrics `kubectl-patch Created a Graph References Kubernetes Resources Visual Studio Code has begun to bug me (reasonably) to add resources to Kubernetes manifests.&#xA;E.g.:&#xA;resources: limits: cpu: &amp;#34;1&amp;#34; memory: &amp;#34;512Mi&amp;#34; I&amp;rsquo;ve been spending time with Deislab&amp;rsquo;s Akri and decided to determine whether Akri&amp;rsquo;s primary resources (Agent, Controller) and some of my creations HTTP Device and Discovery, were being suitably constrained.</description>
    </item>
    <item>
      <title>Dapr</title>
      <link>https://pretired.dazwilkin.com/posts/210222/</link>
      <pubDate>Mon, 22 Feb 2021 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210222/</guid>
      <description>It&amp;rsquo;s a good name, I read it as &amp;ldquo;dapper&amp;rdquo; but I frequently type &amp;ldquo;darp&amp;rdquo; :-(&#xA;Was interested to read that Dapr is now v1.0 and decided to check it out. I was initially confused between Dapr and service mesh functionality. But, having used Dapr, it appears to be more focused in aiding the development of (cloud-native) (distributed) apps by providing developers with abstractions for e.g. service discovery, eventing, observability whereas service meshes feel (!</description>
    </item>
    <item>
      <title>Kubernetes Device Plugins</title>
      <link>https://pretired.dazwilkin.com/posts/201217/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201217/</guid>
      <description>I&amp;rsquo;m debugging an issue with Akri Zeroconf protocol in which Instance environment variables are no longer (!) being surfaced within the Broker pods. In my adventures, it seemed useful to better understand how Akri works and specifically, how Akri uses Kubernetes Device Plugins.&#xA;IIUC plugins register with the Kubelet (!) via a gRPC service (Registration) that the Kubelet exposes on a UNIX socket at /var/lib/kubelet/device-plugins/kubelet.sock&#xA;Then (!) if successful, devices should be reported by the Node&amp;rsquo;s metadata (spec) and available to be bound to Pods.</description>
    </item>
    <item>
      <title>Akri</title>
      <link>https://pretired.dazwilkin.com/posts/201113/</link>
      <pubDate>Fri, 13 Nov 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201113/</guid>
      <description>For the past couple of weeks, I&amp;rsquo;ve been playing around with Akri, a Microsoft (DeisLabs) project for building a connected edge with Kubernetes. Kubernetes, IoT, Rust (and Golang) make this all compelling to me.&#xA;Initially, I deployed an Akri End-to-End to MicroK8s on Google Compute Engine (link) and Digital Ocean (link). But I was interested to create me own example and so have proposed a very (!) simple HTTP-based protocol.</description>
    </item>
    <item>
      <title>akri</title>
      <link>https://pretired.dazwilkin.com/posts/201022/</link>
      <pubDate>Thu, 22 Oct 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201022/</guid>
      <description>I was very interested to read about Microsoft&amp;rsquo;s DeisLab&amp;rsquo;s latest (rust-based) Kubernetes project: akri. If I understand it correctly, it provides a mechanism to make any (IoT) device accessible to containers running within a cluster. I need to spend more time playing around with it so that I can fully understand it. I had some problems getting the End-to-End demo running on Google Compute Engine (and then I tried DigitalOcean droplet) instances.</description>
    </item>
  </channel>
</rss>
