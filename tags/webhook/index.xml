<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Webhook on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/webhook/</link>
    <description>Recent content in Webhook on (p)retired</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Nov 2022 00:00:00 -0800</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/webhook/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>`curl`&#39;ing a Tailscale Webhook</title>
      <link>https://pretired.dazwilkin.com/posts/221114/</link>
      <pubDate>Mon, 14 Nov 2022 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/221114/</guid>
      <description>&lt;p&gt;[Tailscale] is &lt;strong&gt;really&lt;/strong&gt; good. I&amp;rsquo;ve been using it as a virtual private network to span 2 home networks and to securely (!) access my hosts when I&amp;rsquo;m remote.&lt;/p&gt;&#xA;&lt;p&gt;Recently Tailscale added &lt;a href=&#34;https://tailscale.com/kb/1213/webhooks/&#34;&gt;Webhook&lt;/a&gt; functionality to permit processing subscribed-to (Tailscale) events. I&amp;rsquo;m always a sucker for a webhook ;-)&lt;/p&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s a &lt;code&gt;curl&lt;/code&gt; command to send a test event to  a Tailscale Webhook:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;URL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# From Tailscale&amp;#39;s docs&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://tailscale.com/kb/1213/webhooks/#events-payload&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BODY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;timestamp&amp;#34;: &amp;#34;2022-09-21T13:37:51.658918-04:00&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;version&amp;#34;: 1,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;type&amp;#34;: &amp;#34;test&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;tailnet&amp;#34;: &amp;#34;example.com&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;message&amp;#34;: &amp;#34;This is a test event&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;data&amp;#34;: null&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;date +%s&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;V&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;T&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BODY&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  | openssl dgst -sha256 -hmac &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SECRET&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -hex -r &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  | head --bytes&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;64&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--request POST &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tailscale-Webhook-Signature:t=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;T&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,v1=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;V&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--data &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BODY&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;https://&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;URL&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There must be a better way of extracting the hashed value from the &lt;code&gt;openssl&lt;/code&gt; output.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Google Monitoring Alerting to send Pushover notifications</title>
      <link>https://pretired.dazwilkin.com/posts/220514/</link>
      <pubDate>Sat, 14 May 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220514/</guid>
      <description>&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#artifacts&#34;&gt;Artifacts&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#pushover&#34;&gt;Pushover&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#caveat&#34;&gt;&lt;strong&gt;Caveat&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#cloud-monitoring-webhook&#34;&gt;Cloud Monitoring Webhook&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#cloud-functions-2nd-gen&#34;&gt;Cloud Functions&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#cloud-run&#34;&gt;Cloud Run&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;artifacts&#34;&gt;Artifacts&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GitHub: &lt;a href=&#34;https://github.com/DazWilkin/go-gcp-pushover-notificationchannel&#34;&gt;&lt;code&gt;go-gcp-pushover-notificationchannel&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Image: &lt;code&gt;ghcr.io/dazwilkin/go-gcp-pushover-notificationchannel:220515&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;pushover&#34;&gt;Pushover&lt;/h2&gt;&#xA;&lt;p&gt;Logging in to your &lt;a href=&#34;https://pushover.net&#34;&gt;Pushover&lt;/a&gt; account, you will be presented with a summary|dashboard page that includes &lt;code&gt;Your User Key&lt;/code&gt;. Copy the value of this key into a variable called &lt;code&gt;PUSHOVER_USER&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pushover.net/apps/build&#34;&gt;Create New Application|API Token&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pretired.dazwilkin.com/images/220514.pushover.app.png&#34; alt=&#34;Pushover: New API Token&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Pushover &lt;a href=&#34;https://pushover.net/api&#34;&gt;API&lt;/a&gt; has a &lt;a href=&#34;https://pushover.net/api#messages&#34;&gt;Pushing Messages&lt;/a&gt; method. The documentation describes the format of the HTTP Request. It must be a &lt;code&gt;POST&lt;/code&gt; using TLS (&lt;code&gt;https://&lt;/code&gt;) to &lt;code&gt;https://api.pushover.net/1/messages.json&lt;/code&gt;. The &lt;code&gt;content-type&lt;/code&gt; should be &lt;code&gt;application/json&lt;/code&gt;. In the JSON body of the message, we must include &lt;code&gt;token&lt;/code&gt; (&lt;code&gt;PUSHOVER_TOKEN&lt;/code&gt;), &lt;code&gt;user&lt;/code&gt; (&lt;code&gt;PUSHOVER_USER_KEY&lt;/code&gt;), &lt;code&gt;device&lt;/code&gt; (we&amp;rsquo;ll use &lt;code&gt;cloud-monitoring&lt;/code&gt;) and a &lt;code&gt;title&lt;/code&gt; and a &lt;code&gt;message&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes cert-manager</title>
      <link>https://pretired.dazwilkin.com/posts/210108/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210108/</guid>
      <description>&lt;p&gt;I developed an &lt;a href=&#34;https://pretired.dazwilkin.com/posts/201229/&#34;&gt;admission webhook&lt;/a&gt; for Akri, twice (&lt;a href=&#34;https://github.com/DazWilkin/akri-webhook&#34;&gt;Golang&lt;/a&gt;, &lt;a href=&#34;https://github.com/DazWilkin/akri-webhook-rust&#34;&gt;Rust&lt;/a&gt;). I naively followed other examples for the generation of the certificates, created a 1.20 cluster and &lt;a href=&#34;https://stackoverflow.com/questions/65587904/&#34;&gt;broke&lt;/a&gt; that process.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;d briefly considered using &lt;a href=&#34;https://cert-manager.io&#34;&gt;&lt;code&gt;cert-manager&lt;/code&gt;&lt;/a&gt; recently but quickly abandoned the idea thinking it would be onerous and unnecessary complexity for little-old-me. I was wrong. It&amp;rsquo;s excellent and I recommend it highly.&lt;/p&gt;&#xA;&lt;p&gt;I won&amp;rsquo;t reproduce the &lt;code&gt;v1beta1&lt;/code&gt; and &lt;code&gt;v1&lt;/code&gt; examples from the Stackoverflow question as they should be self-explanatory. I suspect (!?) that I should not have used Kubernete&amp;rsquo;s (API Server&amp;rsquo;s) CA for the Webhook but it could well be that I just don&amp;rsquo;t understand the correct approach.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Webhooks</title>
      <link>https://pretired.dazwilkin.com/posts/201229/</link>
      <pubDate>Tue, 29 Dec 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201229/</guid>
      <description>&lt;p&gt;I spent some time last week writing my first &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/&#34;&gt;admission webhook&lt;/a&gt; for Kubernetes. I wrote the handler in Golang because I&amp;rsquo;m most familiar with Golang and because, as Kubernetes&amp;rsquo; native language, I was more confident that the necessary SDKs would exist and that the documentation would likely use Golang by default. I struggled to find useful documentation and so this post is to help you (and me!) remember how to do this next time!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
