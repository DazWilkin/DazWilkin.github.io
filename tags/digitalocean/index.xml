<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Digitalocean on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/digitalocean/</link>
    <description>Recent content in Digitalocean on (p)retired</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 May 2023 00:00:00 -0700</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/digitalocean/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deploying Hugo site to DigitalOcean Apps</title>
      <link>https://pretired.dazwilkin.com/posts/230502/</link>
      <pubDate>Tue, 02 May 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230502/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been running a &lt;a href=&#34;https://www.digitalocean.com/go/app-platform?&#34;&gt;DigitalOcean Apps&lt;/a&gt; static site for Hugo using the &lt;a href=&#34;https://docs.digitalocean.com/products/app-platform/reference/buildpacks/hugo/&#34;&gt;Hugo Buildpack&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve migrated a set of Hugo sites to use &lt;a href=&#34;https://gohugo.io/hugo-modules/&#34;&gt;Hugo Modules&lt;/a&gt; which includes the addition of &lt;code&gt;go.mod&lt;/code&gt; (and &lt;code&gt;go.sum&lt;/code&gt;) files to the Hugo project in order to manage e.g. themes.&lt;/p&gt;&#xA;&lt;p&gt;Unfortunately, the Hugo Buildpack used by DigitalOcean Apps does not support Hugo Modules. DigitalOcean support recommended that I switch to use a &lt;a href=&#34;https://docs.digitalocean.com/products/app-platform/reference/dockerfile/&#34;&gt;build with a Dockerfile&lt;/a&gt;. Unfortunately (!) the recommended Hugo container image (&lt;a href=&#34;https://hub.docker.com/r/klakegg/hugo&#34;&gt;&lt;code&gt;klakegg/hugo&lt;/code&gt;&lt;/a&gt;) is outdated (0.107.0). The current version is &lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.111.3&#34;&gt;&lt;code&gt;0.111.3&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Exporters for fly.io and Vultr</title>
      <link>https://pretired.dazwilkin.com/posts/220520/</link>
      <pubDate>Fri, 20 May 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220520/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been on a roll building utilities this week. I developed a Service Health dashboard for my &amp;ldquo;thing&amp;rdquo;, a &lt;a href=&#34;https://github.com/DazWilkin/fly-exporter&#34;&gt;Prometheus Exporter for Fly.io&lt;/a&gt; and today, a &lt;a href=&#34;https://github.com/DazWilkin/vultr-exporter&#34;&gt;Prometheus Exporter for Vultr&lt;/a&gt;. This is motivated by the fear that I will forget a deployed Cloud resource and incur a horrible bill.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve no written several Prometheus Exporters for cloud platforms:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/gcp-exporter&#34;&gt;Prometheus Exporter for GCP&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/linode-exporter&#34;&gt;Prometheus Exporter for Linode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/fly-exporter&#34;&gt;Prometheus Exporter for Fly.io&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/vultr-exporter&#34;&gt;Prometheus Exporter for Vultr&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Each of them monitors resource deployments and produces resource count metrics that can be scraped by Prometheus and alerted with Alertmanager. I have Alertmanager &lt;a href=&#34;https://prometheus.io/docs/alerting/latest/configuration/#pushover_config&#34;&gt;configured&lt;/a&gt; to send notifications to &lt;a href=&#34;https://pushover.net&#34;&gt;Pushover&lt;/a&gt;. Last week I wrote an integration between &lt;a href=&#34;https://pretired.dazwilkin.com/posts/220514/&#34;&gt;Google Cloud Monitoring to send notifications to Pushover&lt;/a&gt; too.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Krustlet on DO Managed Kubernetes</title>
      <link>https://pretired.dazwilkin.com/posts/210122/</link>
      <pubDate>Fri, 22 Jan 2021 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210122/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve spent time this week returning to the interesting Deislabs project &lt;a href=&#34;https://github.com/deislabs/krustlet&#34;&gt;Krustlet&lt;/a&gt;. Since the last time, the bootstrapping process has been simplified using Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/&#34;&gt;Bootstrap Tokens&lt;/a&gt;. I know this updated process &lt;a href=&#34;https://github.com/deislabs/krustlet/blob/master/docs/howto/krustlet-on-microk8s.md&#34;&gt;works&lt;/a&gt; with &lt;a href=&#34;https://microk8s.io&#34;&gt;MicroK8s&lt;/a&gt;. Unfortunately, I&amp;rsquo;m struggling with it on &lt;a href=&#34;cloud.google.com/kubernetes-engine&#34;&gt;GKE&lt;/a&gt; and thought I&amp;rsquo;d try DigitalOcean Managed Kubernetes.&lt;/p&gt;&#xA;&lt;p&gt;It worked first time!&lt;/p&gt;&#xA;&lt;p&gt;In the following, we run both the Kubernetes cluster and the Krustlet Droplet on DigitalOcean but, as long as the cluster and the VM are able to communicate with one another, you should be able to run these anywhere.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploying a Rust HTTP server to DigitalOcean App Platform</title>
      <link>https://pretired.dazwilkin.com/posts/201008/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201008/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://digitalocean.com&#34;&gt;DigitalOcean&lt;/a&gt; launched an &lt;a href=&#34;https://www.digitalocean.com/blog/introducing-digitalocean-app-platform-reimagining-paas-to-make-it-simpler-for-you-to-build-deploy-and-scale-apps&#34;&gt;App Platform&lt;/a&gt; with many &lt;a href=&#34;https://www.digitalocean.com/docs/app-platform/languages-frameworks/&#34;&gt;Supported Languages and Frameworks&lt;/a&gt;. I used &lt;a href=&#34;https://www.digitalocean.com/docs/app-platform/languages-frameworks/go/&#34;&gt;Golang&lt;/a&gt; first, then wondered how to use non-natively-supported languages, i.e. Rust.&lt;/p&gt;&#xA;&lt;p&gt;The good news is that &lt;a href=&#34;https://www.digitalocean.com/docs/app-platform/languages-frameworks/docker/&#34;&gt;Docker&lt;/a&gt; is a supported framework and so, you can run pretty much anything.&lt;/p&gt;&#xA;&lt;p&gt;Repo: &lt;a href=&#34;https://github.com/DazWilkin/do-apps-rust&#34;&gt;https://github.com/DazWilkin/do-apps-rust&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;rust&#34;&gt;Rust&lt;/h2&gt;&#xA;&lt;p&gt;I&amp;rsquo;m a Rust noob. I&amp;rsquo;m always receptive to feedback on improvements to the code. I looked to mirror the Golang example. I&amp;rsquo;m using &lt;a href=&#34;https://crates.io/crates/rocket&#34;&gt;rocket&lt;/a&gt; and &lt;a href=&#34;https://crates.io/crates/rocket-prometheus&#34;&gt;rocket-prometheus&lt;/a&gt; for the first time:&lt;/p&gt;&#xA;&lt;p&gt;You will want to install rust nightly (as Rocket has a dependency that requires it) and then you can override the default toolchain for the current project using:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
