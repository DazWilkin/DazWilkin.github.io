<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Container Registry on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/container-registry/</link>
    <description>Recent content in Container Registry on (p)retired</description>
    <generator>Hugo 0.125.0-DEV</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 07 Feb 2020 00:00:00 -0800</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/container-registry/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Accessing GCR repos from Kubernetes</title>
      <link>https://pretired.dazwilkin.com/posts/200207/</link>
      <pubDate>Fri, 07 Feb 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200207/</guid>
      <description>Until today, I&amp;rsquo;d not accessed a Google Container Registry repo from a non-GKE Kubernetes deployment.&#xA;It turns out that it&amp;rsquo;s pretty well-documented (link) but, here&amp;rsquo;s an end-end example.&#xA;Assuming:&#xA;BILLING=[[YOUR-BILLING]] PROJECT=[[YOUR-PROJECT]] SERVER=&amp;#34;us.gcr.io&amp;#34; If not already:&#xA;gcloud projects create {$PROJECT} gcloud beta billing projects link ${PROJECT} \ --billing-account=${BILLING} gcloud services enable containerregistry.googleapis.com \ --project=${PROJECT} Container Registry IMAGE=&amp;#34;busybox&amp;#34; # Or ... docker pull ${IMAGE} docker tag \ ${IMAGE} \ ${SERVER}/${PROJECT}/${IMAGE} docker push ${SERVER}/${PROJECT}/${IMAGE} gcloud container images list-tags ${SERVER}/${PROJECT}/${IMAGE} Service Account Create a service account that&amp;rsquo;s permitted to download (read-only) images from this project&amp;rsquo;s registry</description>
    </item>
  </channel>
</rss>
