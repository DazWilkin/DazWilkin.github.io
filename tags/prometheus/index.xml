<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Prometheus on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/prometheus/</link>
    <description>Recent content in Prometheus on (p)retired</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Feb 2025 00:00:00 -0800</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/prometheus/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Prometheus Exporter for USGS Water Data service</title>
      <link>https://pretired.dazwilkin.com/posts/250227/</link>
      <pubDate>Thu, 27 Feb 2025 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250227/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m a little obsessed with creating Prometheus Exporters:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/azure-exporter&#34;&gt;Prometheus Exporter for Azure&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/crtsh-exporter&#34;&gt;Prometheus Exporter for crt.sh&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/fly-exporter&#34;&gt;Prometheus Exporter for Fly.io&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/goatcounter-exporter&#34;&gt;Prometheus Exporter for GoatCounter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/gcp-exporter&#34;&gt;Prometheus Exporter for Google Cloud&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/koyeb-exporter&#34;&gt;Prometheus Exporter for Koyeb&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/linode-exporter&#34;&gt;Prometheus Exporter for Linode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/porkbun-exporter&#34;&gt;Prometheus Exporter for PorkBun&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/updown-exporter&#34;&gt;Prometheus Exporter for updown.io&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/vultr-exporter&#34;&gt;Prometheus Exporter for Vultr&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;All of these were written to scratch an itch.&lt;/p&gt;&#xA;&lt;p&gt;In the case of the cloud platform exporters (Azure, Fly, Google, Linode, Vultr etc.), it&amp;rsquo;s an overriding anxiety that I&amp;rsquo;ll leave resources deployed on these platforms and, running an exporter that ships alerts to &lt;a href=&#34;https://pushover.net/&#34;&gt;Pushover&lt;/a&gt; and Gmail, provides me a support mechanism for me.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Protobufs and Native Histograms</title>
      <link>https://pretired.dazwilkin.com/posts/240307/</link>
      <pubDate>Thu, 07 Mar 2024 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240307/</guid>
      <description>&lt;p&gt;I responded to a question &lt;a href=&#34;https://stackoverflow.com/questions/78112323/prometheus-metric-protocol-buffer-in-grpc#comment137716337_78112323&#34;&gt;Prometheus metric protocol buffer in gRPC&lt;/a&gt; on Stackoverflow and it piqued my curiosity and got me yak shaving.&lt;/p&gt;&#xA;&lt;p&gt;Prometheus used to support two exposition formats including Protocol Buffers, then dropped Protocol Buffer and has since re-added it (see &lt;a href=&#34;https://github.com/prometheus/docs/blob/main/content/docs/instrumenting/exposition_formats.md#protobuf-format&#34;&gt;Protobuf format&lt;/a&gt;). The Protobuf format has returned to support the experimental &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/feature_flags/#native-histograms&#34;&gt;Native Histograms&lt;/a&gt; feature.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m interested in adding Native Histogram support to &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt; so thought I&amp;rsquo;d learn more about this metric.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Capturing e.g. CronJob metrics with GMP</title>
      <link>https://pretired.dazwilkin.com/posts/240104/</link>
      <pubDate>Thu, 04 Jan 2024 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240104/</guid>
      <description>&lt;p&gt;The deployment of &lt;a href=&#34;https://cloud.google.com/stackdriver/docs/managed-prometheus/exporters/kube_state_metrics&#34;&gt;Kube State Metrics&lt;/a&gt; for Google Managed Prometheus creates both a &lt;code&gt;PodMonitoring&lt;/code&gt; and &lt;code&gt;ClusterPodMonitoring&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;code&gt;PodMonitoring&lt;/code&gt; resource exposes metrics published on &lt;code&gt;metric-self&lt;/code&gt; port (8081).&lt;/p&gt;&#xA;&lt;p&gt;The &lt;code&gt;ClusterPodMonitoring&lt;/code&gt; exposes metrics published on &lt;code&gt;metric&lt;/code&gt; port (8080) &lt;strong&gt;but&lt;/strong&gt; this doesn&amp;rsquo;t include &lt;code&gt;cronjob&lt;/code&gt;-related metrics:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get clusterpodmonitoring/kube-state-metrics &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--output&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{.spec.endpoints[0].metricRelabeling}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;| jq -r .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JSON&#34; data-lang=&#34;JSON&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;action&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;keep&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;regex&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kube_(daemonset|deployment|replicaset|pod|namespace|node|statefulset|persistentvolume|horizontalpodautoscaler|job_created)(_.+)?&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sourceLabels&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__name__&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; The &lt;code&gt;regex&lt;/code&gt; does &lt;strong&gt;not&lt;/strong&gt; include &lt;code&gt;kube_cronjob&lt;/code&gt; and only includes &lt;code&gt;kube_job_created&lt;/code&gt; patterns.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Operator support an auth proxy for Service Discovery</title>
      <link>https://pretired.dazwilkin.com/posts/231018/</link>
      <pubDate>Wed, 18 Oct 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/231018/</guid>
      <description>&lt;p&gt;CRD &lt;a href=&#34;https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/user-guides/linting.md&#34;&gt;linting&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Returning to yesterday&amp;rsquo;s failing tests, it&amp;rsquo;s unclear how to introspect the E2E tests.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get namespaces&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NAME                      STATUS   AGE&#xA;...&#xA;allns-s2os2u-0-90f56669   Active   22h&#xA;allns-s2qhuw-0-6b33d5eb   Active   4m23s&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get all &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--namespace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;allns-s2os2u-0-90f56669&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;No resources found in allns-s2os2u-0-90f56669 namespace.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get all &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--namespace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;allns-s2qhuw-0-6b33d5eb&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NAME                                                        READY   STATUS             RESTARTS   AGE&#xA;pod/prometheus-operator-6c96477b9c-q6qm2                    1/1     Running            0          4m12s&#xA;pod/prometheus-operator-admission-webhook-68bc9f885-nq6r8   0/1     ImagePullBackOff   0          4m7s&#xA;&#xA;NAME                          TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE&#xA;service/prometheus-operator   ClusterIP   10.152.183.247   &amp;lt;none&amp;gt;        443/TCP   4m9s&#xA;&#xA;NAME                                                    READY   UP-TO-DATE   AVAILABLE   AGE&#xA;deployment.apps/prometheus-operator                     1/1     1            1           4m12s&#xA;deployment.apps/prometheus-operator-admission-webhook   0/1     1            0           4m7s&#xA;&#xA;NAME                                                              DESIRED   CURRENT   READY   AGE&#xA;replicaset.apps/prometheus-operator-6c96477b9c                    1         1         1       4m13s&#xA;replicaset.apps/prometheus-operator-admission-webhook-68bc9f885   1         1         0       4m8s&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl logs deployment/prometheus-operator-admission-webhook &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--namespace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;allns-s2qhuw-0-6b33d5eb&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Error from server (BadRequest): container &amp;#34;prometheus-operator-admission-webhook&amp;#34; in pod &amp;#34;prometheus-operator-admission-webhook-68bc9f885-nq6r8&amp;#34; is waiting to start: trying and failing to pull image&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prometheus-operator-admission-webhook&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FILTER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{.spec.template.spec.containers[?(@.name==\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;NAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;\&amp;#34;)].image}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get deployment/prometheus-operator-admission-webhook &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--namespace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;allns-s2qjz2-0-fad82c03 &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--output&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;FILTER&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;quay.io/prometheus-operator/admission-webhook:52d1e55af&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Want:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Operator support an auth proxy for Service Discovery</title>
      <link>https://pretired.dazwilkin.com/posts/231017/</link>
      <pubDate>Tue, 17 Oct 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/231017/</guid>
      <description>&lt;p&gt;For &lt;code&gt;ackalctld&lt;/code&gt; to be deployable to Kubernetes with &lt;a href=&#34;github.com/prometheus-operator/prometheus-operator&#34;&gt;Prometheus Operator&lt;/a&gt;, it is necessary to &lt;a href=&#34;https://github.com/prometheus-operator/prometheus-operator/issues/5966&#34;&gt;Enable &lt;code&gt;ScrapeConfig&lt;/code&gt; to use (discovery|target) proxies #5966&lt;/a&gt;. While I&amp;rsquo;m familiar with Kubernetes, Kubernetes operators (&lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt; uses one built with the &lt;a href=&#34;&#34;&gt;Operator SDK&lt;/a&gt;) and &lt;a href=&#34;https://sdk.operatorframework.io/&#34;&gt;Prometheus Operator&lt;/a&gt;, I&amp;rsquo;m unfamiliar with developing Prometheus Operator. This (and subsequent) posts will document some preliminary work on this.&lt;/p&gt;&#xA;&lt;p&gt;Cloned &lt;a href=&#34;github.com/prometheus-operator/prometheus-operator&#34;&gt;Prometheus Operator&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Branched &lt;code&gt;scrape-config-url-proxy&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m unsure how to effect these changes and unsure whether documentation exists.&lt;/p&gt;&#xA;&lt;p&gt;Clearly, I will need to revise the &lt;code&gt;ScrapeConfig&lt;/code&gt; CRD to add the &lt;code&gt;proxy_url&lt;/code&gt; fields (one &lt;code&gt;proxy_url&lt;/code&gt; defines a proxy for the Service Discovery endpoint; the second defines a proxy for the targets themselves) and it would be useful for this to closely mirror the existing &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/http_sd/&#34;&gt;Prometheus HTTP Service Discovery&lt;/a&gt; use, namely &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/configuration/configuration/#http_sd_config&#34;&gt;&lt;code&gt;,http_sd_config&amp;gt;&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Operator `ScrapeConfig`</title>
      <link>https://pretired.dazwilkin.com/posts/231013/</link>
      <pubDate>Fri, 13 Oct 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/231013/</guid>
      <description>&lt;p&gt;TL;DR &lt;a href=&#34;https://github.com/prometheus-operator/prometheus-operator/issues/5966#issuecomment-1754317247&#34;&gt;Enable &lt;code&gt;ScrapeConfig&lt;/code&gt; to use (discovery|target) proxies&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve developed a companion, local daemon (called &lt;code&gt;ackalctld&lt;/code&gt;) for &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt; that provides a functionally close version of the service.&lt;/p&gt;&#xA;&lt;p&gt;One way to deploy &lt;code&gt;ackalctld&lt;/code&gt; is to use Kubernetes and it would be convenient if the Prometheus metrics were scrapeable by &lt;a href=&#34;https://github.com/prometheus-operator/prometheus-operator&#34;&gt;Prometheus Operator&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In order for this to work, Prometheus Operator needs to be able to scrape Google &lt;a href=&#34;https://cloud.google.com/run&#34;&gt;Cloud Run&lt;/a&gt; targets because &lt;code&gt;ackalctld&lt;/code&gt; creates Cloud Run services for its health check clients.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Exporter for Koyeb</title>
      <link>https://pretired.dazwilkin.com/posts/230709/</link>
      <pubDate>Sun, 09 Jul 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230709/</guid>
      <description>&lt;p&gt;Yet another cloud platform exporter for resource|cost management. This time for &lt;a href=&#34;https://www.koyeb.com/&#34;&gt;Koyeb&lt;/a&gt; with &lt;a href=&#34;https://github.com/DazWilkin/koyeb-exporter&#34;&gt;Koyeb Exporter&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Deploying resources to cloud platforms generally incurs cost based on the number of resources deployed, the time each resource is deployed and the cost (per period of time) that the resource is deployed. It is useful to be able to automatically measure and alert on all the resources deployed on all the platforms that you&amp;rsquo;re using and this is an intent of these exporters.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Robusta KRR w/ GMP</title>
      <link>https://pretired.dazwilkin.com/posts/230427/</link>
      <pubDate>Thu, 27 Apr 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230427/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been spending time recently optimizing &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt;&amp;rsquo;s use of Google &lt;a href=&#34;https://cloud.google.com/logging&#34;&gt;Cloud Logging&lt;/a&gt; and &lt;a href=&#34;https://cloud.google.com/monitoring&#34;&gt;Cloud Monitoring&lt;/a&gt; in posts:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pretired.dazwilkin.com/posts/230413/&#34;&gt;Filtering metrics w/ Google Managed Prometheus&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pretired.dazwilkin.com/posts/230419/&#34;&gt;Kubernetes metrics, metrics everywhere&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pretired.dazwilkin.com/posts/230425/&#34;&gt;Google Metric Diagnostics and Metric Data Ingested&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Yesterday, I read that &lt;a href=&#34;https://home.robusta.dev/&#34;&gt;Robusta&lt;/a&gt; has a new open source project &lt;a href=&#34;https://github.com/robusta-dev/krr&#34;&gt;Kubernetes Resource Recommendations (KRR)&lt;/a&gt; so I took some time to evaluate it.&lt;/p&gt;&#xA;&lt;p&gt;This post describes the changes I had to make to get KRR working with &lt;a href=&#34;https://cloud.google.com/stackdriver/docs/managed-prometheus&#34;&gt;Google Managed Prometheus (GMP)&lt;/a&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Metric Diagnostics and Metric Data Ingested</title>
      <link>https://pretired.dazwilkin.com/posts/230425/</link>
      <pubDate>Tue, 25 Apr 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230425/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been on an efficiency drive with &lt;a href=&#34;https://cloud.google.com/logging&#34;&gt;Cloud Logging&lt;/a&gt; and &lt;a href=&#34;https://cloud.google.com/monitoring&#34;&gt;Cloud Monitoring&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;With regards Cloud Logging, I&amp;rsquo;m contemplating (!) eliminating almost all log storage. As it is I&amp;rsquo;ve buzz cut log storage with a &lt;code&gt;_Default&lt;/code&gt; sink that has comprehensive sets of &lt;code&gt;NOT LOG_ID(X)&lt;/code&gt; inclusion and exclusion filters. As I was doing so, I began to wonder why I need to pay for the storage of much logging. There&amp;rsquo;s the comfort from knowing that everything you may ever need is being logged (at least for 30 days) but there&amp;rsquo;s also the costs that that entails. I use logs exclusively for debugging which got me thinking, couldn&amp;rsquo;t I just capture logs when I&amp;rsquo;m debugging (rather thna all the time?). I&amp;rsquo;ve not taken that leap yet but I&amp;rsquo;m noodling on it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Exporter for Azure (Container Apps)</title>
      <link>https://pretired.dazwilkin.com/posts/230420/</link>
      <pubDate>Thu, 20 Apr 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230420/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve written Prometheus Exporters for various cloud platforms. My motivation for writing these Exporters is that I want a unified mechanism to track my usage of these platform&amp;rsquo;s services. It&amp;rsquo;s easy to deploy a service on a platform and inadvertently leave it running (up a bill). The set of exporters is:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/azure-exporter&#34;&gt;Prometheus Exporter for Azure&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/fly-exporter&#34;&gt;Prometheus Exporter for Fly.io&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/gcp-exporter&#34;&gt;Prometheus Exporter for GCP&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/linode-exporter&#34;&gt;Prometheus Exporter for Linode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/vultr-exporter&#34;&gt;Prometheus Exporter for Vultr&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This post describes the recently-added Azure Exporter which only provides metrics for Container Apps and Resource Groups.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes metrics, metrics everywhere</title>
      <link>https://pretired.dazwilkin.com/posts/230419/</link>
      <pubDate>Wed, 19 Apr 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230419/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been tinkering with ways to &amp;ldquo;unit-test&amp;rdquo; my assumptions when using cloud platforms. I recently wrote about good posts by Google describing achieving cost savings with Cloud Monitoring and Cloud Logging:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/blog/products/management-tools/learn-to-understand-and-reduce-cloud-monitoring-costs/&#34;&gt;How to identify and reduce costs of your Google Cloud observability in Cloud Monitoring&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/blog/topics/cost-management/how-to-approach-cloud-logging-pricing-for-cloud-admins&#34;&gt;Cloud Logging pricing for Cloud Admins: How to approach it &amp;amp; save cost&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;With Cloud Monitoring, I&amp;rsquo;ve restricted the &lt;code&gt;prometheus.googleapis.com&lt;/code&gt; metrics that are being ingested but realized I wanted to track the number of Pods (and Containers) deployed to a GKE cluster.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Filtering metrics w/ Google Managed Prometheus</title>
      <link>https://pretired.dazwilkin.com/posts/230413/</link>
      <pubDate>Thu, 13 Apr 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230413/</guid>
      <description>&lt;p&gt;Google has published two, very good blog posts on cost management:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/blog/products/management-tools/learn-to-understand-and-reduce-cloud-monitoring-costs/&#34;&gt;How to identify and reduce costs of your Google Cloud observability in Cloud Monitoring&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/blog/topics/cost-management/how-to-approach-cloud-logging-pricing-for-cloud-admins&#34;&gt;Cloud Logging pricing for Cloud Admins: How to approach it &amp;amp; save cost&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This post is about my application cost reductions for Cloud Monitoring for &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m pleased with &lt;a href=&#34;https://cloud.google.com/stackdriver/docs/managed-prometheus&#34;&gt;Google Cloud Managed Service for Prometheus&lt;/a&gt; (hereinafter GMP). I&amp;rsquo;ve a strong preference for letting service providers run components of &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt; that I consider important but non-differentiating.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Operators</title>
      <link>https://pretired.dazwilkin.com/posts/230310/</link>
      <pubDate>Fri, 10 Mar 2023 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230310/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt; uses a Kubernetes Operator to orchestrate the lifecycle of its health checks. Ackal&amp;rsquo;s Operator is written in Go using &lt;a href=&#34;https://github.com/kubernetes-sigs/kubebuilder&#34;&gt;&lt;code&gt;kubebuilder&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Yesterday, my interest was piqued by a &lt;a href=&#34;https://metalbear.co&#34;&gt;MetalBear&lt;/a&gt; blog post &lt;a href=&#34;https://metalbear.co/blog/writing-a-kubernetes-operator/&#34;&gt;Writing a Kubernetes Operator [in Rust]&lt;/a&gt;. I spent some time reimplementing one of Ackal&amp;rsquo;s CRDs (&lt;code&gt;Check&lt;/code&gt;) using &lt;a href=&#34;https://github.com/kube-rs/kube&#34;&gt;&lt;code&gt;kube-rs&lt;/code&gt;&lt;/a&gt; and not only refreshed my Rust knowledge but learned a bunch more about Kubernetes and Operators.&lt;/p&gt;&#xA;&lt;p&gt;While rummaging around the Kubernetes documentation, I discovered flant&amp;rsquo;s &lt;a href=&#34;https://github.com/flant/shell-operator&#34;&gt;&lt;code&gt;Shell-operator&lt;/code&gt;&lt;/a&gt; and spent some time today exploring its potential.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Authenticate PromLens to Google Managed Prometheus</title>
      <link>https://pretired.dazwilkin.com/posts/230104/</link>
      <pubDate>Wed, 04 Jan 2023 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230104/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m using &lt;a href=&#34;https://cloud.google.com/stackdriver/docs/managed-prometheus&#34;&gt;Google Managed Service for Prometheus (GMP)&lt;/a&gt; and liking it.&lt;/p&gt;&#xA;&lt;p&gt;Sometime ago, I tried using &lt;a href=&#34;https://promlens.com/&#34;&gt;PromLens&lt;/a&gt; with GMP but GMP&amp;rsquo;s Prometheus HTTP API endpoint requires auth and I&amp;rsquo;ve battled Prometheus&amp;rsquo; somewhat limited auth mechanism before (&lt;a href=&#34;https://pretired.dazwilkin.com/posts/211005/&#34;&gt;Scraping metrics exposed by Google Cloud Run services that require authentication&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;p&gt;Listening to &lt;a href=&#34;https://promcon.io/2022-munich/schedule/&#34;&gt;PromCon EU 2022&lt;/a&gt; videos, I learned that PromLens has been &lt;a href=&#34;https://promlabs.com/blog/2022/10/25/promlabs-and-chronosphere-open-source-the-promlens-query-builder&#34;&gt;open sourced&lt;/a&gt; and contributed to the Prometheus project. Eventually, the functionality of PromLens should be combined into the Prometheus UI.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Exporters for fly.io and Vultr</title>
      <link>https://pretired.dazwilkin.com/posts/220520/</link>
      <pubDate>Fri, 20 May 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220520/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been on a roll building utilities this week. I developed a Service Health dashboard for my &amp;ldquo;thing&amp;rdquo;, a &lt;a href=&#34;https://github.com/DazWilkin/fly-exporter&#34;&gt;Prometheus Exporter for Fly.io&lt;/a&gt; and today, a &lt;a href=&#34;https://github.com/DazWilkin/vultr-exporter&#34;&gt;Prometheus Exporter for Vultr&lt;/a&gt;. This is motivated by the fear that I will forget a deployed Cloud resource and incur a horrible bill.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve no written several Prometheus Exporters for cloud platforms:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/gcp-exporter&#34;&gt;Prometheus Exporter for GCP&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/linode-exporter&#34;&gt;Prometheus Exporter for Linode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/fly-exporter&#34;&gt;Prometheus Exporter for Fly.io&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/vultr-exporter&#34;&gt;Prometheus Exporter for Vultr&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Each of them monitors resource deployments and produces resource count metrics that can be scraped by Prometheus and alerted with Alertmanager. I have Alertmanager &lt;a href=&#34;https://prometheus.io/docs/alerting/latest/configuration/#pushover_config&#34;&gt;configured&lt;/a&gt; to send notifications to &lt;a href=&#34;https://pushover.net&#34;&gt;Pushover&lt;/a&gt;. Last week I wrote an integration between &lt;a href=&#34;https://pretired.dazwilkin.com/posts/220514/&#34;&gt;Google Cloud Monitoring to send notifications to Pushover&lt;/a&gt; too.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus HTTP Service Discovery of Cloud Run services</title>
      <link>https://pretired.dazwilkin.com/posts/220225/</link>
      <pubDate>Fri, 25 Feb 2022 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220225/</guid>
      <description>&lt;p&gt;Some time ago, I wrote about using &lt;a href=&#34;https://pretired.dazwilkin.com/posts/210419/&#34;&gt;Prometheus Service Discovery w/ Consul for Cloud Run&lt;/a&gt; and also &lt;a href=&#34;https://pretired.dazwilkin.com/posts/211005/&#34;&gt;Scraping metrics exposed by Google Cloud Run services that require authentication&lt;/a&gt;. Both solutions remain viable but they didn&amp;rsquo;t address another use case for Prometheus and Cloud Run services that I have with a &amp;ldquo;thing&amp;rdquo; that I&amp;rsquo;ve been building.&lt;/p&gt;&#xA;&lt;p&gt;In this scenario, I want to:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Configure Prometheus to scrape Cloud Run service metrics&lt;/li&gt;&#xA;&lt;li&gt;Discover Cloud Run services dynamically&lt;/li&gt;&#xA;&lt;li&gt;Authenticate to Cloud Run using Firebase Auth ID tokens&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;These requirements and &amp;ndash; one other &amp;ndash; present several challenges:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scraping metrics exposed by Google Cloud Run services that require authentication</title>
      <link>https://pretired.dazwilkin.com/posts/211005/</link>
      <pubDate>Tue, 05 Oct 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/211005/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve written a solution (&lt;a href=&#34;https://github.com/DazWilkin/gcp-oidc-token-proxy&#34;&gt;&lt;code&gt;gcp-oidc-token-proxy&lt;/code&gt;&lt;/a&gt;) that can be used in conjunction with Prometheus &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/configuration/configuration/#oauth2&#34;&gt;OAuth2&lt;/a&gt; to authenticate requests so that Prometheus can scrape metrics exposed by e.g. Cloud Run services that require authentication. The solution resulted from my &lt;a href=&#34;https://stackoverflow.com/questions/69411584/is-there-a-way-to-configure-prometheus-to-use-a-google-service-account-to-auth&#34;&gt;question&lt;/a&gt; on Stack overflow.&lt;/p&gt;&#xA;&lt;p&gt;Problem #1: Endpoint requires authentication&lt;/p&gt;&#xA;&lt;p&gt;Given a Cloud Run service URL for which:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ENDPOINT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;my-server-blahblah-wl.a.run.app&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Returns 200 when authentication w/ an ID token&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TOKEN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;gcloud auth print-identity-token&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--silent &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--request GET &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authorization: Bearer &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;TOKEN&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--write-out &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%{response_code}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--output /dev/null &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;https://&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ENDPOINT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/metrics&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Returns 403 otherwise&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--silent &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--request GET &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--write-out &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%{response_code}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--output /dev/null &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;https://&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;ENDPOINT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/metrics&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Problem #2: Prometheus &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/configuration/configuration/#oauth2&#34;&gt;OAuth2&lt;/a&gt; configuration is constrained&lt;/p&gt;</description>
    </item>
    <item>
      <title>Consul discovers Google Cloud Run</title>
      <link>https://pretired.dazwilkin.com/posts/210520/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210520/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve written a basic &lt;code&gt;discoverer&lt;/code&gt; of Google &lt;a href=&#34;https://cloud.google.com/run&#34;&gt;Cloud Run&lt;/a&gt; services. This is for a project and it extends work done in some previous posts to &lt;a href=&#34;https://pretired.dazwilkin.com/posts/210519/&#34;&gt;Multiplex gRPC and Prometheus with Cloud Run&lt;/a&gt; and to use &lt;a href=&#34;https://pretired.dazwilkin.com/posts/210419/&#34;&gt;Consul for Prometheus service discovery&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This solution:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Accepts a set of Google Cloud Platform (GCP) projects&lt;/li&gt;&#xA;&lt;li&gt;Trawls them for Cloud Run services&lt;/li&gt;&#xA;&lt;li&gt;Assumes that the services expose Prometheus metrics on &lt;code&gt;:443/metrics&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Relabels the services&lt;/li&gt;&#xA;&lt;li&gt;Surfaces any discovered Cloud Run services&amp;rsquo; metrics in Prometheus&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You&amp;rsquo;ll need Docker and Docker Compose.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Multiplexing gRPC and HTTP (Prometheus) endpoints with Cloud Run</title>
      <link>https://pretired.dazwilkin.com/posts/210519/</link>
      <pubDate>Wed, 19 May 2021 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210519/</guid>
      <description>&lt;p&gt;Google &lt;a href=&#34;https://cloud.google.com/run&#34;&gt;Cloud Run&lt;/a&gt; is useful but, each service is limited to exposing a single port. This caused me problems with a gRPC service that serves (non-gRPC) Prometheus metrics because customarily, you would serve gRPC on one port and the Prometheus metrics on another.&lt;/p&gt;&#xA;&lt;p&gt;Fortunately, &lt;a href=&#34;https://github.com/soheilhy/cmux&#34;&gt;cmux&lt;/a&gt; provides a solution by providing a mechanism that multiplexes both services (gRPC and HTTP) on a single port!&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; See the cmux &lt;a href=&#34;https://github.com/soheilhy/cmux#limitations&#34;&gt;Limitations&lt;/a&gt; and use:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;grpcl&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;MatchWithWriters&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;cmux&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;HTTP2MatchHeaderFieldSendSettings&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content-type&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;application/grpc&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Extending the &lt;a href=&#34;https://github.com/soheilhy/cmux#how-to&#34;&gt;example&lt;/a&gt; from the cmux repo:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus Service Discovery w/ Consul for Cloud Run</title>
      <link>https://pretired.dazwilkin.com/posts/210419/</link>
      <pubDate>Mon, 19 Apr 2021 00:00:09 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210419/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m working on a project that will programmatically create Google &lt;a href=&#34;https://cloud.google.com/run&#34;&gt;Cloud Run&lt;/a&gt; services and I want to be able to dynamically discover these services using Prometheus.&lt;/p&gt;&#xA;&lt;p&gt;This is one solution.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Google Cloud Run is the service I&amp;rsquo;m using, but the principle described herein applies to any runtime service that you&amp;rsquo;d wish to use.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Why is this challenging? IIUC, it&amp;rsquo;s primarily because Prometheus has a limited set of plugins for service discovery, see the sections that include &lt;code&gt;_sd_&lt;/code&gt; in Prometheus &lt;a href=&#34;https://prometheus.io/docs/prometheus/latest/configuration/configuration/&#34;&gt;Configuration&lt;/a&gt; documentation. Unfortunately, Cloud Run is not explicitly supported. The alternative appears to be to use file-based discovery but this seems &amp;lsquo;challenging&amp;rsquo;; it requires, for example, reloading Prometheus on file changes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus VPA Recommendations</title>
      <link>https://pretired.dazwilkin.com/posts/210305/</link>
      <pubDate>Fri, 05 Mar 2021 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210305/</guid>
      <description>&lt;p&gt;Phew!&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/For_Want_of_a_Nail&#34;&gt;For Want of a Nail&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;I was interested in learning how to &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/&#34;&gt;Manage Resources for Containers&lt;/a&gt;. On the way, I learned and discovered:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#kubectl-top&#34;&gt;&lt;code&gt;kubectl top&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#vertical-pod-autoscaler-vpa&#34;&gt;Vertical Pod Autoscaler&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;A (valuable) digression through &lt;a href=&#34;#digression-podmonitor&#34;&gt;PodMonitor&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#kube-state-metrics&#34;&gt;&lt;code&gt;kube-state-metrics&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#kubectl-patch&#34;&gt;`kubectl-patch&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Created a &lt;a href=&#34;#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;References&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;kubernetes-resources&#34;&gt;Kubernetes Resources&lt;/h2&gt;&#xA;&lt;p&gt;Visual Studio Code has begun to bug me (reasonably) to add &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/&#34;&gt;&lt;code&gt;resources&lt;/code&gt;&lt;/a&gt; to Kubernetes manifests.&lt;/p&gt;&#xA;&lt;p&gt;E.g.:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-YAML&#34; data-lang=&#34;YAML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;resources&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;limits&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;cpu&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;memory&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;512Mi&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I&amp;rsquo;ve been spending time with Deislab&amp;rsquo;s &lt;a href=&#34;https://github.com/deislabs/akri&#34;&gt;Akri&lt;/a&gt; and decided to determine whether Akri&amp;rsquo;s primary resources (Agent, Controller) and some of my creations HTTP Device and Discovery, were being suitably constrained.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploying a Rust HTTP server to DigitalOcean App Platform</title>
      <link>https://pretired.dazwilkin.com/posts/201008/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201008/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://digitalocean.com&#34;&gt;DigitalOcean&lt;/a&gt; launched an &lt;a href=&#34;https://www.digitalocean.com/blog/introducing-digitalocean-app-platform-reimagining-paas-to-make-it-simpler-for-you-to-build-deploy-and-scale-apps&#34;&gt;App Platform&lt;/a&gt; with many &lt;a href=&#34;https://www.digitalocean.com/docs/app-platform/languages-frameworks/&#34;&gt;Supported Languages and Frameworks&lt;/a&gt;. I used &lt;a href=&#34;https://www.digitalocean.com/docs/app-platform/languages-frameworks/go/&#34;&gt;Golang&lt;/a&gt; first, then wondered how to use non-natively-supported languages, i.e. Rust.&lt;/p&gt;&#xA;&lt;p&gt;The good news is that &lt;a href=&#34;https://www.digitalocean.com/docs/app-platform/languages-frameworks/docker/&#34;&gt;Docker&lt;/a&gt; is a supported framework and so, you can run pretty much anything.&lt;/p&gt;&#xA;&lt;p&gt;Repo: &lt;a href=&#34;https://github.com/DazWilkin/do-apps-rust&#34;&gt;https://github.com/DazWilkin/do-apps-rust&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;rust&#34;&gt;Rust&lt;/h2&gt;&#xA;&lt;p&gt;I&amp;rsquo;m a Rust noob. I&amp;rsquo;m always receptive to feedback on improvements to the code. I looked to mirror the Golang example. I&amp;rsquo;m using &lt;a href=&#34;https://crates.io/crates/rocket&#34;&gt;rocket&lt;/a&gt; and &lt;a href=&#34;https://crates.io/crates/rocket-prometheus&#34;&gt;rocket-prometheus&lt;/a&gt; for the first time:&lt;/p&gt;&#xA;&lt;p&gt;You will want to install rust nightly (as Rocket has a dependency that requires it) and then you can override the default toolchain for the current project using:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Home Exporter</title>
      <link>https://pretired.dazwilkin.com/posts/200107/</link>
      <pubDate>Tue, 07 Jan 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200107/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m obsessing over Prometheus exporters. First came &lt;a href=&#34;https://pretired.dazwilkin.com/posts/191218/&#34;&gt;Linode Exporter&lt;/a&gt;, then &lt;a href=&#34;https://pretired.dazwilkin.com/posts/191220/&#34;&gt;GCP Exporter&lt;/a&gt; and, on Sunday, I stumbled upon a reverse-engineered &lt;a href=&#34;https://rithvikvibhu.github.io/GHLocalApi/&#34;&gt;API for Google Home&lt;/a&gt; devices and so wrote a very basic &lt;a href=&#34;https://github.com/DazWilkin/gohome&#34;&gt;Google Home SDK&lt;/a&gt; and a similarly basic &lt;a href=&#34;https://github.com/DazWilkin/home-exporter&#34;&gt;Google Home Exporter&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pretired.dazwilkin.com/images/200107.home-exporter.png&#34; alt=&#34;Prometheus Graphs&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The SDK only implements &lt;code&gt;/setup/eureka_info&lt;/code&gt; and then only some of the returned properties. There&amp;rsquo;s not a lot of metric-like data to use besides &lt;code&gt;SignalLevel&lt;/code&gt; (&lt;code&gt;signal_level&lt;/code&gt;) and &lt;code&gt;NoiseLevel&lt;/code&gt; (&lt;code&gt;noise_level&lt;/code&gt;). I&amp;rsquo;m not clear on the meaning of some of the properties.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Cloud Platform (GCP) Exporter</title>
      <link>https://pretired.dazwilkin.com/posts/191220/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/191220/</guid>
      <description>&lt;p&gt;Earlier this week I discussed a &lt;a href=&#34;https://pretired.dazwilkin.com/posts/191218/&#34;&gt;Linode Prometheus Exporter&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I &lt;a href=&#34;https://github.com/metalmatze/digitalocean_exporter/pull/5&#34;&gt;added&lt;/a&gt; metrics for &lt;a href=&#34;https://www.digitalocean.com/products/kubernetes/&#34;&gt;Digital Ocean&amp;rsquo;s Managed Kubernetes service&lt;/a&gt; to &lt;a href=&#34;https://github.com/metalmatze&#34;&gt;@metalmatze&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://github.com/metalmatze/digitalocean_exporter&#34;&gt;Digital Ocean Exporter&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This left, metrics for &lt;a href=&#34;https://cloud.google.com&#34;&gt;Google Cloud Platform (GCP)&lt;/a&gt; which has, for many years, been my primary cloud platform. So, today I wrote &lt;a href=&#34;https://github.com/DazWilkin/gcp-exporter&#34;&gt;Prometheus Exporter for Google Cloud Platform&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;All 3 of these exporters follow the template laid down by @metalmatze and, because each of these services has a well-written Golang SDK, it&amp;rsquo;s straightforward to implement an exporter for each of them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus AlertManager</title>
      <link>https://pretired.dazwilkin.com/posts/191219/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/191219/</guid>
      <description>&lt;p&gt;Yesterday I discussed a &lt;a href=&#34;https://pretired.dazwilkin.com/posts/191218/&#34;&gt;Linode Prometheus Exporter&lt;/a&gt; and tantalized use of Prometheus AlertManager.&lt;/p&gt;&#xA;&lt;p&gt;Success:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pretired.dazwilkin.com/images/191219.alertmanager.gmail.png&#34; alt=&#34;Gmail Alert&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;configure&#34;&gt;Configure&lt;/h2&gt;&#xA;&lt;p&gt;The process is straightforward although I found the Prometheus (config) documentation slightly unwieldy to navigate :-(&lt;/p&gt;&#xA;&lt;p&gt;The overall process is &lt;a href=&#34;https://prometheus.io/docs/alerting/overview/&#34;&gt;documented&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Here are the steps I took:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#configure-prometheus&#34;&gt;Configure Prometheus&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#configure-alertmanager&#34;&gt;Configure AlertManager&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#revise-docker-compose&#34;&gt;Revise Docker Compose&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;configure-prometheus&#34;&gt;Configure Prometheus&lt;/h3&gt;&#xA;&lt;p&gt;Added the following to &lt;code&gt;prometheus.yml&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-YAML&#34; data-lang=&#34;YAML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;rule_files&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/etc/alertmanager/rules/linode.yml&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;alerting&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;alertmanagers&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;scheme&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;static_configs&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - &lt;span style=&#34;color:#f92672&#34;&gt;targets&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;alertmanager:9093&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Rules must be defined in separate rules files. See below for the content for &lt;code&gt;linode.yml&lt;/code&gt; and an explanation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linode Prometheus Exporter</title>
      <link>https://pretired.dazwilkin.com/posts/191218/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/191218/</guid>
      <description>&lt;p&gt;I enjoy using &lt;a href=&#34;https://prometheus.io&#34;&gt;Prometheus&lt;/a&gt; and have toyed around with it for some time particularly in combination with Kubernetes. I signed up with &lt;a href=&#34;https://www.linode.com/?r=9ab7d75b764e143a1b3b467390c852b2c56cd704&#34;&gt;Linode&lt;/a&gt; [referral] compelled by the addition of a managed Kubernetes service called &lt;a href=&#34;https://www.linode.com/products/kubernetes/&#34;&gt;Linode Kubernetes Engine (LKE)&lt;/a&gt;. I have an anxiety that I&amp;rsquo;ll inadvertently leave resources running (unused) on a cloud platform. Instead of refreshing the relevant billing page, it struck me that Prometheus may (not yet proven) help.&lt;/p&gt;&#xA;&lt;p&gt;The hypothesis is that a combination of a cloud-specific Prometheus &lt;a href=&#34;https://prometheus.io/docs/instrumenting/exporters/&#34;&gt;exporter&lt;/a&gt; reporting aggregate uses of e.g. Linodes (instances), NodeBalancers, Kubernetes clusters etc., could form the basis of an alert mechanism using Prometheus&amp;rsquo; &lt;a href=&#34;https://prometheus.io/docs/alerting/overview/&#34;&gt;alerting&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
