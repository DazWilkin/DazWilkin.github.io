<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MCP on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/mcp/</link>
    <description>Recent content in MCP on (p)retired</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Jun 2025 00:00:00 -0700</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/mcp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gemini CLI (3/3)</title>
      <link>https://pretired.dazwilkin.com/posts/250630/</link>
      <pubDate>Mon, 30 Jun 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250630/</guid>
      <description>&lt;h3 id=&#34;update-2025-07-08&#34;&gt;Update 2025-07-08&lt;/h3&gt;&#xA;&lt;p&gt;Gemini CLI supports &lt;a href=&#34;https://github.com/google-gemini/gemini-cli/blob/0275ab0108e9a411d90d8ef8c8d70e21e498d81a/docs/tools/mcp-server.md#http-based-mcp-server&#34;&gt;HTTP-based MCP server&lt;/a&gt; integration&lt;/p&gt;&#xA;&lt;p&gt;So, it&amp;rsquo;s possible to replace the &lt;code&gt;.gemini/settings.json&lt;/code&gt; included in the original post with:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JSON&#34; data-lang=&#34;JSON&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;theme&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Default&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;mcpServers&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ackal-mcp-server&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;httpUrl&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://localhost:7777/mcp&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;timeout&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;prometheus-mcp-server&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;httpUrl&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://prometheus.{tailnet}/mcp&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;timeout&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;selectedAuthType&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gemini-api-key&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This solution permits the addition of &lt;code&gt;headers&lt;/code&gt; too for e.g. including &lt;code&gt;Authorization&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;original&#34;&gt;Original&lt;/h3&gt;&#xA;&lt;p&gt;Okay, so not &amp;ldquo;Gemini Code Assist&amp;rdquo; but sufficiently similar that I think it warrants the &amp;ldquo;3/3&amp;rdquo; appellation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gemini Code Assist &#39;agent&#39; mode without `npx mcp-remote` (2/3)</title>
      <link>https://pretired.dazwilkin.com/posts/250627/</link>
      <pubDate>Fri, 27 Jun 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250627/</guid>
      <description>&lt;p&gt;Solved!&lt;/p&gt;&#xA;&lt;p&gt;Ugh.&lt;/p&gt;&#xA;&lt;p&gt;Before I continue, one important detail from yesterday&amp;rsquo;s experience which I think I didn&amp;rsquo;t clarify is that, unlike the Copilot agent, it appears (!?) that Gemini agent only supports integration with MCP servers via stdio. As a result, the only way to integrate with HTTP-based MCP servers (local or remote) is to proxy traffic through stdio as &lt;a href=&#34;https://www.npmjs.com/package/mcp-remote&#34;&gt;&lt;code&gt;mcp-remote&lt;/code&gt;&lt;/a&gt; and the Rust example herein.&lt;/p&gt;&#xA;&lt;p&gt;The most helpful change was to take a hint from the NPM &lt;a href=&#34;https://www.npmjs.com/package/mcp-remote&#34;&gt;&lt;code&gt;mcp-remote&lt;/code&gt;&lt;/a&gt; and create a log file. This helps because, otherwise the &lt;code&gt;mcp-remote&lt;/code&gt; process, because it&amp;rsquo;s launched by Visual Studio Code, well Gemini Code Assist agent, isn&amp;rsquo;t trivial to debug.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gemini Code Assist &#39;agent&#39; mode without `npx mcp-remote` (1/3)</title>
      <link>https://pretired.dazwilkin.com/posts/250626/</link>
      <pubDate>Thu, 26 Jun 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250626/</guid>
      <description>&lt;p&gt;Former Microsoftie and Googler:&lt;/p&gt;&#xA;&lt;p&gt;Good documentation &lt;a href=&#34;https://learn.microsoft.com/en-us/microsoft-copilot-studio/agent-extend-action-mcp&#34;&gt;Extend your agent with Model Context Protocol&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Not such good documentation: &lt;a href=&#34;https://developers.google.com/gemini-code-assist/docs/use-agentic-chat-pair-programmer&#34;&gt;Using agentic chat as a pair programmer&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Definition of &amp;ldquo;good&amp;rdquo; being, I was able to follow the clear instructions and it worked first time. Well done, Microsoft!&lt;/p&gt;&#xA;&lt;p&gt;This space is moving so quickly and I&amp;rsquo;m happy to alpha test these companies&amp;rsquo; solutions but (a) Google&amp;rsquo;s portfolio is a mess. This week I&amp;rsquo;ve tried (and failed) to use Gemini CLI (because I don&amp;rsquo;t want to run Node.JS on my host machine and it doesn&amp;rsquo;t work in a container: &lt;a href=&#34;https://github.com/google-gemini/gemini-cli/issues/1437&#34;&gt;issue #1437&lt;/a&gt;) and now this.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus MCP Server</title>
      <link>https://pretired.dazwilkin.com/posts/250616/</link>
      <pubDate>Mon, 16 Jun 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250616/</guid>
      <description>&lt;p&gt;I was unable to find a &lt;a href=&#34;https://modelcontextprotocol.io/&#34;&gt;Model Context Protocol (MCP)&lt;/a&gt; server implementation for &lt;a href=&#34;https://prometheus.io&#34;&gt;Prometheus&lt;/a&gt;. I had a quiet weekend and so I&amp;rsquo;ve been writing one: &lt;a href=&#34;https://github.com/DazWilkin/prometheus-mcp-server&#34;&gt;&lt;code&gt;prometheus-mcp-server&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I used the code from the &lt;a href=&#34;https://pretired.dazwilkin.com/posts/250612/&#34;&gt;MCP for gRPC Health Checking protocol&lt;/a&gt; that I wrote about previously as a guide.&lt;/p&gt;&#xA;&lt;p&gt;I wrote a series of &lt;code&gt;stdin&lt;/code&gt; and HTTP tests to have confidence that the service is working correctly but I had no MCP host.&lt;/p&gt;&#xA;&lt;p&gt;I discovered that &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt; through its &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=GitHub.copilot&#34;&gt;GitHub Copilot&lt;/a&gt; extension functions has a &lt;a href=&#34;https://code.visualstudio.com/docs/copilot/chat/mcp-servers&#34;&gt;preview to use MCP servers&lt;/a&gt; i.e. function as an MCP host and access MCP servers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MCP for gRPC Health Checking protocol</title>
      <link>https://pretired.dazwilkin.com/posts/250612/</link>
      <pubDate>Thu, 12 Jun 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250612/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://modelcontextprotocol.io/introduction&#34;&gt;Model Context Protocol (MCP)&lt;/a&gt; is &amp;ldquo;all the rage&amp;rdquo; these days.&lt;/p&gt;&#xA;&lt;p&gt;I stumbled upon &lt;a href=&#34;https://github.com/redpanda-data/protoc-gen-go-mcp&#34;&gt;&lt;code&gt;protoc-gen-go-mcp&lt;/code&gt;&lt;/a&gt; and think it&amp;rsquo;s an elegant application of two technologies: programmatically generating an MCP server from a gRPC protobuf.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m considering building an MCP server for &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt; but, thought I&amp;rsquo;d start with something simple: &lt;a href=&#34;https://grpc.io/docs/guides/health-checking/&#34;&gt;gRPC Health Checking protocol&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I was surprised to learn as I was doing this that there&amp;rsquo;s a new &lt;a href=&#34;https://github.com/grpc/grpc-proto/blob/23f5b568eefcb876e6ebc3b01725f1f20cff999e/grpc/health/v1/health.proto#L74&#34;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; (&lt;a href=&#34;https://github.com/grpc/grpc-proto/pull/143&#34;&gt;Add &lt;code&gt;List&lt;/code&gt; method to gRPC Health service #143&lt;/a&gt;) added to &lt;code&gt;grpc.health.v1.Health&lt;/code&gt;. My (Ackal) healthcheck server does not yet implement it (see later).&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
