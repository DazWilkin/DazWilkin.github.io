<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gprc on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/gprc/</link>
    <description>Recent content in gprc on (p)retired</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Aug 2020 00:00:00 -0700</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/gprc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>WASM Transparency</title>
      <link>https://pretired.dazwilkin.com/posts/200817/</link>
      <pubDate>Mon, 17 Aug 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200817/</guid>
      <description>I&amp;rsquo;ve been playing around with a proof-of-concept combining WASM and Trillian. The hypothesis was to explore using WASM as a form of chaincode with Trillian. The project works but it&amp;rsquo;s far from being a chaincode-like solution.
Let&amp;rsquo;s start with a couple of (trivial) examples and then I&amp;rsquo;ll explain what&amp;rsquo;s going on and how it&amp;rsquo;s implemented.
2020/08/14 18:42:17 [main:loop:dynamic-invoke] Method: mul 2020/08/14 18:42:17 [random:New] Message 2020/08/14 18:42:17 [random:New] Float32 2020/08/14 18:42:17 [random:New] Float32 2020/08/14 18:42:17 [random:New] Message 2020/08/14 18:42:17 [random:New] Float32 2020/08/14 18:42:17 [random:New] Float32 2020/08/14 18:42:17 [Client:Invoke] Metadata: complex.</description>
    </item>
  </channel>
</rss>
