<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Swagger on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/swagger/</link>
    <description>Recent content in Swagger on (p)retired</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Jan 2024 00:00:00 -0800</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/swagger/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Navigating Koyeb&#39;s API with Rust</title>
      <link>https://pretired.dazwilkin.com/posts/240130/</link>
      <pubDate>Tue, 30 Jan 2024 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240130/</guid>
      <description>I wrote about Navigating Koyeb&amp;rsquo;s Golang SDK. That client is generated using the OpenAPI Generator project using Koyeb&amp;rsquo;s Swagger (now OpenAPI) REST API spec.&#xA;This post shows how to generate a Rust SDK using the Generator and provides a very basic example of using the SDK.&#xA;The Generator will create a Rust library project:&#xA;VERS=&amp;#34;v7.2.0&amp;#34; PACKAGE_NAME=&amp;#34;koyeb-api-client-rs&amp;#34; PACKAGE_VERS=&amp;#34;1.0.0&amp;#34; podman run \ --interactive --tty --rm \ --volume=${PWD}:/local \ docker.io/openapitools/openapi-generator-cli:${VERS} \ generate \ -g=rust \ -i=https://developer.</description>
    </item>
    <item>
      <title>OriginStamp Rust SDK Example</title>
      <link>https://pretired.dazwilkin.com/posts/200312/</link>
      <pubDate>Thu, 12 Mar 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200312/</guid>
      <description>I wrote recently describing Python and Golang clients for OriginStamp based on OriginStamp&amp;rsquo;s API&amp;rsquo;s swagger spec. As a way to pursue learning rust, I&amp;rsquo;ve been forcing myself to write examples using rust. I&amp;rsquo;m honestly finding learning rust tough going and think I&amp;rsquo;m probably better to revert to the &amp;ldquo;Learning Rust&amp;rdquo; tutorials.&#xA;That said, herewith an explanation of building a rust client using an OpenAPI (!) generated SDK from OriginStamp&amp;rsquo;s swagger spec.</description>
    </item>
    <item>
      <title>OriginStamp Python|Golang SDK Examples</title>
      <link>https://pretired.dazwilkin.com/posts/200217/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200217/</guid>
      <description>A friend mentioned OriginStamp to me.&#xA;NB There are 2 sites: originstamp.com and originstamp.org.&#xA;It&amp;rsquo;s an interesting project.&#xA;It&amp;rsquo;s a solution for providing auditable proof that you had a(ccess to) some digital thing before a certain date. OriginStamp provides user-|developer-friendly means to submit files|hashes (of your content) and have these bundled into transactions that are submitted to e.g. bitcoin.&#xA;I won&amp;rsquo;t attempt to duplicate the narrative here, review OriginStamp&amp;rsquo;s site and some of its content.</description>
    </item>
  </channel>
</rss>
