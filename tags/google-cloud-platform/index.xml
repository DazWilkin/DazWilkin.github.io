<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google Cloud Platform on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/google-cloud-platform/</link>
    <description>Recent content in Google Cloud Platform on (p)retired</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Nov 2022 00:00:00 -0800</lastBuildDate><atom:link href="https://pretired.dazwilkin.com/tags/google-cloud-platform/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The curious cases of the `deleted:serviceaccount`</title>
      <link>https://pretired.dazwilkin.com/posts/221111/</link>
      <pubDate>Fri, 11 Nov 2022 00:00:00 -0800</pubDate>
      
      <guid>https://pretired.dazwilkin.com/posts/221111/</guid>
      <description>While testing Firestore export and import yesterday and checking the IAM permissions on a Cloud Storage Bucket, I noticed some Member (member) values (I think Google refers to these as Principals) were logical but unfamiliar to me:
deleted:serviceAccount:{email}?uid={uid} I was using gsutil iam get gs://${BUCKET} because I&amp;rsquo;d realized (and this is another useful lesson) that, as I&amp;rsquo;ve been creating daily test projects, I&amp;rsquo;ve been binding each project&amp;rsquo;s Firestore Service Account (service-{project-number}@gcp-sa-firestore.</description>
    </item>
    
    <item>
      <title>Firestore Export &amp; Import</title>
      <link>https://pretired.dazwilkin.com/posts/221110/</link>
      <pubDate>Thu, 10 Nov 2022 00:00:00 -0700</pubDate>
      
      <guid>https://pretired.dazwilkin.com/posts/221110/</guid>
      <description>I&amp;rsquo;m using Firestore to maintain state in my &amp;ldquo;thing&amp;rdquo;.
In an attempt to ensure that I&amp;rsquo;m able to restore the database, I run (Cloud Scheduler) scheduled backups (see Automating Scheduled Firestore Exports and I&amp;rsquo;ve been testing imports to ensure that the process works.
It does.
I thought I&amp;rsquo;d document an important but subtle consideration with Firestore exports (which I&amp;rsquo;d not initially understood).
Google facilitates that backup process with the sibling commands:</description>
    </item>
    
    <item>
      <title>Setting up a GCE Instance as an Inlets Exit Node</title>
      <link>https://pretired.dazwilkin.com/posts/200122/</link>
      <pubDate>Wed, 22 Jan 2020 00:00:00 -0800</pubDate>
      
      <guid>https://pretired.dazwilkin.com/posts/200122/</guid>
      <description>The prolific Alex Ellis has a new project, Inlets.
Here&amp;rsquo;s a quick tutorial using Google Compute Platform&amp;rsquo;s (GCP) Compute Engine (GCE).
NB I&amp;rsquo;m using one of Google&amp;rsquo;s &amp;ldquo;Always free&amp;rdquo; f1-micro instances but you may still pay for network *gress and storage
Assumptions I&amp;rsquo;m assuming you&amp;rsquo;ve a Google account, have used GCP and have a billing account established, i.e. the following returns at least one billing account:
gcloud beta billing accounts list If you&amp;rsquo;ve only one billing account and it&amp;rsquo;s the one you wish to use, then you can:</description>
    </item>
    
    <item>
      <title>Kubernetes Engine and Free Tier</title>
      <link>https://pretired.dazwilkin.com/posts/190924/</link>
      <pubDate>Tue, 24 Sep 2019 09:40:14 -0700</pubDate>
      
      <guid>https://pretired.dazwilkin.com/posts/190924/</guid>
      <description>Google Cloud Platform Free Tier appears (please verify this for yourself) to provide the ability to run a(n admittedly miniscule) Kubernetes cluster for free. So, why do this? It provides a definitive Kubernetes (Engine) experience on Google Cloud Platform that you may use for learning and testing.
Kubernetes Engine the master node(s) and the control plane are free.
Kubernetes (i.e. Compute Engine) nodes potentially incur charges including for the VM runtime and any attached storage, snapshots etc.</description>
    </item>
    
  </channel>
</rss>
