<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/kubernetes/</link>
    <description>Recent content in Kubernetes on (p)retired</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Mar 2025 00:00:00 -0700</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Migrating Prometheus Exporters to Kubernetes</title>
      <link>https://pretired.dazwilkin.com/posts/250325/</link>
      <pubDate>Tue, 25 Mar 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250325/</guid>
      <description>&lt;p&gt;I have built &lt;a href=&#34;https://prometheus.io&#34;&gt;Prometheus&lt;/a&gt; &lt;a href=&#34;https://prometheus.io/docs/instrumenting/exporters/&#34;&gt;Exporters&lt;/a&gt; for multiple cloud platforms to track resources deployed across clouds:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/azure-exporter&#34;&gt;Prometheus Exporter for Azure&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/crtsh-exporter&#34;&gt;Prometheus Exporter for crt.sh&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/fly-exporter&#34;&gt;Prometheus Exporter for Fly.io&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/goatcounter-exporter&#34;&gt;Prometheus Exporter for GoatCounter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/ga-exporter&#34;&gt;Prometheus Exporter for Google Analytics&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/gcp-exporter&#34;&gt;Prometheus Exporter for Google Cloud&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/koyeb-exporter&#34;&gt;Prometheus Exporter for Koyeb&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/linode-exporter&#34;&gt;Prometheus Exporter for Linode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/porkbun-exporter&#34;&gt;Prometheus Exporter for PorkBun&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/updown-exporter&#34;&gt;Prometheus Exporter for updown.io&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/vultr-exporter&#34;&gt;Prometheus Exporter for Vultr&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Additionally, I&amp;rsquo;ve written two status service exporters:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/gcp-status&#34;&gt;Prometheus Exporter for GCP Status&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/DazWilkin/vultr-status-exporter&#34;&gt;Prometheus Exporter for Vultr Status&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;These exporters are all derived from an exemplar &lt;a href=&#34;https://github.com/metalmatze/digitalocean_exporter&#34;&gt;&lt;code&gt;DigitalOcean Exporter&lt;/code&gt;&lt;/a&gt; written by &lt;a href=&#34;https://github.com/metalmatze&#34;&gt;metalmatze&lt;/a&gt; for which I maintain a &lt;a href=&#34;https://github.com/DazWilkin/digitalocean_exporter&#34;&gt;fork&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Rust to generate Kubernetes CRD</title>
      <link>https://pretired.dazwilkin.com/posts/240529/</link>
      <pubDate>Wed, 29 May 2024 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240529/</guid>
      <description>&lt;p&gt;For the first time, I chose Rust to solve a problem. Until this, I&amp;rsquo;ve been trying to use Rust to learn the language and to rewrite existing code. But, this problem led me to Rust because my other tools wouldn&amp;rsquo;t cut it.&lt;/p&gt;&#xA;&lt;p&gt;The question was how to represent oneof fields in Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/&#34;&gt;Custom Resource Definitions (CRDs)&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;CRDs use &lt;a href=&#34;https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.0.md#schemaObject&#34;&gt;OpenAPI&lt;/a&gt; schema and the YAML that results can be challenging to grok.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-YAML&#34; data-lang=&#34;YAML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;apiextensions.k8s.io/v1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;CustomResourceDefinition&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;metadata&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;deploymentconfigs.example.com&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;group&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;example.com&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;names&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;categories&lt;/span&gt;: []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;DeploymentConfig&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;plural&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;deploymentconfigs&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;shortNames&lt;/span&gt;: []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;singular&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;deploymentconfig&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;scope&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Namespaced&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;versions&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;additionalPrinterColumns&lt;/span&gt;: []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;v1alpha1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;schema&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;openAPIV3Schema&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;description&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;An example schema&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;properties&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;properties&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;deployment_strategy&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;oneOf&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                - &lt;span style=&#34;color:#f92672&#34;&gt;required&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  - &lt;span style=&#34;color:#ae81ff&#34;&gt;rolling_update&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                - &lt;span style=&#34;color:#f92672&#34;&gt;required&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  - &lt;span style=&#34;color:#ae81ff&#34;&gt;recreate&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;properties&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#f92672&#34;&gt;recreate&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;properties&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#f92672&#34;&gt;something&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;format&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;uint16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;minimum&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;integer&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;required&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    - &lt;span style=&#34;color:#ae81ff&#34;&gt;something&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;object&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#f92672&#34;&gt;rolling_update&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;properties&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#f92672&#34;&gt;max_surge&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;format&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;uint16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;minimum&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;integer&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#f92672&#34;&gt;max_unavailable&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;format&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;uint16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;minimum&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;integer&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;required&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    - &lt;span style=&#34;color:#ae81ff&#34;&gt;max_surge&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    - &lt;span style=&#34;color:#ae81ff&#34;&gt;max_unavailable&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;object&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;object&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;required&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            - &lt;span style=&#34;color:#ae81ff&#34;&gt;deployment_strategy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;object&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;required&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - &lt;span style=&#34;color:#ae81ff&#34;&gt;spec&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;DeploymentConfig&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;object&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;served&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;storage&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;subresources&lt;/span&gt;: {}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I&amp;rsquo;ve developed several Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/operator/&#34;&gt;Operators&lt;/a&gt; using the &lt;a href=&#34;https://sdk.operatorframework.io/&#34;&gt;Operator SDK&lt;/a&gt; in Go (which builds upon &lt;a href=&#34;https://github.com/kubernetes-sigs/kubebuilder&#34;&gt;Kubebuilder&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Delve to debug Go containers on Kubernetes</title>
      <link>https://pretired.dazwilkin.com/posts/240528/</link>
      <pubDate>Tue, 28 May 2024 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240528/</guid>
      <description>&lt;p&gt;An interesting &lt;a href=&#34;https://stackoverflow.com/questions/78537605&#34;&gt;question&lt;/a&gt; on Stack overflow prompted me to understand how to use Visual Studio Code and &lt;a href=&#34;https://github.com/go-delve/delve&#34;&gt;Delve&lt;/a&gt; to remotely debug a Golang app running on Kubernetes (MicroK8s).&lt;/p&gt;&#xA;&lt;p&gt;The OP is using &lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;Gin&lt;/a&gt; which was also new to me so the question gave me an opportunity to try out several things.&lt;/p&gt;&#xA;&lt;h2 id=&#34;sources&#34;&gt;Sources&lt;/h2&gt;&#xA;&lt;p&gt;A simple &lt;code&gt;healthz&lt;/code&gt; handler:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;flag&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log/slog&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net/http&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/gin-gonic/gin&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;addr&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;flag&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;addr&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0.0:8080&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HTTP server endpoint&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;healthz&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;gin&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;StatusOK&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ok&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;flag&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Parse&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;router&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gin&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Default&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;router&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GET&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/fib&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;handler&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;router&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GET&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;healthz&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;healthz&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;slog&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Info&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Server starting&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;slog&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Info&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Server error&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;err&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;router&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Run&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addr&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Containerfile&lt;/code&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fly Kubernetes</title>
      <link>https://pretired.dazwilkin.com/posts/240314/</link>
      <pubDate>Tue, 12 Mar 2024 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240314/</guid>
      <description>&lt;p&gt;Interested to explore &lt;a href=&#34;https://fly.io/docs/kubernetes/&#34;&gt;Fly Kubernetes&lt;/a&gt; after being accepted into the closed beta.&lt;/p&gt;&#xA;&lt;p&gt;The folks at Fly are innovative in their technology uses and, having been a long-time Kubernetes user, I was intrigued to learn that Fly.io has &lt;a href=&#34;https://fly.io/blog/fks/&#34;&gt;implemented Kubernetes atop Fly&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;My first Deployment failed:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Authentication required to access image &amp;#34;ghcr.io/{image}&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It was confirmed to me that FKS does not support pulling from private registries. The solution is &lt;code&gt;pull&lt;/code&gt;-&lt;code&gt;tag&lt;/code&gt;-&lt;code&gt;push&lt;/code&gt; images to &lt;code&gt;registry.fly.io&lt;/code&gt; but, Fly&amp;rsquo;s repository is app-specific and so, you need to do some querying to grab the Fly app created by FKS (for your namespace):&lt;/p&gt;</description>
    </item>
    <item>
      <title>MicroK8s operability add-on</title>
      <link>https://pretired.dazwilkin.com/posts/240216/</link>
      <pubDate>Fri, 16 Feb 2024 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/240216/</guid>
      <description>&lt;p&gt;Spent time today &lt;a href=&#34;https://en.wiktionary.org/wiki/yak_shaving&#34;&gt;yak-shaving&lt;/a&gt; which resulted in an unplanned migration from &lt;a href=&#34;https://microk8s.io&#34;&gt;MicroK8s&lt;/a&gt; &amp;lsquo;prometheus&amp;rsquo; &lt;a href=&#34;https://microk8s.io/docs/addons&#34;&gt;add-on&lt;/a&gt; to the new and not fully-documented &amp;lsquo;observability&amp;rsquo; add-on:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo microk8s.enable prometheus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Infer repository core for addon prometheus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEPRECATION WARNING: &amp;#39;prometheus&amp;#39; is deprecated and will soon be removed. Please use &amp;#39;observability&amp;#39; instead.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The reason for the name change is unclear.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s unclear whether there&amp;rsquo;s a difference in the primary components that are installed too (I&amp;rsquo;d thought Grafana wasn&amp;rsquo;t included in &amp;lsquo;prometheus&amp;rsquo;), &lt;a href=&#34;https://grafana.com/oss/loki&#34;&gt;(Grafana) Loki&lt;/a&gt; and &lt;a href=&#34;https://grafana.com/oss/tempo/&#34;&gt;(Grafana) Tempo&lt;/a&gt; definitely weren&amp;rsquo;t included and I don&amp;rsquo;t want them either.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Python SDK w/ CRDs</title>
      <link>https://pretired.dazwilkin.com/posts/230708/</link>
      <pubDate>Sat, 08 Jul 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230708/</guid>
      <description>&lt;p&gt;Responded to &lt;a href=&#34;https://stackoverflow.com/questions/76636443/&#34;&gt;Get Custom K8s Resource using Python&lt;/a&gt; and found the &lt;a href=&#34;https://github.com/kubernetes-client/python/blob/master/kubernetes/docs/CustomObjectsApi.md&#34;&gt;&lt;code&gt;CustomObjectsApi&lt;/code&gt;&lt;/a&gt; documentation unclear.&lt;/p&gt;&#xA;&lt;p&gt;If you have a cluster and a kubeconfig file with a correctly configured &lt;code&gt;current-context&lt;/code&gt;, so that you can successfully:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PLURAL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;checks&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PLURAL&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--all-namespaces&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; I&amp;rsquo;m using &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt;&amp;rsquo;s CRDs in these examples.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Then you can use the following code to access the cluster&amp;rsquo;s REST API server to enumerate its CRDs:&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;main.py&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Python3&#34; data-lang=&#34;Python3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; __future__ &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; print_function&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; kubernetes &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; client, config&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; kubernetes.client.rest &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ApiException&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;load_kube_config()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;api &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;CustomObjectsApi()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Ackal&amp;#39;s Group|Version and some Kinds&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ack.al&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;version &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;v1&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plurals &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;checks&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;customers&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; plural &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; plurals:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        resp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; api&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;list_cluster_custom_object(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            group,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            version,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            plural,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; resp[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;items&amp;#34;&lt;/span&gt;]:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            spec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; item[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spec&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            print(spec)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; ApiException &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(e)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m venv venv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source venv/bin/activate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m pip install kubernetes&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;26.1.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 main.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s all!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Routing Firestore events to GKE with Eventarc</title>
      <link>https://pretired.dazwilkin.com/posts/230530/</link>
      <pubDate>Tue, 30 May 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230530/</guid>
      <description>&lt;p&gt;Google announced &lt;a href=&#34;https://cloud.google.com/blog/products/databases/firestore-triggers-for-cloud-run-and-google-kubernetes-engine/&#34;&gt;Firestore &amp;hellip; integration with Eventarc&lt;/a&gt;. &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt; uses &lt;a href=&#34;https://cloud.google.com/firestore&#34;&gt;Firestore&lt;/a&gt; to persist Customer and Check information and it uses &lt;a href=&#34;https://cloud.google.com/functions/docs/calling/cloud-firestore-1st-gen&#34;&gt;Google Cloud Firestore Triggers&lt;/a&gt; to handle events on these document types.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/eventarc&#34;&gt;Eventarc&lt;/a&gt; feels like the strategic future of eventing in Google Cloud and I&amp;rsquo;ve been concerned since adopting the technology that Google would abandon Google Cloud Firestore Triggers.&lt;/p&gt;&#xA;&lt;p&gt;For this reason, when I saw last week&amp;rsquo;s announcement, I thought I should evaluate the mechanism and this blog post is a summary of that work.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Robusta KRR w/ GMP</title>
      <link>https://pretired.dazwilkin.com/posts/230427/</link>
      <pubDate>Thu, 27 Apr 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230427/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been spending time recently optimizing &lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt;&amp;rsquo;s use of Google &lt;a href=&#34;https://cloud.google.com/logging&#34;&gt;Cloud Logging&lt;/a&gt; and &lt;a href=&#34;https://cloud.google.com/monitoring&#34;&gt;Cloud Monitoring&lt;/a&gt; in posts:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pretired.dazwilkin.com/posts/230413/&#34;&gt;Filtering metrics w/ Google Managed Prometheus&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pretired.dazwilkin.com/posts/230419/&#34;&gt;Kubernetes metrics, metrics everywhere&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://pretired.dazwilkin.com/posts/230425/&#34;&gt;Google Metric Diagnostics and Metric Data Ingested&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Yesterday, I read that &lt;a href=&#34;https://home.robusta.dev/&#34;&gt;Robusta&lt;/a&gt; has a new open source project &lt;a href=&#34;https://github.com/robusta-dev/krr&#34;&gt;Kubernetes Resource Recommendations (KRR)&lt;/a&gt; so I took some time to evaluate it.&lt;/p&gt;&#xA;&lt;p&gt;This post describes the changes I had to make to get KRR working with &lt;a href=&#34;https://cloud.google.com/stackdriver/docs/managed-prometheus&#34;&gt;Google Managed Prometheus (GMP)&lt;/a&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Metric Diagnostics and Metric Data Ingested</title>
      <link>https://pretired.dazwilkin.com/posts/230425/</link>
      <pubDate>Tue, 25 Apr 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230425/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been on an efficiency drive with &lt;a href=&#34;https://cloud.google.com/logging&#34;&gt;Cloud Logging&lt;/a&gt; and &lt;a href=&#34;https://cloud.google.com/monitoring&#34;&gt;Cloud Monitoring&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;With regards Cloud Logging, I&amp;rsquo;m contemplating (!) eliminating almost all log storage. As it is I&amp;rsquo;ve buzz cut log storage with a &lt;code&gt;_Default&lt;/code&gt; sink that has comprehensive sets of &lt;code&gt;NOT LOG_ID(X)&lt;/code&gt; inclusion and exclusion filters. As I was doing so, I began to wonder why I need to pay for the storage of much logging. There&amp;rsquo;s the comfort from knowing that everything you may ever need is being logged (at least for 30 days) but there&amp;rsquo;s also the costs that that entails. I use logs exclusively for debugging which got me thinking, couldn&amp;rsquo;t I just capture logs when I&amp;rsquo;m debugging (rather thna all the time?). I&amp;rsquo;ve not taken that leap yet but I&amp;rsquo;m noodling on it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes metrics, metrics everywhere</title>
      <link>https://pretired.dazwilkin.com/posts/230419/</link>
      <pubDate>Wed, 19 Apr 2023 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230419/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been tinkering with ways to &amp;ldquo;unit-test&amp;rdquo; my assumptions when using cloud platforms. I recently wrote about good posts by Google describing achieving cost savings with Cloud Monitoring and Cloud Logging:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/blog/products/management-tools/learn-to-understand-and-reduce-cloud-monitoring-costs/&#34;&gt;How to identify and reduce costs of your Google Cloud observability in Cloud Monitoring&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/blog/topics/cost-management/how-to-approach-cloud-logging-pricing-for-cloud-admins&#34;&gt;Cloud Logging pricing for Cloud Admins: How to approach it &amp;amp; save cost&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;With Cloud Monitoring, I&amp;rsquo;ve restricted the &lt;code&gt;prometheus.googleapis.com&lt;/code&gt; metrics that are being ingested but realized I wanted to track the number of Pods (and Containers) deployed to a GKE cluster.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Operators</title>
      <link>https://pretired.dazwilkin.com/posts/230310/</link>
      <pubDate>Fri, 10 Mar 2023 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230310/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://ack.al&#34; data-goatcounter-click=&#34;ack.al&#34;&gt;Ackal&lt;/a&gt; uses a Kubernetes Operator to orchestrate the lifecycle of its health checks. Ackal&amp;rsquo;s Operator is written in Go using &lt;a href=&#34;https://github.com/kubernetes-sigs/kubebuilder&#34;&gt;&lt;code&gt;kubebuilder&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Yesterday, my interest was piqued by a &lt;a href=&#34;https://metalbear.co&#34;&gt;MetalBear&lt;/a&gt; blog post &lt;a href=&#34;https://metalbear.co/blog/writing-a-kubernetes-operator/&#34;&gt;Writing a Kubernetes Operator [in Rust]&lt;/a&gt;. I spent some time reimplementing one of Ackal&amp;rsquo;s CRDs (&lt;code&gt;Check&lt;/code&gt;) using &lt;a href=&#34;https://github.com/kube-rs/kube&#34;&gt;&lt;code&gt;kube-rs&lt;/code&gt;&lt;/a&gt; and not only refreshed my Rust knowledge but learned a bunch more about Kubernetes and Operators.&lt;/p&gt;&#xA;&lt;p&gt;While rummaging around the Kubernetes documentation, I discovered flant&amp;rsquo;s &lt;a href=&#34;https://github.com/flant/shell-operator&#34;&gt;&lt;code&gt;Shell-operator&lt;/code&gt;&lt;/a&gt; and spent some time today exploring its potential.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Secure (TLS) gRPC services with LKE</title>
      <link>https://pretired.dazwilkin.com/posts/230215/</link>
      <pubDate>Wed, 15 Feb 2023 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/230215/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; &lt;a href=&#34;https://cert-manager.io&#34;&gt;&lt;code&gt;cert-manager&lt;/code&gt;&lt;/a&gt; is a better solution to what follows.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;I wrote about deploying &lt;a href=&#34;https://pretired.dazwilkin.com/posts/220603/&#34;&gt;Secure (TLS) gRPC services with Vultr Kubernetes Engine (VKE)&lt;/a&gt;. This week, I&amp;rsquo;ve reproduced this deployment using Linode Kubernetes Engine (LKE).&lt;/p&gt;&#xA;&lt;p&gt;Thanks to the consistency provided by Kubernetes, the Kubernetes programming is almost identical. The main differences are between the CLI&amp;rsquo;s provided by these platforms. Both are good. They&amp;rsquo;re just different.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m going to include the &lt;code&gt;linode-cli&lt;/code&gt; commands I&amp;rsquo;m using in this post as I found it slightly more quirky.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Secure (TLS) gRPC services with VKE</title>
      <link>https://pretired.dazwilkin.com/posts/220603/</link>
      <pubDate>Fri, 03 Jun 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220603/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; &lt;a href=&#34;https://cert-manager.io&#34;&gt;&lt;code&gt;cert-manager&lt;/code&gt;&lt;/a&gt; is a better solution to what follows.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve a need to deploy a Vultr Kubernetes Engine (VKE) cluster on a daily basis (create and delete within a few hours) and expose (securely|TLS) a gRPC service.&lt;/p&gt;&#xA;&lt;p&gt;I have an existing solution &lt;a href=&#34;https://pretired.dazwilkin.com/posts/211130/&#34;&gt;Automatic Certs w/ Golang gRPC service on Compute Engine&lt;/a&gt; that combines a gRPC Healthchecking and an ACME service and decided to reuse this.&lt;/p&gt;&#xA;&lt;p&gt;In order for it work, we need:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vultr CLI and JSON output</title>
      <link>https://pretired.dazwilkin.com/posts/220602/</link>
      <pubDate>Thu, 02 Jun 2022 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/220602/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve begun exploring &lt;a href=&#34;https://vultr.com&#34;&gt;Vultr&lt;/a&gt; after the company announced a managed Kubernetes offering &lt;a href=&#34;https://www.vultr.com/kubernetes/&#34;&gt;Vultr Kubernetes Engine (VKE)&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In my brief experience, it&amp;rsquo;s a decent platform and its CLI &lt;a href=&#34;https://github.com/vultr/vultr-cli&#34;&gt;&lt;code&gt;vultr-cli&lt;/code&gt;&lt;/a&gt; is mostly (!) good. The CLI has a limitation in that command output is text formatted and this makes it challenging to parse the output when scripting.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; The Vultr developers have a branch &lt;a href=&#34;https://github.com/vultr/vultr-cli/tree/rewrite&#34;&gt;&lt;code&gt;rewrite&lt;/code&gt;&lt;/a&gt; that includes a solution to this problem.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Example&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ID              12345678-90ab-cdef-1234-567890abcdef&#xA;LABEL           test&#xA;DATE CREATED    2022-01-01T00:00:00+00:00&#xA;CLUSTER SUBNET  255.255.255.255/16&#xA;SERVICE SUBNET  255.255.255.255/12&#xA;IP              255.255.255.255&#xA;ENDPOINT        12345678-90ab-cdef-1234-567890abcdef.vultr-k8s.com&#xA;VERSION         v1.23.5+3&#xA;REGION          mars&#xA;STATUS          pending&#xA; &#xA;NODE POOLS&#xA;ID              12345678-90ab-cdef-1234-567890abcdef&#xA;DATE CREATED    2022-01-01T00:00:00+00:00&#xA;DATE UPDATED    2022-01-01T00:00:00+00:00&#xA;LABEL           nodepool&#xA;TAG             foo&#xA;PLAN            vc2-1c-2gb&#xA;STATUS          pending&#xA;NODE QUANTITY   1&#xA;AUTO SCALER     false&#xA;MIN NODES       1&#xA;MAX NODES       1&#xA; &#xA;NODES&#xA;ID                                      DATE CREATED                    LABEL                   STATUS&#xA;12345678-&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Until that&amp;rsquo;s available, I&amp;rsquo;m lazy writing &lt;strong&gt;very simple&lt;/strong&gt; bash scripts to parse &lt;code&gt;vultr-cli&lt;/code&gt; command output as JSON. The repo is &lt;a href=&#34;https://github.com/DazWilkin/vultr-cli-format&#34;&gt;&lt;code&gt;vultr-cli-format&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus VPA Recommendations</title>
      <link>https://pretired.dazwilkin.com/posts/210305/</link>
      <pubDate>Fri, 05 Mar 2021 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210305/</guid>
      <description>&lt;p&gt;Phew!&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/For_Want_of_a_Nail&#34;&gt;For Want of a Nail&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;I was interested in learning how to &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/&#34;&gt;Manage Resources for Containers&lt;/a&gt;. On the way, I learned and discovered:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#kubectl-top&#34;&gt;&lt;code&gt;kubectl top&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#vertical-pod-autoscaler-vpa&#34;&gt;Vertical Pod Autoscaler&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;A (valuable) digression through &lt;a href=&#34;#digression-podmonitor&#34;&gt;PodMonitor&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#kube-state-metrics&#34;&gt;&lt;code&gt;kube-state-metrics&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#kubectl-patch&#34;&gt;`kubectl-patch&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Created a &lt;a href=&#34;#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;References&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;kubernetes-resources&#34;&gt;Kubernetes Resources&lt;/h2&gt;&#xA;&lt;p&gt;Visual Studio Code has begun to bug me (reasonably) to add &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/&#34;&gt;&lt;code&gt;resources&lt;/code&gt;&lt;/a&gt; to Kubernetes manifests.&lt;/p&gt;&#xA;&lt;p&gt;E.g.:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-YAML&#34; data-lang=&#34;YAML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;resources&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;limits&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;cpu&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;memory&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;512Mi&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I&amp;rsquo;ve been spending time with Deislab&amp;rsquo;s &lt;a href=&#34;https://github.com/deislabs/akri&#34;&gt;Akri&lt;/a&gt; and decided to determine whether Akri&amp;rsquo;s primary resources (Agent, Controller) and some of my creations HTTP Device and Discovery, were being suitably constrained.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Krustlet on DO Managed Kubernetes</title>
      <link>https://pretired.dazwilkin.com/posts/210122/</link>
      <pubDate>Fri, 22 Jan 2021 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210122/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve spent time this week returning to the interesting Deislabs project &lt;a href=&#34;https://github.com/deislabs/krustlet&#34;&gt;Krustlet&lt;/a&gt;. Since the last time, the bootstrapping process has been simplified using Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/&#34;&gt;Bootstrap Tokens&lt;/a&gt;. I know this updated process &lt;a href=&#34;https://github.com/deislabs/krustlet/blob/master/docs/howto/krustlet-on-microk8s.md&#34;&gt;works&lt;/a&gt; with &lt;a href=&#34;https://microk8s.io&#34;&gt;MicroK8s&lt;/a&gt;. Unfortunately, I&amp;rsquo;m struggling with it on &lt;a href=&#34;cloud.google.com/kubernetes-engine&#34;&gt;GKE&lt;/a&gt; and thought I&amp;rsquo;d try DigitalOcean Managed Kubernetes.&lt;/p&gt;&#xA;&lt;p&gt;It worked first time!&lt;/p&gt;&#xA;&lt;p&gt;In the following, we run both the Kubernetes cluster and the Krustlet Droplet on DigitalOcean but, as long as the cluster and the VM are able to communicate with one another, you should be able to run these anywhere.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes cert-manager</title>
      <link>https://pretired.dazwilkin.com/posts/210108/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/210108/</guid>
      <description>&lt;p&gt;I developed an &lt;a href=&#34;https://pretired.dazwilkin.com/posts/201229/&#34;&gt;admission webhook&lt;/a&gt; for Akri, twice (&lt;a href=&#34;https://github.com/DazWilkin/akri-webhook&#34;&gt;Golang&lt;/a&gt;, &lt;a href=&#34;https://github.com/DazWilkin/akri-webhook-rust&#34;&gt;Rust&lt;/a&gt;). I naively followed other examples for the generation of the certificates, created a 1.20 cluster and &lt;a href=&#34;https://stackoverflow.com/questions/65587904/&#34;&gt;broke&lt;/a&gt; that process.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;d briefly considered using &lt;a href=&#34;https://cert-manager.io&#34;&gt;&lt;code&gt;cert-manager&lt;/code&gt;&lt;/a&gt; recently but quickly abandoned the idea thinking it would be onerous and unnecessary complexity for little-old-me. I was wrong. It&amp;rsquo;s excellent and I recommend it highly.&lt;/p&gt;&#xA;&lt;p&gt;I won&amp;rsquo;t reproduce the &lt;code&gt;v1beta1&lt;/code&gt; and &lt;code&gt;v1&lt;/code&gt; examples from the Stackoverflow question as they should be self-explanatory. I suspect (!?) that I should not have used Kubernete&amp;rsquo;s (API Server&amp;rsquo;s) CA for the Webhook but it could well be that I just don&amp;rsquo;t understand the correct approach.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Webhooks</title>
      <link>https://pretired.dazwilkin.com/posts/201229/</link>
      <pubDate>Tue, 29 Dec 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201229/</guid>
      <description>&lt;p&gt;I spent some time last week writing my first &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/&#34;&gt;admission webhook&lt;/a&gt; for Kubernetes. I wrote the handler in Golang because I&amp;rsquo;m most familiar with Golang and because, as Kubernetes&amp;rsquo; native language, I was more confident that the necessary SDKs would exist and that the documentation would likely use Golang by default. I struggled to find useful documentation and so this post is to help you (and me!) remember how to do this next time!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Device Plugins</title>
      <link>https://pretired.dazwilkin.com/posts/201217/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201217/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m debugging an &lt;a href=&#34;https://github.com/deislabs/akri/issues/177&#34;&gt;issue&lt;/a&gt; with Akri &lt;code&gt;Zeroconf&lt;/code&gt; &lt;a href=&#34;https://github.com/DazWilkin/akri/tree/protocol-zeroconf&#34;&gt;protocol&lt;/a&gt; in which Instance environment variables are no longer (!) being surfaced within the Broker pods. In my adventures, it seemed useful to better understand how Akri works and specifically, how Akri uses Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/&#34;&gt;Device Plugins&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;IIUC plugins register with the Kubelet (!) via a gRPC service (&lt;code&gt;Registration&lt;/code&gt;) that the Kubelet exposes on a UNIX socket at &lt;code&gt;/var/lib/kubelet/device-plugins/kubelet.sock&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Then (!) if successful, devices should be reported by the Node&amp;rsquo;s metadata (spec) and available to be bound to Pods.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Akri</title>
      <link>https://pretired.dazwilkin.com/posts/201113/</link>
      <pubDate>Fri, 13 Nov 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201113/</guid>
      <description>&lt;p&gt;For the past couple of weeks, I&amp;rsquo;ve been playing around with &lt;a href=&#34;http://github.com/deislabs/akri&#34;&gt;Akri&lt;/a&gt;, a Microsoft (DeisLabs) project for &lt;a href=&#34;https://cloudblogs.microsoft.com/opensource/2020/10/20/announcing-akri-open-source-project-building-connected-edge-kubernetes/&#34;&gt;building a connected edge with Kubernetes&lt;/a&gt;. Kubernetes, IoT, Rust (and Golang) make this all compelling to me.&lt;/p&gt;&#xA;&lt;p&gt;Initially, I deployed an Akri &lt;a href=&#34;https://github.com/deislabs/akri/blob/main/docs/end-to-end-demo.md&#34;&gt;End-to-End&lt;/a&gt; to &lt;a href=&#34;https://microk8s.io/&#34;&gt;MicroK8s&lt;/a&gt; on Google Compute Engine (&lt;a href=&#34;https://github.com/deislabs/akri/blob/main/docs/end-to-end-demo-gce.md&#34;&gt;link&lt;/a&gt;) and Digital Ocean (&lt;a href=&#34;https://github.com/deislabs/akri/blob/main/docs/end-to-end-demo-do.md&#34;&gt;link&lt;/a&gt;). But I was interested to create me own example and so have proposed a very (!) simple &lt;a href=&#34;https://github.com/DazWilkin/akri/blob/protocol-http/docs/extensibility-http.md&#34;&gt;HTTP-based protocol&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This blog summarizes my thoughts about Akri and an explanation of the HTTP protocol implementation in the hope that this helps others.&lt;/p&gt;</description>
    </item>
    <item>
      <title>akri</title>
      <link>https://pretired.dazwilkin.com/posts/201022/</link>
      <pubDate>Thu, 22 Oct 2020 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/201022/</guid>
      <description>&lt;p&gt;I was very interested to read about Microsoft&amp;rsquo;s DeisLab&amp;rsquo;s latest (rust-based) Kubernetes project: &lt;a href=&#34;https://cloudblogs.microsoft.com/opensource/2020/10/20/announcing-akri-open-source-project-building-connected-edge-kubernetes/&#34;&gt;akri&lt;/a&gt;. If I understand it correctly, it provides a mechanism to make any (IoT) device accessible to containers running within a cluster. I need to spend more time playing around with it so that I can fully understand it. I had some problems getting the &lt;a href=&#34;https://github.com/deislabs/akri/blob/main/docs/end-to-end-demo.md&#34;&gt;End-to-End&lt;/a&gt; demo running on Google Compute Engine (and then I tried DigitalOcean droplet) instances. So, here&amp;rsquo;s a two-ways solution to get you going.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Accessing GCR repos from Kubernetes</title>
      <link>https://pretired.dazwilkin.com/posts/200207/</link>
      <pubDate>Fri, 07 Feb 2020 00:00:00 -0800</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/200207/</guid>
      <description>&lt;p&gt;Until today, I&amp;rsquo;d not accessed a &lt;a href=&#34;https://cloud.google.com/container-registry&#34;&gt;Google Container Registry&lt;/a&gt; repo from a &lt;strong&gt;non-GKE&lt;/strong&gt; Kubernetes deployment.&lt;/p&gt;&#xA;&lt;p&gt;It turns out that it&amp;rsquo;s pretty well-documented (&lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/&#34;&gt;link&lt;/a&gt;) but, here&amp;rsquo;s an end-end example.&lt;/p&gt;&#xA;&lt;p&gt;Assuming:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BILLING&lt;span style=&#34;color:#f92672&#34;&gt;=[[&lt;/span&gt;YOUR-BILLING&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PROJECT&lt;span style=&#34;color:#f92672&#34;&gt;=[[&lt;/span&gt;YOUR-PROJECT&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SERVER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;us.gcr.io&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If not already:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud projects create &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;$PROJECT&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud beta billing projects link &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--billing-account&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BILLING&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud services enable containerregistry.googleapis.com &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--project&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;container-registry&#34;&gt;Container Registry&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IMAGE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;busybox&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Or ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;IMAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker tag &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;IMAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SERVER&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;IMAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker push &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SERVER&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;IMAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud container images list-tags &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SERVER&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJECT&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;IMAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;service-account&#34;&gt;Service Account&lt;/h2&gt;&#xA;&lt;p&gt;Create a service account that&amp;rsquo;s permitted to download (read-only) images from this project&amp;rsquo;s registry&lt;/p&gt;</description>
    </item>
    <item>
      <title>NGINX Ingress</title>
      <link>https://pretired.dazwilkin.com/posts/191211/</link>
      <pubDate>Wed, 11 Dec 2019 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/191211/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve written a couple of deployment options (Google Compute Engine; Kubernetes) for an open-source project. The Kubernetes deployment provides &lt;code&gt;NodePort&lt;/code&gt; and (TCP) &lt;code&gt;LoadBalancer&lt;/code&gt; options and I&amp;rsquo;ve been trying (unsuccessfully) to add HTTPS Load-balancing.&lt;/p&gt;&#xA;&lt;p&gt;I should (!) try to deploy to &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/&#34;&gt;Google Kubernetes Engine (GKE)&lt;/a&gt; but I&amp;rsquo;ve been using &lt;a href=&#34;https://microk8s.io&#34;&gt;microk8s&lt;/a&gt;, Digital Ocean &lt;a href=&#34;https://www.digitalocean.com/products/kubernetes/&#34;&gt;Managed Kubernetes&lt;/a&gt; and the Linode &lt;a href=&#34;https://www.linode.com/products/kubernetes/&#34;&gt;LKE&lt;/a&gt; Beta. Each of these requires an implementation of Ingress controller. For GKE, GCP&amp;rsquo;s HTTP/S Load-balancer (GCLB) is used. But, for the other services, NGINX Ingress is a good option and so I&amp;rsquo;ve been exploring NGINX Ingress (Controller) &lt;a href=&#34;https://kubernetes.github.io/ingress-nginx/&#34;&gt;link&lt;/a&gt;. This Ingress appears to work except that I&amp;rsquo;ve been unable to get it to work with mutual TLS between the (NGINX) proxy and my backend services.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Engine and Free Tier</title>
      <link>https://pretired.dazwilkin.com/posts/190924/</link>
      <pubDate>Tue, 24 Sep 2019 09:40:14 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/190924/</guid>
      <description>&lt;p&gt;Google Cloud Platform &lt;a href=&#34;https://cloud.google.com/free/&#34;&gt;Free Tier&lt;/a&gt; appears (&lt;!-- raw HTML omitted --&gt;please verify this for yourself&lt;!-- raw HTML omitted --&gt;) to provide the ability to run a(n admittedly miniscule) Kubernetes cluster for free. So, why do this? It provides a definitive Kubernetes (Engine) experience on Google Cloud Platform that you may use for learning and testing.&lt;/p&gt;&#xA;&lt;p&gt;Kubernetes Engine the master node(s) and the control plane are &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/pricing&#34;&gt;free&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Kubernetes (i.e. Compute Engine) nodes potentially incur charges including for the VM runtime and any attached storage, snapshots etc. However, charges for these resources can be partially covered by the Free Tier.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
