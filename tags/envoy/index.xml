<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>envoy on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/envoy/</link>
    <description>Recent content in envoy on (p)retired</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Jul 2020 00:00:00 -0700</lastBuildDate><atom:link href="https://pretired.dazwilkin.com/tags/envoy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Envoy WASM filters in Rust</title>
      <link>https://pretired.dazwilkin.com/posts/200723/</link>
      <pubDate>Thu, 23 Jul 2020 00:00:00 -0700</pubDate>
      
      <guid>https://pretired.dazwilkin.com/posts/200723/</guid>
      <description>A digression thanks to Sal Rashid who&amp;rsquo;s exploring WASM filters w/ Envoy.
The documentation is sparse but:
How to write WASM filters for Envoy&amp;hellip; There is a Rust SDK but it&amp;rsquo;s not documented:
proxy-wasm-rust-sdk I found two useful posts by Rustaceans who were able to make use of it:
Extending Envoy with WASM and Rust Extending Istio with Rust and WebAssembly Here&amp;rsquo;s my simple use of the SDK&amp;rsquo;s examples.
wasme curl -sL https://run.</description>
    </item>
    
  </channel>
</rss>
