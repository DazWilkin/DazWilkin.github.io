<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wokwi on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/wokwi/</link>
    <description>Recent content in Wokwi on (p)retired</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Sep 2025 00:00:00 -0700</lastBuildDate>
    <atom:link href="https://pretired.dazwilkin.com/tags/wokwi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bare Metal: Pico and CYW43</title>
      <link>https://pretired.dazwilkin.com/posts/250905/</link>
      <pubDate>Thu, 04 Sep 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250905/</guid>
      <description>&lt;p&gt;The &amp;ldquo;W&amp;rdquo; signifies that the board includes wireless. Interestingly, the wireless chip is an &lt;a href=&#34;https://www.infineon.com/part/CYW43439&#34;&gt;Infineon CYW43439&lt;/a&gt;) which is itself a microcontroller running its own ARM Cortex chip (M3). The Pico&amp;rsquo;s USB device includes another ARM microcontroller. So, with the dual Cortex (or Hazard) chips that are user programmable, and the 8 PIOs, these devices really pack a punch.&lt;/p&gt;&#xA;&lt;p&gt;As a result of adding the wireless (microcontroller) chip to the Pico, the Pico W&amp;rsquo;s on-board LED is accessible only through the CYW43439. Yeah, weird but it makes for an interesting solution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bare Metal: WS2812</title>
      <link>https://pretired.dazwilkin.com/posts/250904/</link>
      <pubDate>Thu, 04 Sep 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250904/</guid>
      <description>&lt;p&gt;This one works!&lt;/p&gt;&#xA;&lt;h2 id=&#34;virtual-ws2812s&#34;&gt;Virtual WS2812s&lt;/h2&gt;&#xA;&lt;!--![1-Wire ESP32-C3 w/ WS2812](/images/250904.esp32-c3.ws2812.png)--&gt;&#xA;&lt;video autoplay controls loop&gt;&#xA;    &lt;source src=&#34;https://pretired.dazwilkin.com/videos/250904.esp32-c3.ws2812.gpio4.webm&#34; type=&#34;video/webm&#34; /&gt;&#xA;&lt;/video&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gist.github.com/DazWilkin/7c2deded3ec5f7899f5d850ebd624cfb#file-diagram-json&#34;&gt;&lt;code&gt;diagram.json&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;d gone &lt;em&gt;cough&lt;/em&gt; many years and never heard of 1-Wire and, suddenly, it&amp;rsquo;s everywhere.&lt;/p&gt;&#xA;&lt;p&gt;Addressable LEDs are hugely popular in tinkerer circles. Addressable LEDs come in myriad forms (wheels, matrices) but commonly they&amp;rsquo;re sold as long strips. The part number is &lt;a href=&#34;https://cdn-shop.adafruit.com/datasheets/WS2812B.pdf&#34;&gt;WS2812&lt;/a&gt; and they use 1-Wire too. Each, often multi-color (RGB) LED (often known as a pixel), is combined with an IC that enables the &amp;ldquo;addressable&amp;rdquo; behavior.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bare Metal: DS18B20</title>
      <link>https://pretired.dazwilkin.com/posts/250903/</link>
      <pubDate>Wed, 03 Sep 2025 00:00:00 -0700</pubDate>
      <guid>https://pretired.dazwilkin.com/posts/250903/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been working through Google&amp;rsquo;s &lt;a href=&#34;https://google.github.io/comprehensive-rust/&#34;&gt;Comprehensive Rust&lt;/a&gt; and, for the past couple of weeks, the &lt;a href=&#34;https://google.github.io/comprehensive-rust/bare-metal.html&#34;&gt;Bare Metal Rust&lt;/a&gt; standalone course that uses the (excellent) &lt;a href=&#34;https://tech.microbit.org/hardware/2-0-revision/&#34;&gt;micro:bit v2&lt;/a&gt; that has a Nordic Semiconductor &lt;a href=&#34;https://tech.microbit.org/hardware/2-0-revision/#nrf52-application-processor&#34;&gt;nRF52833&lt;/a&gt; (an ARM Cortex-M4; interestingly its USB interface is also implemented using an ARM Cortex M0).&lt;/p&gt;&#xA;&lt;p&gt;There&amp;rsquo;s a wealth of Rust tutorials for microcontrollers and I bought an &lt;a href=&#34;https://www.espressif.com/en/dev-board/esp32-c3-devkit-rust-1-en&#34;&gt;ESP32-C3-DevKit-RUST-1&lt;/a&gt; for another tutorial and spent some time with my favorite &lt;a href=&#34;https://www.raspberrypi.com/products/raspberry-pi-pico/&#34;&gt;Pi Pico&lt;/a&gt; and a newly-acquired &lt;a href=&#34;https://www.raspberrypi.com/products/debug-probe/&#34;&gt;Debug Probe&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
