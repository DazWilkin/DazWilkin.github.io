<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>firestore on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/firestore/</link>
    <description>Recent content in firestore on (p)retired</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 03 May 2022 00:00:00 -0700</lastBuildDate><atom:link href="https://pretired.dazwilkin.com/tags/firestore/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automating Scheduled Firestore Exports</title>
      <link>https://pretired.dazwilkin.com/posts/220503/</link>
      <pubDate>Tue, 03 May 2022 00:00:00 -0700</pubDate>
      
      <guid>https://pretired.dazwilkin.com/posts/220503/</guid>
      <description>For my &amp;ldquo;thing&amp;rdquo;, I use Firestore to persist state. I like Firestore a lot and, having been around Google for almost (!) a decade, I much prefer it to Datastore.
Firestore has a managed export|import service and I use this to backup Firestore collections|documents.
I&amp;rsquo;d been doing backups manually (using gcloud) and decided today to take the plunge and use Cloud Scheduler for the first time. I&amp;rsquo;d been reluctant to do this until now because I&amp;rsquo;d assumed incorrectly that I&amp;rsquo;d need to write a wrapping service to invoke the export.</description>
    </item>
    
    <item>
      <title>Firestore Golang Timestamps &amp; Merging</title>
      <link>https://pretired.dazwilkin.com/posts/210506/</link>
      <pubDate>Thu, 06 May 2021 00:00:00 -0700</pubDate>
      
      <guid>https://pretired.dazwilkin.com/posts/210506/</guid>
      <description>I&amp;rsquo;m using Google&amp;rsquo;s Golang SDK for Firestore. The experience is excellent and I&amp;rsquo;m quikcly becoming a fan of Firestore. However, as a Golang Firestore developer, I&amp;rsquo;m feeling less loved and some of the concepts in the database were causing me a conundrum.
I&amp;rsquo;m still not entirely certain that I have Timestamps nailed but&amp;hellip; I learned an important lesson on the auto-creation of Timestamps in documents and how to retain these values.</description>
    </item>
    
    <item>
      <title>Cloud Firestore Triggers in Golang</title>
      <link>https://pretired.dazwilkin.com/posts/210413/</link>
      <pubDate>Mon, 12 Apr 2021 00:00:00 -0700</pubDate>
      
      <guid>https://pretired.dazwilkin.com/posts/210413/</guid>
      <description>I was pleased to discover that Google provides a non-Node.JS mechanism to subscribe to and act upon Firestore triggers, Google Cloud Firestore Triggers. I&amp;rsquo;ve nothing against Node.JS but, for the project i&amp;rsquo;m developing, everything else is written in Golang. It&amp;rsquo;s good to keep it all in one language.
I&amp;rsquo;m perplexed that Cloud Functions still (!) only supports Go 1.13 (03-Sep-2019). Even Go 1.14 (25-Feb-2020) was released pre-pandemic and we&amp;rsquo;re now running on 1.</description>
    </item>
    
    <item>
      <title>Using Golang with the Firestore Emulator</title>
      <link>https://pretired.dazwilkin.com/posts/210317/</link>
      <pubDate>Wed, 17 Mar 2021 00:00:00 -0700</pubDate>
      
      <guid>https://pretired.dazwilkin.com/posts/210317/</guid>
      <description>This works great but it wasn&amp;rsquo;t clearly documented for non-Firebase users. I assume it will work, as well, for any of the client libraries (not just Golang).
Assuming you have some (Golang) code (in this case using the Google Cloud Client Library) that interacts with a Firestore database. Something of the form:
package main import ( &amp;#34;context&amp;#34; &amp;#34;crypto/sha256&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;log&amp;#34; &amp;#34;os&amp;#34; &amp;#34;time&amp;#34; &amp;#34;cloud.google.com/go/firestore&amp;#34; ) func hash(s string) string { h := sha256.</description>
    </item>
    
  </channel>
</rss>
