<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>firebase on (p)retired</title>
    <link>https://pretired.dazwilkin.com/tags/firebase/</link>
    <description>Recent content in firebase on (p)retired</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Nov 2021 00:00:00 -0800</lastBuildDate><atom:link href="https://pretired.dazwilkin.com/tags/firebase/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Adding Authorized Domains to Firebase Auth</title>
      <link>https://pretired.dazwilkin.com/posts/211111/</link>
      <pubDate>Thu, 11 Nov 2021 00:00:00 -0800</pubDate>
      
      <guid>https://pretired.dazwilkin.com/posts/211111/</guid>
      <description>In my experience, Firebase Authentication is a relatively straightforward tool to provide federated (e.g. Google, Microsoft, Twitter etc.) authentication. I&amp;rsquo;m using it to manage identities for an app that I&amp;rsquo;m building where I need web and gRPC auth. Firebase Auth provides a JWT that I can then funnel through Google&amp;rsquo;s Cloud Endpoints to authenticate gRPC services.
Firebase Auth configuration is biased towards the Firebase Console but I wanted to be able to programmatically revise the list of Authorized Domains.</description>
    </item>
    
    <item>
      <title>Firebase Authentication, Cloud Endpoints and gRPC (2of2)</title>
      <link>https://pretired.dazwilkin.com/posts/210618/</link>
      <pubDate>Fri, 18 Jun 2021 00:00:00 -0700</pubDate>
      
      <guid>https://pretired.dazwilkin.com/posts/210618/</guid>
      <description>Earlier this week, I wrote about using Firebase Authentcation, Cloud Endpoints and gRPC (1of2). Since then, I learned some more and added a gRPC interceptor to implement basic authorization for the service.
ESPv2 --allow-unauthenticated The Cloud Enpoints (ESPv2) proxy must be run as --allow-unauthenticated on Cloud Run to ensure that requests make it to the proxy where the request is authenticated and only authenticated requests make it on to the backend service.</description>
    </item>
    
    <item>
      <title>Firebase Authentication, Cloud Endpoints and gRPC (1of2)</title>
      <link>https://pretired.dazwilkin.com/posts/210614/</link>
      <pubDate>Mon, 14 Jun 2021 00:00:00 -0700</pubDate>
      
      <guid>https://pretired.dazwilkin.com/posts/210614/</guid>
      <description>I&amp;rsquo;m building a service that requires user authentication. The primary endpoint is a gRPC-based service. I would like to consider using certificate-based auth but this feels&amp;hellip; challenging. Instead, I have been aware of, but never used, Firebase Authentication and was interested to see that Cloud Endpoints includes Firebase Authentication as one of its supported auth mechanisms. Curiosity piqued, I confirmed that gRPC supports Google token-based authentication.
The following is a summary of what I did but I&amp;rsquo;ll leave the extensive documentation to Google, (Google&amp;rsquo;s) Firebase and gRPC, all of which, in this case, provide really good explanations.</description>
    </item>
    
  </channel>
</rss>
